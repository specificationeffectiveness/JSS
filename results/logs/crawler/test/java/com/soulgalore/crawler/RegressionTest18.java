package com.soulgalore.crawler;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest18 {

    public static boolean debug = false;

    @Test
    public void test09001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09001");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.proxy", "", (int) (short) -1, (long) 583);
        com.soulgalore.crawler.guice.ExecutorServiceProvider executorServiceProvider6 = new com.soulgalore.crawler.guice.ExecutorServiceProvider((int) (byte) 10);
        boolean boolean7 = assetResponse4.equals((java.lang.Object) (byte) 10);
        java.lang.String str8 = assetResponse4.getReferer();
        int int9 = assetResponse4.getResponseCode();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray10 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet11 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet11, assetResponseArray10);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray13 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet14 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet14, assetResponseArray13);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult16 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet11, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet14);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet17 = assetsVerificationResult16.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = assetsVerificationResult16.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet19 = assetsVerificationResult16.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = assetsVerificationResult16.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray21 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, assetResponseArray21);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray24 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25, assetResponseArray24);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult27 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet28 = assetsVerificationResult27.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult29 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet20, assetResponseSet28);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet30 = assetsVerificationResult29.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet31 = assetsVerificationResult29.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray32 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet33 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33, assetResponseArray32);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray35 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet36 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet36, assetResponseArray35);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult38 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet36);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet39 = assetsVerificationResult38.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = assetsVerificationResult38.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet41 = assetsVerificationResult38.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult42 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet31, assetResponseSet41);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet43 = assetsVerificationResult42.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray44 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet45 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet45, assetResponseArray44);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray47 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet48 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet48, assetResponseArray47);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult50 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet45, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet48);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet51 = assetsVerificationResult50.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet52 = assetsVerificationResult50.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet53 = assetsVerificationResult50.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet54 = assetsVerificationResult50.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet55 = assetsVerificationResult50.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet56 = assetsVerificationResult50.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet57 = assetsVerificationResult50.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult58 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet43, assetResponseSet57);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet59 = assetsVerificationResult58.getWorkingAssets();
        boolean boolean60 = assetResponse4.equals((java.lang.Object) assetsVerificationResult58);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(assetResponseArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(assetResponseArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(assetResponseSet17);
        org.junit.Assert.assertNotNull(assetResponseSet18);
        org.junit.Assert.assertNotNull(assetResponseSet19);
        org.junit.Assert.assertNotNull(assetResponseSet20);
        org.junit.Assert.assertNotNull(assetResponseArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(assetResponseArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(assetResponseSet28);
        org.junit.Assert.assertNotNull(assetResponseSet30);
        org.junit.Assert.assertNotNull(assetResponseSet31);
        org.junit.Assert.assertNotNull(assetResponseArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(assetResponseArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(assetResponseSet39);
        org.junit.Assert.assertNotNull(assetResponseSet40);
        org.junit.Assert.assertNotNull(assetResponseSet41);
        org.junit.Assert.assertNotNull(assetResponseSet43);
        org.junit.Assert.assertNotNull(assetResponseArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(assetResponseArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(assetResponseSet51);
        org.junit.Assert.assertNotNull(assetResponseSet52);
        org.junit.Assert.assertNotNull(assetResponseSet53);
        org.junit.Assert.assertNotNull(assetResponseSet54);
        org.junit.Assert.assertNotNull(assetResponseSet55);
        org.junit.Assert.assertNotNull(assetResponseSet56);
        org.junit.Assert.assertNotNull(assetResponseSet57);
        org.junit.Assert.assertNotNull(assetResponseSet59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test09002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09002");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.util.Map<java.lang.String, java.lang.String> strMap30 = hTMLPageResponse29.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean34 = crawlerURL33.isWrongSyntax();
        java.lang.String str35 = crawlerURL33.getReferer();
        java.lang.String str36 = crawlerURL33.getHost();
        java.lang.String str37 = crawlerURL33.getUrl();
        boolean boolean38 = hTMLPageResponse29.equals((java.lang.Object) crawlerURL33);
        java.lang.String str39 = hTMLPageResponse29.getUrl();
        java.lang.String str40 = hTMLPageResponse29.getUrl();
        java.lang.String str41 = hTMLPageResponse29.getResponseType();
        java.lang.String str42 = hTMLPageResponse29.getUrl();
        org.jsoup.nodes.Document document43 = hTMLPageResponse29.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL44 = hTMLPageResponse29.getPageUrl();
        int int45 = hTMLPageResponse29.getResponseCode();
        java.lang.String str46 = hTMLPageResponse29.getUrl();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "urls.txt" + "'", str35, "urls.txt");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "com.soulgalore.crawler.auth" + "'", str37, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "com.soulgalore.crawler.auth" + "'", str39, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "com.soulgalore.crawler.auth" + "'", str40, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1" + "'", str41, "-1");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "com.soulgalore.crawler.auth" + "'", str42, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document43);
        org.junit.Assert.assertNotNull(crawlerURL44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "com.soulgalore.crawler.auth" + "'", str46, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test09003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09003");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:hi!", "errorassets.csv");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI6 = crawlerURL5.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder9.build();
        java.lang.String str11 = crawlerConfiguration10.getStartUrl();
        int int12 = crawlerConfiguration10.getMaxLevels();
        int int13 = crawlerConfiguration10.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean17 = crawlerURL16.isWrongSyntax();
        java.lang.String str18 = crawlerURL16.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse26 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL16, (int) 'a', strMap20, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str27 = hTMLPageResponse26.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL28 = hTMLPageResponse26.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = hTMLPageResponse26.getResponseHeaders();
        java.lang.String str30 = hTMLPageResponse26.getUrl();
        org.jsoup.nodes.Document document31 = hTMLPageResponse26.getBody();
        boolean boolean32 = crawlerConfiguration10.equals((java.lang.Object) hTMLPageResponse26);
        boolean boolean33 = crawlerURL5.equals((java.lang.Object) hTMLPageResponse26);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = builder35.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration38 = builder37.build();
        java.lang.String str39 = crawlerConfiguration38.getStartUrl();
        int int40 = crawlerConfiguration38.getMaxLevels();
        int int41 = crawlerConfiguration38.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = crawlerConfiguration38.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse48 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, 582, strMap42, "urls.txt", "hi!", (long) (short) 0, "AssetResponseCallable url:result.csv", 10L);
        java.util.Map<java.lang.String, java.lang.String> strMap49 = hTMLPageResponse48.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse55 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (short) 0, strMap49, "AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", "AssetResponseCallable url:com.soulgalore.crawler.auth", (long) (byte) 10, "com.soulgalore.crawler.auth", (long) '#');
        java.lang.String str57 = hTMLPageResponse55.getHeaderValue("CrawlerURL url:35");
        java.lang.String str58 = hTMLPageResponse55.getEncoding();
        org.junit.Assert.assertNull(uRI6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "urls.txt" + "'", str18, "urls.txt");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str27, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "com.soulgalore.crawler.auth" + "'", str30, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(crawlerConfiguration38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "AssetResponseCallable url:com.soulgalore.crawler.auth" + "'", str58, "AssetResponseCallable url:com.soulgalore.crawler.auth");
    }

    @Test
    public void test09004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09004");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration5.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = crawlerConfiguration5.getRequestHeadersMap();
        java.lang.String str9 = crawlerConfiguration5.getRequestHeaders();
        boolean boolean10 = crawlerConfiguration5.isVerifyUrls();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test09005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09005");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:HTMLPageResponseurl:hi!responseCode:52encoding:urls.txt type:CrawlerURL url:com.soulgalore.crawler.auth");
    }

    @Test
    public void test09006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09006");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        long long5 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean9 = crawlerURL8.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder11.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration16 = builder11.build();
        java.lang.String str17 = crawlerConfiguration16.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = crawlerConfiguration16.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse24 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, (-1), strMap18, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        boolean boolean25 = assetResponse4.equals((java.lang.Object) strMap18);
        java.lang.String str26 = assetResponse4.getReferer();
        java.lang.String str27 = assetResponse4.getReferer();
        long long28 = assetResponse4.getFetchTime();
        long long29 = assetResponse4.getFetchTime();
        java.lang.String str30 = assetResponse4.getReferer();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse35 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:Unknown error", "AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", 582, (long) 1);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder36.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder36.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder36.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder44 = builder42.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder46 = builder44.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder48 = builder44.setMaxLevels(10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder50 = builder44.setOnlyOnPath("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder52 = builder50.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder54 = builder52.setStartUrl("AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        boolean boolean55 = assetResponse35.equals((java.lang.Object) builder52);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder57 = builder52.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder59 = builder52.setStartUrl("CrawlerURL url:Wrong content type");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration60 = builder59.build();
        boolean boolean61 = assetResponse4.equals((java.lang.Object) crawlerConfiguration60);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 100L + "'", long5 == 100L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(crawlerConfiguration16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str26, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str27, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 100L + "'", long28 == 100L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 100L + "'", long29 == 100L);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str30, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(crawlerConfiguration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test09007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09007");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int13 = hTMLPageResponse12.getResponseCode();
        java.lang.String str14 = hTMLPageResponse12.getResponseType();
        java.lang.String str15 = hTMLPageResponse12.getResponseType();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = hTMLPageResponse12.getHeaderValue("1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test09008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09008");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int13 = hTMLPageResponse12.getResponseCode();
        java.lang.String str14 = hTMLPageResponse12.getResponseType();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        long long16 = hTMLPageResponse12.getFetchTime();
        java.lang.String str17 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray19 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet20, assetResponseArray19);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray22 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet23 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23, assetResponseArray22);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult25 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet20, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = assetsVerificationResult25.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet27 = assetsVerificationResult25.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray28 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, assetResponseArray28);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray31 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet32 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32, assetResponseArray31);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult34 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet35 = assetsVerificationResult34.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet36 = assetsVerificationResult34.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray37 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet38 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet38, assetResponseArray37);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray40 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet41, assetResponseArray40);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult43 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet38, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet41);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult44 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet36, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet38);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray45 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet46 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet46, assetResponseArray45);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray48 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet49 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet49, assetResponseArray48);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult51 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet46, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet49);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet52 = assetsVerificationResult51.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult53 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet36, assetResponseSet52);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult54 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet27, assetResponseSet36);
        boolean boolean55 = crawlerURL18.equals((java.lang.Object) assetResponseSet27);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "com.soulgalore.crawler.auth" + "'", str17, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertNotNull(assetResponseArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(assetResponseArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(assetResponseSet26);
        org.junit.Assert.assertNotNull(assetResponseSet27);
        org.junit.Assert.assertNotNull(assetResponseArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(assetResponseArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(assetResponseSet35);
        org.junit.Assert.assertNotNull(assetResponseSet36);
        org.junit.Assert.assertNotNull(assetResponseArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(assetResponseArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(assetResponseArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(assetResponseArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(assetResponseSet52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test09009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09009");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder2.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder2.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration9 = builder2.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder2.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder2.setNotOnPath("result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder2.setMaxLevels(52);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder15.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration18 = builder17.build();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = crawlerConfiguration18.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable21 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("HTMLPageResponseurl:responseCode:308encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt type:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", assetFetcher1, strMap19, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(crawlerConfiguration9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(crawlerConfiguration18);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test09010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09010");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean4 = crawlerURL3.isWrongSyntax();
        java.lang.String str5 = crawlerURL3.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse13 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL3, (int) 'a', strMap7, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int14 = hTMLPageResponse13.getResponseCode();
        java.lang.String str15 = hTMLPageResponse13.getResponseType();
        java.lang.String str16 = hTMLPageResponse13.toString();
        java.lang.String str17 = hTMLPageResponse13.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray22 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL21 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet23 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet23, crawlerURLArray22);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet25 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray26 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet27 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet27, hTMLPageResponseArray26);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult29 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet23, hTMLPageResponseSet25, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet27);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet30 = crawlerResult29.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet31 = crawlerResult29.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet32 = crawlerResult29.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet33 = crawlerResult29.getUrls();
        boolean boolean34 = hTMLPageResponse13.equals((java.lang.Object) crawlerURLSet33);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet35 = null;
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet36 = null;
        com.soulgalore.crawler.core.CrawlerResult crawlerResult37 = new com.soulgalore.crawler.core.CrawlerResult("Redirected to new domain", crawlerURLSet33, hTMLPageResponseSet35, hTMLPageResponseSet36);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet38 = crawlerResult37.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet39 = crawlerResult37.getUrls();
        java.lang.String str40 = crawlerResult37.getTheStartPoint();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "urls.txt" + "'", str5, "urls.txt");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 97 + "'", int14 == 97);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "com.soulgalore.crawler.auth" + "'", str17, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURLArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet30);
        org.junit.Assert.assertNotNull(crawlerURLSet31);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet32);
        org.junit.Assert.assertNotNull(crawlerURLSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet38);
        org.junit.Assert.assertNotNull(crawlerURLSet39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Redirected to new domain" + "'", str40, "Redirected to new domain");
    }

    @Test
    public void test09011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09011");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:-1encoding:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads type:AssetResponseCallable url:errorassets.csv", "AssetResponseCallable url:AssetResponseCallable url:com.soulgalore.crawler.auth");
        java.lang.String str3 = crawlerURL2.getReferer();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AssetResponseCallable url:AssetResponseCallable url:com.soulgalore.crawler.auth" + "'", str3, "AssetResponseCallable url:AssetResponseCallable url:com.soulgalore.crawler.auth");
    }

    @Test
    public void test09012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09012");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        org.jsoup.nodes.Document document15 = hTMLPageResponse12.getBody();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder16.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration21 = builder16.build();
        java.lang.String str22 = crawlerConfiguration21.getRequestHeaders();
        java.lang.Class<?> wildcardClass23 = crawlerConfiguration21.getClass();
        boolean boolean24 = hTMLPageResponse12.equals((java.lang.Object) crawlerConfiguration21);
        org.jsoup.nodes.Document document25 = hTMLPageResponse12.getBody();
        int int26 = hTMLPageResponse12.getResponseCode();
        java.lang.String str27 = hTMLPageResponse12.getUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(document15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(crawlerConfiguration21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(document25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 97 + "'", int26 == 97);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "com.soulgalore.crawler.auth" + "'", str27, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test09013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09013");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setStartUrl("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder16.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration21 = builder20.build();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(crawlerConfiguration21);
    }

    @Test
    public void test09014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09014");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray9 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, assetResponseArray9);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray12 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13, assetResponseArray12);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult15 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult16 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet8, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray17 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, assetResponseArray17);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray20 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet21 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21, assetResponseArray20);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult23 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet24 = assetsVerificationResult23.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = assetsVerificationResult23.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = assetsVerificationResult23.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet27 = assetsVerificationResult23.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray28 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, assetResponseArray28);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray31 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet32 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32, assetResponseArray31);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult34 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet35 = assetsVerificationResult34.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet36 = assetsVerificationResult34.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray37 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet38 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet38, assetResponseArray37);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray40 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet41, assetResponseArray40);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult43 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet38, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet41);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult44 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet36, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet38);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult45 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet27, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet38);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult46 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, assetResponseSet27);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray47 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet48 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet48, assetResponseArray47);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray50 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet51 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet51, assetResponseArray50);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult53 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet48, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet51);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet54 = assetsVerificationResult53.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet55 = assetsVerificationResult53.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet56 = assetsVerificationResult53.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet57 = assetsVerificationResult53.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray58 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet59 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet59, assetResponseArray58);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray61 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet62 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet62, assetResponseArray61);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult64 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet59, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet62);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet65 = assetsVerificationResult64.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult66 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet57, assetResponseSet65);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet67 = assetsVerificationResult66.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet68 = assetsVerificationResult66.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet69 = assetsVerificationResult66.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult70 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet27, assetResponseSet69);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet71 = assetsVerificationResult70.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet72 = assetsVerificationResult70.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet73 = assetsVerificationResult70.getWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(assetResponseArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(assetResponseArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(assetResponseArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(assetResponseSet24);
        org.junit.Assert.assertNotNull(assetResponseSet25);
        org.junit.Assert.assertNotNull(assetResponseSet26);
        org.junit.Assert.assertNotNull(assetResponseSet27);
        org.junit.Assert.assertNotNull(assetResponseArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(assetResponseArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(assetResponseSet35);
        org.junit.Assert.assertNotNull(assetResponseSet36);
        org.junit.Assert.assertNotNull(assetResponseArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(assetResponseArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(assetResponseArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(assetResponseArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(assetResponseSet54);
        org.junit.Assert.assertNotNull(assetResponseSet55);
        org.junit.Assert.assertNotNull(assetResponseSet56);
        org.junit.Assert.assertNotNull(assetResponseSet57);
        org.junit.Assert.assertNotNull(assetResponseArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(assetResponseArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(assetResponseSet65);
        org.junit.Assert.assertNotNull(assetResponseSet67);
        org.junit.Assert.assertNotNull(assetResponseSet68);
        org.junit.Assert.assertNotNull(assetResponseSet69);
        org.junit.Assert.assertNotNull(assetResponseSet71);
        org.junit.Assert.assertNotNull(assetResponseSet72);
        org.junit.Assert.assertNotNull(assetResponseSet73);
    }

    @Test
    public void test09015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09015");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.http.socket.timeout", "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:");
    }

    @Test
    public void test09016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09016");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setStartUrl("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder0.setNotOnPath("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setStartUrl("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("97");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setStartUrl("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setStartUrl("100");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setNotOnPath("Redirected to new domain");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder18.setStartUrl("CrawlerURL url:CrawlerURL url:CrawlerURL url:errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration23 = builder18.build();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(crawlerConfiguration23);
    }

    @Test
    public void test09017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09017");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider(308, (int) (byte) 100, (-1), "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:97encoding:52 type:CrawlerURL url:com.soulgalore.crawler.auth", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"com.soulgalore.crawler.nrofhttpthreadsresponseCode\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09018");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        long long16 = hTMLPageResponse12.getFetchTime();
        java.lang.String str17 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.guice.ExecutorServiceProvider executorServiceProvider20 = new com.soulgalore.crawler.guice.ExecutorServiceProvider((int) ' ');
        java.util.concurrent.ExecutorService executorService21 = executorServiceProvider20.get();
        java.util.concurrent.ExecutorService executorService22 = executorServiceProvider20.get();
        boolean boolean23 = hTMLPageResponse12.equals((java.lang.Object) executorServiceProvider20);
        java.lang.String str24 = hTMLPageResponse12.getUrl();
        java.lang.String str25 = hTMLPageResponse12.toString();
        java.lang.String str26 = hTMLPageResponse12.getResponseType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str17, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertNotNull(executorService21);
        org.junit.Assert.assertNotNull(executorService22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "com.soulgalore.crawler.auth" + "'", str24, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str25, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
    }

    @Test
    public void test09019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09019");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil2 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = headerUtil2.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil2.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = headerUtil2.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt");
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil2.createHeadersFromString("AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable12 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:32encoding:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", assetFetcher1, strMap10, "CrawlerURL url:CrawlerURL url:errorassets.csv");
        java.lang.String str13 = assetResponseCallable12.toString();
        java.lang.String str14 = assetResponseCallable12.toString();
        java.lang.String str15 = assetResponseCallable12.toString();
        org.junit.Assert.assertNotNull(headerUtil2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:32encoding:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str13, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:32encoding:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:32encoding:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str14, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:32encoding:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:32encoding:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str15, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:32encoding:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
    }

    @Test
    public void test09020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09020");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider(35, (int) (byte) -1, 52, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", "1");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"AssetResponseCallable url\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09021");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray20 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL19 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet21 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet21, crawlerURLArray20);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet23 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray24 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet25 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet25, hTMLPageResponseArray24);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult27 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet21, hTMLPageResponseSet23, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet25);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet28 = crawlerResult27.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet29 = crawlerResult27.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet30 = crawlerResult27.getUrls();
        java.lang.String str31 = crawlerResult27.getTheStartPoint();
        java.lang.String str32 = crawlerResult27.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet33 = crawlerResult27.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet34 = crawlerResult27.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray40 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL39 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, crawlerURLArray40);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray44 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet45 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45, hTMLPageResponseArray44);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult47 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, hTMLPageResponseSet43, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet48 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet49 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet50 = crawlerResult47.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet51 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet52 = crawlerResult47.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet53 = crawlerResult47.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL57 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray58 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL57 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet59 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet59, crawlerURLArray58);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet61 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray62 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet63 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet63, hTMLPageResponseArray62);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult65 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet59, hTMLPageResponseSet61, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet63);
        java.lang.String str66 = crawlerResult65.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet67 = crawlerResult65.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet68 = crawlerResult65.getNonWorkingUrls();
        java.lang.String str69 = crawlerResult65.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet70 = crawlerResult65.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL74 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray75 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL74 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet76 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet76, crawlerURLArray75);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet78 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray79 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet80 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet80, hTMLPageResponseArray79);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult82 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet76, hTMLPageResponseSet78, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet80);
        java.lang.String str83 = crawlerResult82.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet84 = crawlerResult82.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet85 = crawlerResult82.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult86 = new com.soulgalore.crawler.core.CrawlerResult("CrawlerURL url:urls.txt", crawlerURLSet53, hTMLPageResponseSet70, hTMLPageResponseSet85);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult87 = new com.soulgalore.crawler.core.CrawlerResult("32", crawlerURLSet15, hTMLPageResponseSet34, hTMLPageResponseSet70);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet88 = crawlerResult87.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet89 = crawlerResult87.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet90 = crawlerResult87.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet91 = crawlerResult87.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet92 = crawlerResult87.getVerifiedURLResponses();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(crawlerURLArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet28);
        org.junit.Assert.assertNotNull(crawlerURLSet29);
        org.junit.Assert.assertNotNull(crawlerURLSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet33);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet34);
        org.junit.Assert.assertNotNull(crawlerURLArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet48);
        org.junit.Assert.assertNotNull(crawlerURLSet49);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet50);
        org.junit.Assert.assertNotNull(crawlerURLSet51);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet52);
        org.junit.Assert.assertNotNull(crawlerURLSet53);
        org.junit.Assert.assertNotNull(crawlerURLArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet67);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet70);
        org.junit.Assert.assertNotNull(crawlerURLArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet84);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet85);
        org.junit.Assert.assertNotNull(crawlerURLSet88);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet89);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet90);
        org.junit.Assert.assertNotNull(crawlerURLSet91);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet92);
    }

    @Test
    public void test09022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09022");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("errorurls.txt", "CrawlerURL url:10", (int) '#', (long) (byte) 10);
        long long5 = assetResponse4.getFetchTime();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10L + "'", long5 == 10L);
    }

    @Test
    public void test09023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09023");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder9.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder9.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setMaxLevels((int) '4');
        boolean boolean15 = crawlerConfiguration5.equals((java.lang.Object) builder14);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder14.setStartUrl("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration18 = builder17.build();
        int int19 = crawlerConfiguration18.getMaxLevels();
        java.lang.String str20 = crawlerConfiguration18.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(crawlerConfiguration18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test09024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09024");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        boolean boolean22 = hTMLPageResponse12.equals((java.lang.Object) builder21);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder21.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder21.setMaxLevels((int) (byte) 100);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder21.setNotOnPath("AssetResponseCallable url:1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder28.setStartUrl("AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
    }

    @Test
    public void test09025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09025");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setMaxLevels((int) '4');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setNotOnPath("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setNotOnPath("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setRequestHeaders("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test09026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09026");
        com.soulgalore.crawler.util.HeaderUtil headerUtil0 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = headerUtil0.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap4 = headerUtil0.createHeadersFromString("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil0.createHeadersFromString("CrawlerURL url:10");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = headerUtil0.createHeadersFromString("AssetResponseCallable url:errorassets.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil0.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil0.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil0.createHeadersFromString("AssetResponseCallable url:Wrong content type");
        java.util.Map<java.lang.String, java.lang.String> strMap16 = headerUtil0.createHeadersFromString("CrawlerURL url:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertNotNull(headerUtil0);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test09027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09027");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray9 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, assetResponseArray9);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray12 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13, assetResponseArray12);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult15 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult16 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet8, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray17 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, assetResponseArray17);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray20 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet21 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21, assetResponseArray20);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult23 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet24 = assetsVerificationResult23.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = assetsVerificationResult23.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = assetsVerificationResult23.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet27 = assetsVerificationResult23.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray28 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, assetResponseArray28);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray31 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet32 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32, assetResponseArray31);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult34 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet35 = assetsVerificationResult34.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet36 = assetsVerificationResult34.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray37 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet38 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet38, assetResponseArray37);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray40 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet41, assetResponseArray40);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult43 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet38, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet41);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult44 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet36, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet38);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult45 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet27, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet38);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult46 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, assetResponseSet27);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray47 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet48 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet48, assetResponseArray47);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray50 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet51 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet51, assetResponseArray50);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult53 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet48, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet51);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet54 = assetsVerificationResult53.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet55 = assetsVerificationResult53.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet56 = assetsVerificationResult53.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet57 = assetsVerificationResult53.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet58 = assetsVerificationResult53.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet59 = assetsVerificationResult53.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet60 = assetsVerificationResult53.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult61 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, assetResponseSet60);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray62 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet63 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet63, assetResponseArray62);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray65 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet66 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet66, assetResponseArray65);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult68 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet63, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet66);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet69 = assetsVerificationResult68.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet70 = assetsVerificationResult68.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet71 = assetsVerificationResult68.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet72 = null;
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray73 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet74 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet74, assetResponseArray73);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray76 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet77 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet77, assetResponseArray76);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult79 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet74, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet77);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet80 = assetsVerificationResult79.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray81 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet82 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet82, assetResponseArray81);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray84 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet85 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet85, assetResponseArray84);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult87 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet82, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet85);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult88 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet80, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet85);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult89 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet72, assetResponseSet80);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult90 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet71, assetResponseSet80);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet91 = null;
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult92 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet80, assetResponseSet91);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult93 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet60, assetResponseSet80);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet94 = assetsVerificationResult93.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet95 = assetsVerificationResult93.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet96 = assetsVerificationResult93.getNonWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(assetResponseArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(assetResponseArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(assetResponseArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(assetResponseSet24);
        org.junit.Assert.assertNotNull(assetResponseSet25);
        org.junit.Assert.assertNotNull(assetResponseSet26);
        org.junit.Assert.assertNotNull(assetResponseSet27);
        org.junit.Assert.assertNotNull(assetResponseArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(assetResponseArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(assetResponseSet35);
        org.junit.Assert.assertNotNull(assetResponseSet36);
        org.junit.Assert.assertNotNull(assetResponseArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(assetResponseArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(assetResponseArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(assetResponseArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(assetResponseSet54);
        org.junit.Assert.assertNotNull(assetResponseSet55);
        org.junit.Assert.assertNotNull(assetResponseSet56);
        org.junit.Assert.assertNotNull(assetResponseSet57);
        org.junit.Assert.assertNotNull(assetResponseSet58);
        org.junit.Assert.assertNotNull(assetResponseSet59);
        org.junit.Assert.assertNotNull(assetResponseSet60);
        org.junit.Assert.assertNotNull(assetResponseArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(assetResponseArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(assetResponseSet69);
        org.junit.Assert.assertNotNull(assetResponseSet70);
        org.junit.Assert.assertNotNull(assetResponseSet71);
        org.junit.Assert.assertNotNull(assetResponseArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(assetResponseArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(assetResponseSet80);
        org.junit.Assert.assertNotNull(assetResponseArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(assetResponseArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(assetResponseSet94);
        org.junit.Assert.assertNotNull(assetResponseSet95);
        org.junit.Assert.assertNotNull(assetResponseSet96);
    }

    @Test
    public void test09028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09028");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider(100, 10, (int) (short) 100, "AssetResponseCallable url:errorassets.csv", "CrawlerURL url:Wrong content type");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:AssetResponseCallable url:errorassets.csv");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09029");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        long long16 = hTMLPageResponse12.getFetchTime();
        java.lang.String str17 = hTMLPageResponse12.getUrl();
        boolean boolean19 = hTMLPageResponse12.equals((java.lang.Object) 582);
        java.lang.String str20 = hTMLPageResponse12.getUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "com.soulgalore.crawler.auth" + "'", str17, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "com.soulgalore.crawler.auth" + "'", str20, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test09030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09030");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        long long5 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean9 = crawlerURL8.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder11.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration16 = builder11.build();
        java.lang.String str17 = crawlerConfiguration16.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = crawlerConfiguration16.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse24 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, (-1), strMap18, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        boolean boolean25 = assetResponse4.equals((java.lang.Object) strMap18);
        java.lang.String str26 = assetResponse4.getReferer();
        java.lang.String str27 = assetResponse4.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder28.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder28.setStartUrl("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder28.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder28.setNotOnPath("AssetResponseCallable url:Malformed url");
        boolean boolean37 = assetResponse4.equals((java.lang.Object) builder28);
        java.lang.String str38 = assetResponse4.getUrl();
        int int39 = assetResponse4.getResponseCode();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 100L + "'", long5 == 100L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(crawlerConfiguration16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str26, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str27, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "com.soulgalore.crawler.auth" + "'", str38, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    }

    @Test
    public void test09031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09031");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setRequestHeaders("AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration13 = builder8.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration14 = builder8.build();
        boolean boolean15 = crawlerConfiguration14.isVerifyUrls();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(crawlerConfiguration13);
        org.junit.Assert.assertNotNull(crawlerConfiguration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test09032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09032");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "Response timed out");
        com.soulgalore.crawler.util.HeaderUtil headerUtil4 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil4.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) '4', strMap6, "com.soulgalore.crawler.http.socket.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 580, "com.soulgalore.crawler.auth", (long) (short) 1);
        org.jsoup.nodes.Document document13 = hTMLPageResponse12.getBody();
        java.lang.String str15 = hTMLPageResponse12.getHeaderValue("urls.txt");
        java.lang.String str16 = hTMLPageResponse12.getEncoding();
        org.jsoup.nodes.Document document17 = hTMLPageResponse12.getBody();
        int int18 = hTMLPageResponse12.getResponseCode();
        long long19 = hTMLPageResponse12.getFetchTime();
        org.junit.Assert.assertNotNull(headerUtil4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(document13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNull(document17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
    }

    @Test
    public void test09033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09033");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setNotOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setRequestHeaders("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setNotOnPath("97");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test09034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09034");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean6 = crawlerURL5.isWrongSyntax();
        java.lang.String str7 = crawlerURL5.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse15 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) 'a', strMap9, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str16 = hTMLPageResponse15.getUrl();
        boolean boolean17 = crawlerURL1.equals((java.lang.Object) str16);
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse22 = new com.soulgalore.crawler.core.assets.AssetResponse("", "errorurls.txt", 97, (-1L));
        java.lang.String str23 = assetResponse22.getReferer();
        int int24 = assetResponse22.getResponseCode();
        boolean boolean25 = crawlerURL1.equals((java.lang.Object) int24);
        java.net.URI uRI26 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher29 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder30.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration33 = builder32.build();
        java.lang.String str34 = crawlerConfiguration33.getStartUrl();
        java.lang.String str35 = crawlerConfiguration33.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = crawlerConfiguration33.getRequestHeadersMap();
        java.lang.String str37 = crawlerConfiguration33.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder38.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder38.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder44 = builder38.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder46 = builder44.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder48 = builder44.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration49 = builder48.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration50 = builder48.build();
        boolean boolean51 = crawlerConfiguration33.equals((java.lang.Object) crawlerConfiguration50);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder52 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder54 = builder52.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder56 = builder52.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration57 = builder52.build();
        int int58 = crawlerConfiguration57.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil59 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean60 = crawlerConfiguration57.equals((java.lang.Object) headerUtil59);
        java.util.Map<java.lang.String, java.lang.String> strMap62 = headerUtil59.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap64 = headerUtil59.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap66 = headerUtil59.createHeadersFromString("AssetResponseCallable url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap68 = headerUtil59.createHeadersFromString("CrawlerURL url:urls.txt");
        java.util.Map<java.lang.String, java.lang.String> strMap70 = headerUtil59.createHeadersFromString("AssetResponseCallable url:100");
        boolean boolean71 = crawlerConfiguration50.equals((java.lang.Object) headerUtil59);
        java.util.Map<java.lang.String, java.lang.String> strMap73 = headerUtil59.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable75 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:", assetFetcher29, strMap73, "");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse81 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) ' ', strMap73, "AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", "AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout", (long) 582, "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain", 52L);
        java.lang.String str82 = hTMLPageResponse81.getResponseType();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL83 = hTMLPageResponse81.getPageUrl();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "urls.txt" + "'", str7, "urls.txt");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "errorurls.txt" + "'", str23, "errorurls.txt");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 97 + "'", int24 == 97);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(uRI26);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(crawlerConfiguration33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(crawlerConfiguration49);
        org.junit.Assert.assertNotNull(crawlerConfiguration50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(crawlerConfiguration57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(headerUtil59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain" + "'", str82, "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain");
        org.junit.Assert.assertNotNull(crawlerURL83);
    }

    @Test
    public void test09035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09035");
        com.soulgalore.crawler.util.StatusCode statusCode0 = com.soulgalore.crawler.util.StatusCode.SC_WRONG_CONTENT_TYPE;
        int int1 = statusCode0.getCode();
        int int2 = statusCode0.getCode();
        int int3 = statusCode0.getCode();
        int int4 = statusCode0.getCode();
        org.junit.Assert.assertTrue("'" + statusCode0 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_WRONG_CONTENT_TYPE + "'", statusCode0.equals(com.soulgalore.crawler.util.StatusCode.SC_WRONG_CONTENT_TYPE));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 583 + "'", int1 == 583);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 583 + "'", int2 == 583);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 583 + "'", int3 == 583);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 583 + "'", int4 == 583);
    }

    @Test
    public void test09036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09036");
        com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider(52, (int) (short) 1, 0, "", "CrawlerURL url:com.soulgalore.crawler.proxy");
        org.apache.http.client.HttpClient httpClient6 = httpClientProvider5.get();
        org.apache.http.client.HttpClient httpClient7 = httpClientProvider5.get();
        org.apache.http.client.HttpClient httpClient8 = httpClientProvider5.get();
        org.apache.http.client.HttpClient httpClient9 = httpClientProvider5.get();
        org.junit.Assert.assertNotNull(httpClient6);
        org.junit.Assert.assertNotNull(httpClient7);
        org.junit.Assert.assertNotNull(httpClient8);
        org.junit.Assert.assertNotNull(httpClient9);
    }

    @Test
    public void test09037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09037");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        boolean boolean6 = crawlerConfiguration3.equals((java.lang.Object) true);
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL10 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean11 = crawlerURL10.isWrongSyntax();
        java.lang.String str12 = crawlerURL10.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse20 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL10, (int) 'a', strMap14, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str21 = hTMLPageResponse20.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = hTMLPageResponse20.getPageUrl();
        boolean boolean23 = crawlerConfiguration3.equals((java.lang.Object) crawlerURL22);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray24 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25, assetResponseArray24);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray27 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet28 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet28, assetResponseArray27);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult30 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet28);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet31 = assetsVerificationResult30.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet32 = assetsVerificationResult30.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray33 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet34 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet34, assetResponseArray33);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray36 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet37 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37, assetResponseArray36);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult39 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet34, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = assetsVerificationResult39.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet41 = assetsVerificationResult39.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray42 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet43 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet43, assetResponseArray42);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray45 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet46 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet46, assetResponseArray45);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult48 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet43, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet46);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult49 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet41, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet43);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray50 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet51 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet51, assetResponseArray50);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray53 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet54 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet54, assetResponseArray53);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult56 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet51, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet54);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet57 = assetsVerificationResult56.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult58 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet41, assetResponseSet57);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult59 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet32, assetResponseSet41);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet60 = null;
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult61 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet41, assetResponseSet60);
        boolean boolean62 = crawlerConfiguration3.equals((java.lang.Object) assetsVerificationResult61);
        java.lang.String str63 = crawlerConfiguration3.getRequestHeaders();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "urls.txt" + "'", str12, "urls.txt");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str21, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(assetResponseArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(assetResponseArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(assetResponseSet31);
        org.junit.Assert.assertNotNull(assetResponseSet32);
        org.junit.Assert.assertNotNull(assetResponseArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(assetResponseArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(assetResponseSet40);
        org.junit.Assert.assertNotNull(assetResponseSet41);
        org.junit.Assert.assertNotNull(assetResponseArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(assetResponseArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(assetResponseArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(assetResponseArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(assetResponseSet57);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
    }

    @Test
    public void test09038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09038");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setMaxLevels((int) '#');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setNotOnPath("CrawlerURL url:CrawlerURL url:35");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test09039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09039");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt", "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv", 1, (long) (byte) 10);
        int int5 = assetResponse4.getResponseCode();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    }

    @Test
    public void test09040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09040");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean4 = crawlerURL3.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI12 = crawlerURL11.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray13 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3, crawlerURL7, crawlerURL11 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet14, crawlerURLArray13);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray16 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet17, hTMLPageResponseArray16);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray23 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL22 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, crawlerURLArray23);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray27 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28, hTMLPageResponseArray27);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult30 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, hTMLPageResponseSet26, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult31 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet14, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet17, hTMLPageResponseSet26);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet32 = crawlerResult31.getUrls();
        java.lang.String str33 = crawlerResult31.getTheStartPoint();
        java.lang.String str34 = crawlerResult31.getTheStartPoint();
        java.lang.String str35 = crawlerResult31.getTheStartPoint();
        java.lang.String str36 = crawlerResult31.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet37 = crawlerResult31.getVerifiedURLResponses();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(uRI12);
        org.junit.Assert.assertNotNull(crawlerURLArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "com.soulgalore.crawler.auth" + "'", str33, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "com.soulgalore.crawler.auth" + "'", str34, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "com.soulgalore.crawler.auth" + "'", str35, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "com.soulgalore.crawler.auth" + "'", str36, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet37);
    }

    @Test
    public void test09041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09041");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:52encoding:AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads type:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout", "CrawlerURL url:urls.txt");
    }

    @Test
    public void test09042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09042");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder13.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder13.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setVerifyUrls(false);
        boolean boolean26 = hTMLPageResponse12.equals((java.lang.Object) builder25);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder25.setOnlyOnPath("HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder25.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder25.setMaxLevels((int) ' ');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder25.setOnlyOnPath("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder25.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration37 = builder36.build();
        java.lang.Class<?> wildcardClass38 = builder36.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(crawlerConfiguration37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test09043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09043");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher3 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI7 = crawlerURL6.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration12 = builder11.build();
        java.lang.String str13 = crawlerConfiguration12.getStartUrl();
        int int14 = crawlerConfiguration12.getMaxLevels();
        int int15 = crawlerConfiguration12.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = crawlerConfiguration12.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse22 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL6, (int) (short) 10, strMap16, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable24 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("100", assetFetcher3, strMap16, "errorassets.csv");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable26 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", assetFetcher1, strMap16, "AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertNull(uRI7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(crawlerConfiguration12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test09044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09044");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("errorassets.csv");
        java.lang.String str2 = crawlerURL1.getHost();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean7 = crawlerURL6.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL10 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean11 = crawlerURL10.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI15 = crawlerURL14.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray16 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL6, crawlerURL10, crawlerURL14 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet17, crawlerURLArray16);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray19 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet20 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet20, hTMLPageResponseArray19);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL25 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray26 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL25 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet27 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet27, crawlerURLArray26);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet29 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray30 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet31 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet31, hTMLPageResponseArray30);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult33 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet27, hTMLPageResponseSet29, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet31);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult34 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet17, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet20, hTMLPageResponseSet29);
        boolean boolean35 = crawlerURL1.equals((java.lang.Object) "com.soulgalore.crawler.auth");
        java.net.URI uRI36 = crawlerURL1.getUri();
        java.net.URI uRI37 = crawlerURL1.getUri();
        java.lang.String str38 = crawlerURL1.toString();
        boolean boolean39 = crawlerURL1.isWrongSyntax();
        java.lang.String str40 = crawlerURL1.getHost();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder41 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder43 = builder41.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder45 = builder41.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder47 = builder41.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder49 = builder47.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder51 = builder47.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder53 = builder51.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder55 = builder53.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder57 = builder55.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder59 = builder57.setStartUrl("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder61 = builder59.setRequestHeaders("AssetResponseCallable url:52");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder63 = builder59.setOnlyOnPath("AssetResponseCallable url:-1");
        boolean boolean64 = crawlerURL1.equals((java.lang.Object) "AssetResponseCallable url:-1");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(uRI15);
        org.junit.Assert.assertNotNull(crawlerURLArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(uRI36);
        org.junit.Assert.assertNull(uRI37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "CrawlerURL url:errorassets.csv" + "'", str38, "CrawlerURL url:errorassets.csv");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test09045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09045");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder2.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration6 = builder5.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder5.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder5.setRequestHeaders("AssetResponseCallable url:97");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder5.setMaxLevels(10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder5.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:CrawlerURL url:1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(crawlerConfiguration6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test09046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09046");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:", "Malformed url");
        java.lang.String str3 = crawlerURL2.getUrl();
        com.soulgalore.crawler.util.HeaderUtil headerUtil4 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil4.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = headerUtil4.createHeadersFromString("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil4.createHeadersFromString("CrawlerURL url:10");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil4.createHeadersFromString("AssetResponseCallable url:errorassets.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil4.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        boolean boolean15 = crawlerURL2.equals((java.lang.Object) headerUtil4);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.String> strMap17 = headerUtil4.createHeadersFromString("52");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request headers wrongly configured, missing separator :52");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:" + "'", str3, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:");
        org.junit.Assert.assertNotNull(headerUtil4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test09047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09047");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
    }

    @Test
    public void test09048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09048");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.lang.String str13 = crawlerResult12.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = crawlerResult12.getNonWorkingUrls();
        java.lang.String str16 = crawlerResult12.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet18 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray23 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL22 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, crawlerURLArray23);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray27 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28, hTMLPageResponseArray27);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult30 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, hTMLPageResponseSet26, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet31 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet32 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet33 = crawlerResult30.getUrls();
        java.lang.String str34 = crawlerResult30.getTheStartPoint();
        java.lang.String str35 = crawlerResult30.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet36 = crawlerResult30.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL40 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray41 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL40 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet42 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet42, crawlerURLArray41);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet44 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray45 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet46 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet46, hTMLPageResponseArray45);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult48 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet42, hTMLPageResponseSet44, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet46);
        java.lang.String str49 = crawlerResult48.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet50 = crawlerResult48.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet51 = crawlerResult48.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet52 = crawlerResult48.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet53 = crawlerResult48.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult54 = new com.soulgalore.crawler.core.CrawlerResult("Response timed out", crawlerURLSet18, hTMLPageResponseSet36, hTMLPageResponseSet53);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet55 = crawlerResult54.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet56 = crawlerResult54.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet57 = crawlerResult54.getNonWorkingUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet17);
        org.junit.Assert.assertNotNull(crawlerURLSet18);
        org.junit.Assert.assertNotNull(crawlerURLArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet31);
        org.junit.Assert.assertNotNull(crawlerURLSet32);
        org.junit.Assert.assertNotNull(crawlerURLSet33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet36);
        org.junit.Assert.assertNotNull(crawlerURLArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet50);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet51);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet52);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet53);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet55);
        org.junit.Assert.assertNotNull(crawlerURLSet56);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet57);
    }

    @Test
    public void test09049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09049");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        int int7 = assetResponse4.getResponseCode();
        java.lang.String str8 = assetResponse4.getUrl();
        int int9 = assetResponse4.getResponseCode();
        long long10 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder11.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration16 = builder15.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration17 = builder15.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder15.setRequestHeaders("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setNotOnPath("");
        boolean boolean22 = assetResponse4.equals((java.lang.Object) builder21);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder21.setMaxLevels(100);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder24.setOnlyOnPath("Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder26.setMaxLevels(0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(crawlerConfiguration16);
        org.junit.Assert.assertNotNull(crawlerConfiguration17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
    }

    @Test
    public void test09050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09050");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL0 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder4.build();
        java.lang.String str6 = crawlerConfiguration5.getOnlyOnPath();
        boolean boolean7 = crawlerConfiguration5.isVerifyUrls();
        int int8 = crawlerConfiguration5.getMaxLevels();
        java.lang.String str9 = crawlerConfiguration5.getNotOnPath();
        java.lang.String str10 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str11 = crawlerConfiguration5.getStartUrl();
        java.lang.String str12 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str13 = crawlerConfiguration5.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = crawlerConfiguration5.getRequestHeadersMap();
        java.lang.String str15 = crawlerConfiguration5.getRequestHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI19 = crawlerURL18.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL23 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean24 = crawlerURL23.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder26.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder26.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration31 = builder26.build();
        java.lang.String str32 = crawlerConfiguration31.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = crawlerConfiguration31.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse39 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL23, (-1), strMap33, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL18, 100, strMap33, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse53 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL18, (int) (short) 100, strMap47, "-1", "1", (long) (byte) 10, "com.soulgalore.crawler.nrofhttpthreads", (long) (short) 1);
        java.lang.String str54 = hTMLPageResponse53.toString();
        org.jsoup.nodes.Document document55 = hTMLPageResponse53.getBody();
        boolean boolean56 = crawlerConfiguration5.equals((java.lang.Object) document55);
        java.lang.Object obj57 = null;
        boolean boolean58 = crawlerConfiguration5.equals(obj57);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = crawlerConfiguration5.getRequestHeadersMap();
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse65 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL0, (int) (byte) 0, strMap59, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:1encoding:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout type:CrawlerURL url:Wrong content type", (long) (short) 100, "AssetResponseCallable url:AssetResponseCallable url:com.soulgalore.crawler.auth", (long) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(uRI19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(crawlerConfiguration31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads" + "'", str54, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNull(document55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strMap59);
    }

    @Test
    public void test09051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09051");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("CrawlerURL url:CrawlerURL url:1", "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (int) (short) -1, 308L);
        java.lang.String str5 = assetResponse4.getReferer();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str5, "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
    }

    @Test
    public void test09052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09052");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = hTMLPageResponse12.getResponseHeaders();
        long long20 = hTMLPageResponse12.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = hTMLPageResponse12.getPageUrl();
        org.jsoup.nodes.Document document22 = hTMLPageResponse12.getBody();
        long long23 = hTMLPageResponse12.getFetchTime();
        java.lang.String str24 = hTMLPageResponse12.getEncoding();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 100L + "'", long20 == 100L);
        org.junit.Assert.assertNotNull(crawlerURL21);
        org.junit.Assert.assertNull(document22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 100L + "'", long23 == 100L);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str24, "com.soulgalore.crawler.http.socket.timeout");
    }

    @Test
    public void test09053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09053");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder9.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder9.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setMaxLevels((int) '4');
        boolean boolean15 = crawlerConfiguration5.equals((java.lang.Object) builder14);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder14.setOnlyOnPath("com.soulgalore.crawler.proxy");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder14.setOnlyOnPath("CrawlerURL url:AssetResponseCallable url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
    }

    @Test
    public void test09054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09054");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean14 = assetResponse4.equals((java.lang.Object) 100L);
        java.lang.String str15 = assetResponse4.getReferer();
        java.lang.String str16 = assetResponse4.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder17.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder23.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder29.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder29.setVerifyUrls(false);
        boolean boolean34 = assetResponse4.equals((java.lang.Object) builder29);
        java.lang.String str35 = assetResponse4.getReferer();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL37 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI38 = crawlerURL37.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL41 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean42 = crawlerURL41.isWrongSyntax();
        java.lang.String str43 = crawlerURL41.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse51 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL41, (int) 'a', strMap45, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str52 = hTMLPageResponse51.getUrl();
        boolean boolean53 = crawlerURL37.equals((java.lang.Object) str52);
        boolean boolean54 = crawlerURL37.isWrongSyntax();
        java.lang.String str55 = crawlerURL37.getHost();
        boolean boolean56 = assetResponse4.equals((java.lang.Object) str55);
        int int57 = assetResponse4.getResponseCode();
        int int58 = assetResponse4.getResponseCode();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100" + "'", str15, "100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "100" + "'", str16, "100");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "100" + "'", str35, "100");
        org.junit.Assert.assertNull(uRI38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "urls.txt" + "'", str43, "urls.txt");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "com.soulgalore.crawler.auth" + "'", str52, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
    }

    @Test
    public void test09055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09055");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Unknown error", "AssetResponseCallable url:CrawlerURL url:hi!", (int) ' ', (long) (short) 100);
    }

    @Test
    public void test09056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09056");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:CrawlerURL url:1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain", "CrawlerURL url:AssetResponseCallable url:com.soulgalore.crawler.nrofhttpthreads");
    }

    @Test
    public void test09057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09057");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = crawlerURL2.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean17 = crawlerURL16.isWrongSyntax();
        java.lang.String str18 = crawlerURL16.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse26 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL16, (int) 'a', strMap20, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str27 = hTMLPageResponse26.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = hTMLPageResponse26.getResponseHeaders();
        java.lang.String str29 = hTMLPageResponse26.getEncoding();
        java.lang.String str30 = hTMLPageResponse26.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder31.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = builder31.setMaxLevels((int) (short) 0);
        boolean boolean36 = hTMLPageResponse26.equals((java.lang.Object) builder35);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder35.setVerifyUrls(false);
        boolean boolean39 = crawlerURL2.equals((java.lang.Object) builder35);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration40 = builder35.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder35.setVerifyUrls(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "urls.txt" + "'", str18, "urls.txt");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str27, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str29, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str30, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(crawlerConfiguration40);
        org.junit.Assert.assertNotNull(builder42);
    }

    @Test
    public void test09058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09058");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "Wrong content type", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        long long6 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL9 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean10 = crawlerURL9.isWrongSyntax();
        java.lang.String str11 = crawlerURL9.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse19 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL9, (int) 'a', strMap13, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str20 = hTMLPageResponse19.getEncoding();
        java.lang.String str21 = hTMLPageResponse19.getResponseType();
        java.lang.String str22 = hTMLPageResponse19.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL23 = hTMLPageResponse19.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL27 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean28 = crawlerURL27.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder30.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder30.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration35 = builder30.build();
        java.lang.String str36 = crawlerConfiguration35.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = crawlerConfiguration35.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse43 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL27, (-1), strMap37, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL47 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI48 = crawlerURL47.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL52 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean53 = crawlerURL52.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder55 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder57 = builder55.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder59 = builder55.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration60 = builder55.build();
        java.lang.String str61 = crawlerConfiguration60.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap62 = crawlerConfiguration60.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse68 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL52, (-1), strMap62, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse74 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL47, 100, strMap62, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse80 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL27, (int) (byte) 10, strMap62, "100", "errorassets.csv", (long) (byte) 100, "", (long) (short) 100);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse86 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL23, 100, strMap62, "com.soulgalore.crawler.nrofhttpthreads", "errorassets.csv", (long) 97, "result.csv", (long) (byte) -1);
        java.lang.String str87 = hTMLPageResponse86.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL88 = hTMLPageResponse86.getPageUrl();
        boolean boolean89 = assetResponse4.equals((java.lang.Object) hTMLPageResponse86);
        java.util.Map<java.lang.String, java.lang.String> strMap90 = hTMLPageResponse86.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL91 = hTMLPageResponse86.getPageUrl();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "urls.txt" + "'", str11, "urls.txt");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str20, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "com.soulgalore.crawler.auth" + "'", str22, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(crawlerConfiguration35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(uRI48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(crawlerConfiguration60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "com.soulgalore.crawler.auth" + "'", str87, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(crawlerURL91);
    }

    @Test
    public void test09059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09059");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setOnlyOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setOnlyOnPath("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder16.setRequestHeaders("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder20.setRequestHeaders("CrawlerURL url:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder20.setOnlyOnPath("CrawlerURL url:HTMLPageResponseurl:hi!responseCode:52encoding:urls.txt type:CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test09060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09060");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setRequestHeaders("CrawlerURL url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setNotOnPath("100");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration17 = builder16.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder16.setOnlyOnPath("AssetResponseCallable url:0");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder16.setVerifyUrls(true);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(crawlerConfiguration17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
    }

    @Test
    public void test09061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09061");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.lang.String str14 = hTMLPageResponse12.getResponseType();
        java.lang.String str15 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        java.net.URI uRI17 = crawlerURL16.getUri();
        java.net.URI uRI18 = crawlerURL16.getUri();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher21 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder22.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration27 = builder22.build();
        int int28 = crawlerConfiguration27.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil29 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean30 = crawlerConfiguration27.equals((java.lang.Object) headerUtil29);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = headerUtil29.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap34 = headerUtil29.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable36 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", assetFetcher21, strMap34, "Unknown error");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse42 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL16, (int) (byte) -1, strMap34, "AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", "1", (long) 0, "com.soulgalore.crawler.http.connection.timeout", (long) 10);
        java.lang.String str43 = hTMLPageResponse42.getUrl();
        long long44 = hTMLPageResponse42.getFetchTime();
        java.lang.String str45 = hTMLPageResponse42.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.auth" + "'", str15, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertNull(uRI17);
        org.junit.Assert.assertNull(uRI18);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(crawlerConfiguration27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(headerUtil29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "com.soulgalore.crawler.auth" + "'", str43, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 10L + "'", long44 == 10L);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:1 type:com.soulgalore.crawler.http.connection.timeout" + "'", str45, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:1 type:com.soulgalore.crawler.http.connection.timeout");
    }

    @Test
    public void test09062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09062");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:CrawlerURL url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:581encoding:AssetResponseCallable url:result.csv type:CrawlerURL url:CrawlerURL url:errorassets.csv", 0, 10L);
    }

    @Test
    public void test09063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09063");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "CrawlerURL url:Redirected to new domain", (int) (short) 100, 1L);
        long long5 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray6 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet7, assetResponseArray6);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray9 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, assetResponseArray9);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult12 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet7, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = assetsVerificationResult12.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet14 = assetsVerificationResult12.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet15 = assetsVerificationResult12.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet16 = assetsVerificationResult12.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray17 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, assetResponseArray17);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray20 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet21 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21, assetResponseArray20);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult23 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet24 = assetsVerificationResult23.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult25 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet16, assetResponseSet24);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = assetsVerificationResult25.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet27 = assetsVerificationResult25.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray28 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, assetResponseArray28);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray31 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet32 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32, assetResponseArray31);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult34 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet35 = assetsVerificationResult34.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet36 = assetsVerificationResult34.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet37 = assetsVerificationResult34.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult38 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet27, assetResponseSet37);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray39 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40, assetResponseArray39);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray42 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet43 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet43, assetResponseArray42);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult45 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet43);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet46 = assetsVerificationResult45.getNonWorkingAssets();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder47 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder49 = builder47.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder51 = builder47.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration52 = builder47.build();
        java.lang.String str53 = crawlerConfiguration52.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap54 = crawlerConfiguration52.getRequestHeadersMap();
        java.lang.String str55 = crawlerConfiguration52.getNotOnPath();
        int int56 = crawlerConfiguration52.getMaxLevels();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray57 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet58 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet58, assetResponseArray57);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray60 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet61 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet61, assetResponseArray60);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult63 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet58, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet61);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet64 = assetsVerificationResult63.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet65 = assetsVerificationResult63.getWorkingAssets();
        boolean boolean66 = crawlerConfiguration52.equals((java.lang.Object) assetResponseSet65);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult67 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet46, assetResponseSet65);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet68 = assetsVerificationResult67.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet69 = assetsVerificationResult67.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet70 = assetsVerificationResult67.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult71 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet37, assetResponseSet70);
        boolean boolean72 = assetResponse4.equals((java.lang.Object) assetsVerificationResult71);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL74 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        java.lang.String str75 = crawlerURL74.getUrl();
        boolean boolean76 = crawlerURL74.isWrongSyntax();
        com.soulgalore.crawler.util.HeaderUtil headerUtil78 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = headerUtil78.createHeadersFromString("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse86 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL74, (int) (short) 10, strMap80, "urls.txt", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (byte) 10, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", (-1L));
        boolean boolean87 = assetResponse4.equals((java.lang.Object) "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertNotNull(assetResponseArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(assetResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(assetResponseSet13);
        org.junit.Assert.assertNotNull(assetResponseSet14);
        org.junit.Assert.assertNotNull(assetResponseSet15);
        org.junit.Assert.assertNotNull(assetResponseSet16);
        org.junit.Assert.assertNotNull(assetResponseArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(assetResponseArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(assetResponseSet24);
        org.junit.Assert.assertNotNull(assetResponseSet26);
        org.junit.Assert.assertNotNull(assetResponseSet27);
        org.junit.Assert.assertNotNull(assetResponseArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(assetResponseArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(assetResponseSet35);
        org.junit.Assert.assertNotNull(assetResponseSet36);
        org.junit.Assert.assertNotNull(assetResponseSet37);
        org.junit.Assert.assertNotNull(assetResponseArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(assetResponseArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(assetResponseSet46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(crawlerConfiguration52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(assetResponseArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(assetResponseArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(assetResponseSet64);
        org.junit.Assert.assertNotNull(assetResponseSet65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(assetResponseSet68);
        org.junit.Assert.assertNotNull(assetResponseSet69);
        org.junit.Assert.assertNotNull(assetResponseSet70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(headerUtil78);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test09064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09064");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("result.csv", "Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder3 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder3.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder3.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setVerifyUrls(false);
        java.lang.Class<?> wildcardClass10 = builder7.getClass();
        boolean boolean11 = crawlerURL2.equals((java.lang.Object) wildcardClass10);
        java.lang.String str12 = crawlerURL2.getReferer();
        java.lang.String str13 = crawlerURL2.toString();
        com.soulgalore.crawler.util.HeaderUtil headerUtil15 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = headerUtil15.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap19 = headerUtil15.createHeadersFromString("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse25 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 582, strMap19, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (short) 1, "0", (long) 10);
        java.lang.String str26 = crawlerURL2.getUrl();
        java.net.URI uRI27 = crawlerURL2.getUri();
        boolean boolean28 = crawlerURL2.isWrongSyntax();
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Malformed url" + "'", str12, "Malformed url");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CrawlerURL url:result.csv" + "'", str13, "CrawlerURL url:result.csv");
        org.junit.Assert.assertNotNull(headerUtil15);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "result.csv" + "'", str26, "result.csv");
        org.junit.Assert.assertNull(uRI27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test09065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09065");
        com.soulgalore.crawler.util.StatusCode statusCode0 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN;
        int int1 = statusCode0.getCode();
        int int2 = statusCode0.getCode();
        int int3 = statusCode0.getCode();
        java.lang.String str4 = statusCode0.getFriendlyName();
        java.lang.String str5 = statusCode0.getFriendlyName();
        int int6 = statusCode0.getCode();
        int int7 = statusCode0.getCode();
        java.lang.String str8 = statusCode0.getFriendlyName();
        java.lang.String str9 = statusCode0.getFriendlyName();
        org.junit.Assert.assertTrue("'" + statusCode0 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN + "'", statusCode0.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 581 + "'", int1 == 581);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 581 + "'", int2 == 581);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 581 + "'", int3 == 581);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Unknown error" + "'", str4, "Unknown error");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Unknown error" + "'", str5, "Unknown error");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 581 + "'", int6 == 581);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 581 + "'", int7 == 581);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Unknown error" + "'", str8, "Unknown error");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Unknown error" + "'", str9, "Unknown error");
    }

    @Test
    public void test09066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09066");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet4 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet6 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet8 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet10 = authUtil0.createAuthsFromString("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet12 = authUtil0.createAuthsFromString("CrawlerURL url:Response timed out");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:CrawlerURL url:Response timed out");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
        org.junit.Assert.assertNotNull(authSet2);
        org.junit.Assert.assertNotNull(authSet4);
        org.junit.Assert.assertNotNull(authSet6);
        org.junit.Assert.assertNotNull(authSet8);
        org.junit.Assert.assertNotNull(authSet10);
    }

    @Test
    public void test09067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09067");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:52", "com.soulgalore.crawler.nrofhttpthreads", (-1), (-1L));
    }

    @Test
    public void test09068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09068");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet4 = authUtil0.createAuthsFromString("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:com.soulgalore.crawler.auth");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"AssetResponseCallable url\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
        org.junit.Assert.assertNotNull(authSet2);
    }

    @Test
    public void test09069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09069");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder2.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder2.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setOnlyOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setOnlyOnPath("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder18.setRequestHeaders("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder18.setNotOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration25 = builder18.build();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = crawlerConfiguration25.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable28 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:10", assetFetcher1, strMap26, "CrawlerURL url:35");
        java.lang.String str29 = assetResponseCallable28.toString();
        java.lang.String str30 = assetResponseCallable28.toString();
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.assets.AssetResponse assetResponse31 = assetResponseCallable28.call();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(crawlerConfiguration25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AssetResponseCallable url:CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:10" + "'", str29, "AssetResponseCallable url:CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:10");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AssetResponseCallable url:CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:10" + "'", str30, "AssetResponseCallable url:CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:10");
    }

    @Test
    public void test09070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09070");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        long long16 = hTMLPageResponse12.getFetchTime();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder17.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration24 = builder17.build();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = crawlerConfiguration24.getRequestHeadersMap();
        boolean boolean26 = hTMLPageResponse12.equals((java.lang.Object) crawlerConfiguration24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = crawlerConfiguration24.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = crawlerConfiguration24.getRequestHeadersMap();
        java.lang.String str29 = crawlerConfiguration24.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL32 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean33 = crawlerURL32.isWrongSyntax();
        java.lang.String str34 = crawlerURL32.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse42 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL32, (int) 'a', strMap36, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int43 = hTMLPageResponse42.getResponseCode();
        int int44 = hTMLPageResponse42.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL45 = hTMLPageResponse42.getPageUrl();
        org.jsoup.nodes.Document document46 = hTMLPageResponse42.getBody();
        java.lang.String str47 = hTMLPageResponse42.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL50 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean51 = crawlerURL50.isWrongSyntax();
        java.lang.String str52 = crawlerURL50.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap54 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse60 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL50, (int) 'a', strMap54, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str61 = hTMLPageResponse60.getEncoding();
        long long62 = hTMLPageResponse60.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL63 = hTMLPageResponse60.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL64 = hTMLPageResponse60.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap65 = hTMLPageResponse60.getResponseHeaders();
        boolean boolean66 = hTMLPageResponse42.equals((java.lang.Object) hTMLPageResponse60);
        boolean boolean67 = crawlerConfiguration24.equals((java.lang.Object) hTMLPageResponse60);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(crawlerConfiguration24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "urls.txt" + "'", str29, "urls.txt");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "urls.txt" + "'", str34, "urls.txt");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 97 + "'", int43 == 97);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 97 + "'", int44 == 97);
        org.junit.Assert.assertNotNull(crawlerURL45);
        org.junit.Assert.assertNull(document46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str47, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "urls.txt" + "'", str52, "urls.txt");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str61, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 100L + "'", long62 == 100L);
        org.junit.Assert.assertNotNull(crawlerURL63);
        org.junit.Assert.assertNotNull(crawlerURL64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test09071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09071");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean4 = crawlerURL3.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI12 = crawlerURL11.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray13 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3, crawlerURL7, crawlerURL11 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet14, crawlerURLArray13);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray16 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet17, hTMLPageResponseArray16);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray23 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL22 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, crawlerURLArray23);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray27 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28, hTMLPageResponseArray27);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult30 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, hTMLPageResponseSet26, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult31 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet14, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet17, hTMLPageResponseSet26);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet32 = crawlerResult31.getUrls();
        java.lang.String str33 = crawlerResult31.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet34 = crawlerResult31.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet35 = crawlerResult31.getUrls();
        java.lang.String str36 = crawlerResult31.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet37 = crawlerResult31.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet38 = crawlerResult31.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet39 = crawlerResult31.getUrls();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(uRI12);
        org.junit.Assert.assertNotNull(crawlerURLArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "com.soulgalore.crawler.auth" + "'", str33, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet34);
        org.junit.Assert.assertNotNull(crawlerURLSet35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "com.soulgalore.crawler.auth" + "'", str36, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURLSet37);
        org.junit.Assert.assertNotNull(crawlerURLSet38);
        org.junit.Assert.assertNotNull(crawlerURLSet39);
    }

    @Test
    public void test09072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09072");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet12 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet16 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet18 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet19 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet20 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet21 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet22 = crawlerResult11.getNonWorkingUrls();
        java.lang.String str23 = crawlerResult11.getTheStartPoint();
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet12);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet16);
        org.junit.Assert.assertNotNull(crawlerURLSet17);
        org.junit.Assert.assertNotNull(crawlerURLSet18);
        org.junit.Assert.assertNotNull(crawlerURLSet19);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet20);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet21);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
    }

    @Test
    public void test09073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09073");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:AssetResponseCallable url:Malformed url", "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:-1encoding:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads type:AssetResponseCallable url:errorassets.csv");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher5 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher7 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder10.build();
        java.lang.String str12 = crawlerConfiguration11.getStartUrl();
        java.lang.String str13 = crawlerConfiguration11.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = crawlerConfiguration11.getRequestHeadersMap();
        java.lang.String str15 = crawlerConfiguration11.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder16.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder16.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder22.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration27 = builder26.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration28 = builder26.build();
        boolean boolean29 = crawlerConfiguration11.equals((java.lang.Object) crawlerConfiguration28);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = crawlerConfiguration28.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable32 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", assetFetcher7, strMap30, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable34 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("CrawlerURL url:urls.txt", assetFetcher5, strMap30, "");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse40 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) 10, strMap30, "CrawlerURL url:result.csv", "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:", (long) 97, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url", (long) 582);
        boolean boolean41 = crawlerURL2.isWrongSyntax();
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(crawlerConfiguration27);
        org.junit.Assert.assertNotNull(crawlerConfiguration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test09074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09074");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("Response timed out", "0", 580, (long) (byte) -1);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL10 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI11 = crawlerURL10.getUri();
        java.lang.String str12 = crawlerURL10.getReferer();
        java.lang.String str13 = crawlerURL10.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder15.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration18 = builder17.build();
        java.lang.String str19 = crawlerConfiguration18.getStartUrl();
        int int20 = crawlerConfiguration18.getMaxLevels();
        int int21 = crawlerConfiguration18.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = crawlerConfiguration18.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse28 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL10, (int) (byte) -1, strMap22, "100", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) (short) -1, "com.soulgalore.crawler.nrofhttpthreads", 0L);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse34 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL6, 580, strMap22, "10", "HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", 580L, "0", (long) 0);
        boolean boolean35 = assetResponse4.equals((java.lang.Object) 0);
        java.lang.String str36 = assetResponse4.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = builder37.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder41 = builder37.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration42 = builder37.build();
        java.lang.String str43 = crawlerConfiguration42.getNotOnPath();
        java.lang.String str44 = crawlerConfiguration42.getRequestHeaders();
        java.lang.String str45 = crawlerConfiguration42.getStartUrl();
        boolean boolean46 = assetResponse4.equals((java.lang.Object) str45);
        java.lang.String str47 = assetResponse4.getUrl();
        long long48 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL51 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean52 = crawlerURL51.isWrongSyntax();
        java.lang.String str53 = crawlerURL51.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse61 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL51, (int) 'a', strMap55, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str62 = hTMLPageResponse61.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap63 = hTMLPageResponse61.getResponseHeaders();
        java.lang.String str64 = hTMLPageResponse61.getEncoding();
        java.lang.String str65 = hTMLPageResponse61.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL66 = hTMLPageResponse61.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL67 = hTMLPageResponse61.getPageUrl();
        int int68 = hTMLPageResponse61.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL69 = hTMLPageResponse61.getPageUrl();
        java.lang.String str70 = crawlerURL69.getReferer();
        java.lang.String str71 = crawlerURL69.getHost();
        java.lang.String str72 = crawlerURL69.toString();
        java.lang.String str73 = crawlerURL69.getReferer();
        boolean boolean74 = assetResponse4.equals((java.lang.Object) crawlerURL69);
        org.junit.Assert.assertNull(uRI11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "urls.txt" + "'", str12, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "urls.txt" + "'", str13, "urls.txt");
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(crawlerConfiguration18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Response timed out" + "'", str36, "Response timed out");
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(crawlerConfiguration42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Response timed out" + "'", str47, "Response timed out");
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "urls.txt" + "'", str53, "urls.txt");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str62, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str64, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str65, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL66);
        org.junit.Assert.assertNotNull(crawlerURL67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 97 + "'", int68 == 97);
        org.junit.Assert.assertNotNull(crawlerURL69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "urls.txt" + "'", str70, "urls.txt");
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str72, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "urls.txt" + "'", str73, "urls.txt");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test09075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09075");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        boolean boolean6 = crawlerConfiguration3.isVerifyUrls();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder7.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder7.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder13.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setStartUrl("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder25.setStartUrl("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setVerifyUrls(false);
        boolean boolean30 = crawlerConfiguration3.equals((java.lang.Object) false);
        java.lang.String str31 = crawlerConfiguration3.getNotOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str33 = crawlerConfiguration3.getRequestHeaders();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
    }

    @Test
    public void test09076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09076");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder3 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder3.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration6 = builder5.build();
        java.lang.String str7 = crawlerConfiguration6.getStartUrl();
        int int8 = crawlerConfiguration6.getMaxLevels();
        int int9 = crawlerConfiguration6.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean13 = crawlerURL12.isWrongSyntax();
        java.lang.String str14 = crawlerURL12.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse22 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL12, (int) 'a', strMap16, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str23 = hTMLPageResponse22.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = hTMLPageResponse22.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = hTMLPageResponse22.getResponseHeaders();
        java.lang.String str26 = hTMLPageResponse22.getUrl();
        org.jsoup.nodes.Document document27 = hTMLPageResponse22.getBody();
        boolean boolean28 = crawlerConfiguration6.equals((java.lang.Object) hTMLPageResponse22);
        boolean boolean29 = crawlerURL1.equals((java.lang.Object) hTMLPageResponse22);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder31.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration34 = builder33.build();
        java.lang.String str35 = crawlerConfiguration34.getStartUrl();
        int int36 = crawlerConfiguration34.getMaxLevels();
        int int37 = crawlerConfiguration34.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = crawlerConfiguration34.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse44 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 582, strMap38, "urls.txt", "hi!", (long) (short) 0, "AssetResponseCallable url:result.csv", 10L);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL45 = hTMLPageResponse44.getPageUrl();
        java.lang.String str46 = crawlerURL45.toString();
        com.soulgalore.crawler.util.HeaderUtil headerUtil48 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = headerUtil48.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap52 = headerUtil48.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse58 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL45, 100, strMap52, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", "AssetResponseCallable url:CrawlerURL url:urls.txt", 0L, "AssetResponseCallable url:AssetResponseCallable url:32", (long) (short) -1);
        java.lang.String str59 = crawlerURL45.getReferer();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(crawlerConfiguration6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "urls.txt" + "'", str14, "urls.txt");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str23, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "com.soulgalore.crawler.auth" + "'", str26, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(crawlerConfiguration34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(crawlerURL45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str46, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(headerUtil48);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
    }

    @Test
    public void test09077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09077");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        int int19 = hTMLPageResponse12.getResponseCode();
        org.jsoup.nodes.Document document20 = hTMLPageResponse12.getBody();
        java.lang.String str21 = hTMLPageResponse12.getEncoding();
        java.lang.String str22 = hTMLPageResponse12.getEncoding();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
        org.junit.Assert.assertNull(document20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str21, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str22, "com.soulgalore.crawler.http.socket.timeout");
    }

    @Test
    public void test09078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09078");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = crawlerURL2.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean17 = crawlerURL16.isWrongSyntax();
        java.lang.String str18 = crawlerURL16.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse26 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL16, (int) 'a', strMap20, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str27 = hTMLPageResponse26.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = hTMLPageResponse26.getResponseHeaders();
        java.lang.String str29 = hTMLPageResponse26.getEncoding();
        java.lang.String str30 = hTMLPageResponse26.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder31.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = builder31.setMaxLevels((int) (short) 0);
        boolean boolean36 = hTMLPageResponse26.equals((java.lang.Object) builder35);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder35.setVerifyUrls(false);
        boolean boolean39 = crawlerURL2.equals((java.lang.Object) builder35);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration40 = builder35.build();
        boolean boolean41 = crawlerConfiguration40.isVerifyUrls();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder44 = builder42.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration45 = builder44.build();
        java.lang.String str46 = crawlerConfiguration45.getStartUrl();
        java.lang.String str47 = crawlerConfiguration45.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = crawlerConfiguration45.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = crawlerConfiguration45.getRequestHeadersMap();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL53 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray54 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL53 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet55 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet55, crawlerURLArray54);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet57 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray58 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet59 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet59, hTMLPageResponseArray58);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult61 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet55, hTMLPageResponseSet57, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet59);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet62 = crawlerResult61.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet63 = crawlerResult61.getUrls();
        boolean boolean64 = crawlerConfiguration45.equals((java.lang.Object) crawlerURLSet63);
        java.lang.String str65 = crawlerConfiguration45.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder66 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder68 = builder66.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder70 = builder66.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder72 = builder70.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder74 = builder72.setOnlyOnPath("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder76 = builder72.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration77 = builder72.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder79 = builder72.setOnlyOnPath("CrawlerURL url:com.soulgalore.crawler.auth");
        boolean boolean80 = crawlerConfiguration45.equals((java.lang.Object) "CrawlerURL url:com.soulgalore.crawler.auth");
        boolean boolean81 = crawlerConfiguration45.isVerifyUrls();
        boolean boolean82 = crawlerConfiguration40.equals((java.lang.Object) crawlerConfiguration45);
        java.lang.String str83 = crawlerConfiguration40.getOnlyOnPath();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "urls.txt" + "'", str18, "urls.txt");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str27, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str29, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str30, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(crawlerConfiguration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(crawlerConfiguration45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(crawlerURLArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet62);
        org.junit.Assert.assertNotNull(crawlerURLSet63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(crawlerConfiguration77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
    }

    @Test
    public void test09079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09079");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.lang.String str5 = crawlerURL2.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder9.build();
        java.lang.String str11 = crawlerConfiguration10.getStartUrl();
        int int12 = crawlerConfiguration10.getMaxLevels();
        int int13 = crawlerConfiguration10.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse20 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) -1, strMap14, "100", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) (short) -1, "com.soulgalore.crawler.nrofhttpthreads", 0L);
        java.lang.String str22 = hTMLPageResponse20.getHeaderValue("-1");
        java.lang.String str23 = hTMLPageResponse20.getUrl();
        java.lang.String str24 = hTMLPageResponse20.toString();
        java.lang.String str25 = hTMLPageResponse20.toString();
        java.lang.String str26 = hTMLPageResponse20.getUrl();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "urls.txt" + "'", str5, "urls.txt");
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.auth" + "'", str23, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads" + "'", str24, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads" + "'", str25, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "com.soulgalore.crawler.auth" + "'", str26, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test09080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09080");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray21 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL20 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet22, crawlerURLArray21);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet24 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray25 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet26, hTMLPageResponseArray25);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult28 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet22, hTMLPageResponseSet24, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet26);
        java.lang.String str29 = crawlerResult28.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet30 = crawlerResult28.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet31 = crawlerResult28.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL35 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean36 = crawlerURL35.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean40 = crawlerURL39.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL43 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI44 = crawlerURL43.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray45 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL35, crawlerURL39, crawlerURL43 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet46 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet46, crawlerURLArray45);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray48 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet49 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet49, hTMLPageResponseArray48);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL54 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray55 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL54 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet56 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet56, crawlerURLArray55);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet58 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray59 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet60 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet60, hTMLPageResponseArray59);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult62 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet56, hTMLPageResponseSet58, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet60);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult63 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet46, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet49, hTMLPageResponseSet58);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet64 = crawlerResult63.getVerifiedURLResponses();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult65 = new com.soulgalore.crawler.core.CrawlerResult("errorurls.txt", crawlerURLSet16, hTMLPageResponseSet31, hTMLPageResponseSet64);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet66 = crawlerResult65.getUrls();
        java.lang.String str67 = crawlerResult65.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet68 = crawlerResult65.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet69 = crawlerResult65.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet70 = crawlerResult65.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet71 = crawlerResult65.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet72 = crawlerResult65.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet73 = crawlerResult65.getVerifiedURLResponses();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(crawlerURLArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet30);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(uRI44);
        org.junit.Assert.assertNotNull(crawlerURLArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet64);
        org.junit.Assert.assertNotNull(crawlerURLSet66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "errorurls.txt" + "'", str67, "errorurls.txt");
        org.junit.Assert.assertNotNull(crawlerURLSet68);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet69);
        org.junit.Assert.assertNotNull(crawlerURLSet70);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet71);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet72);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet73);
    }

    @Test
    public void test09081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09081");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration8 = builder7.build();
        java.lang.String str9 = crawlerConfiguration8.getStartUrl();
        int int10 = crawlerConfiguration8.getMaxLevels();
        int int11 = crawlerConfiguration8.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration8.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (short) 10, strMap12, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int19 = hTMLPageResponse18.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = hTMLPageResponse18.getResponseHeaders();
        java.lang.String str22 = hTMLPageResponse18.getHeaderValue("");
        java.util.Map<java.lang.String, java.lang.String> strMap23 = hTMLPageResponse18.getResponseHeaders();
        java.lang.String str24 = hTMLPageResponse18.getEncoding();
        java.lang.String str26 = hTMLPageResponse18.getHeaderValue("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration30 = builder29.build();
        java.lang.String str31 = crawlerConfiguration30.getStartUrl();
        int int32 = crawlerConfiguration30.getMaxLevels();
        java.lang.String str33 = crawlerConfiguration30.getOnlyOnPath();
        java.lang.String str34 = crawlerConfiguration30.getOnlyOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = builder35.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration38 = builder37.build();
        java.lang.String str39 = crawlerConfiguration38.getStartUrl();
        boolean boolean41 = crawlerConfiguration38.equals((java.lang.Object) true);
        java.lang.String str42 = crawlerConfiguration38.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL45 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean46 = crawlerURL45.isWrongSyntax();
        java.lang.String str47 = crawlerURL45.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse55 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL45, (int) 'a', strMap49, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str56 = hTMLPageResponse55.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL57 = hTMLPageResponse55.getPageUrl();
        boolean boolean58 = crawlerConfiguration38.equals((java.lang.Object) crawlerURL57);
        java.lang.String str59 = crawlerConfiguration38.getOnlyOnPath();
        boolean boolean60 = crawlerConfiguration30.equals((java.lang.Object) crawlerConfiguration38);
        boolean boolean61 = hTMLPageResponse18.equals((java.lang.Object) crawlerConfiguration38);
        java.lang.String str62 = crawlerConfiguration38.getStartUrl();
        java.lang.String str63 = crawlerConfiguration38.getStartUrl();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(crawlerConfiguration8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str24, "com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(crawlerConfiguration30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(crawlerConfiguration38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "urls.txt" + "'", str47, "urls.txt");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str56, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(str63);
    }

    @Test
    public void test09082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09082");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        org.jsoup.nodes.Document document15 = hTMLPageResponse12.getBody();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray16 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet17 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet17, assetResponseArray16);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray19 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet20, assetResponseArray19);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult22 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet17, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet20);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet23 = assetsVerificationResult22.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet24 = assetsVerificationResult22.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray25 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet26, assetResponseArray25);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray28 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, assetResponseArray28);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult31 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet26, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult32 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet24, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet26);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet33 = assetsVerificationResult32.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet34 = assetsVerificationResult32.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet35 = assetsVerificationResult32.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet36 = assetsVerificationResult32.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet37 = assetsVerificationResult32.getWorkingAssets();
        boolean boolean38 = hTMLPageResponse12.equals((java.lang.Object) assetResponseSet37);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray39 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40, assetResponseArray39);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray42 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet43 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet43, assetResponseArray42);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult45 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet43);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet46 = assetsVerificationResult45.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet47 = assetsVerificationResult45.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray48 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet49 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet49, assetResponseArray48);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray51 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet52 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet52, assetResponseArray51);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult54 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet49, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet52);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult55 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet47, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet49);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet56 = assetsVerificationResult55.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet57 = assetsVerificationResult55.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet58 = assetsVerificationResult55.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet59 = assetsVerificationResult55.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet60 = assetsVerificationResult55.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet61 = assetsVerificationResult55.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult62 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet37, assetResponseSet61);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(document15);
        org.junit.Assert.assertNotNull(assetResponseArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(assetResponseArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(assetResponseSet23);
        org.junit.Assert.assertNotNull(assetResponseSet24);
        org.junit.Assert.assertNotNull(assetResponseArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(assetResponseArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(assetResponseSet33);
        org.junit.Assert.assertNotNull(assetResponseSet34);
        org.junit.Assert.assertNotNull(assetResponseSet35);
        org.junit.Assert.assertNotNull(assetResponseSet36);
        org.junit.Assert.assertNotNull(assetResponseSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(assetResponseArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(assetResponseArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(assetResponseSet46);
        org.junit.Assert.assertNotNull(assetResponseSet47);
        org.junit.Assert.assertNotNull(assetResponseArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(assetResponseArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(assetResponseSet56);
        org.junit.Assert.assertNotNull(assetResponseSet57);
        org.junit.Assert.assertNotNull(assetResponseSet58);
        org.junit.Assert.assertNotNull(assetResponseSet59);
        org.junit.Assert.assertNotNull(assetResponseSet60);
        org.junit.Assert.assertNotNull(assetResponseSet61);
    }

    @Test
    public void test09083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09083");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = assetsVerificationResult6.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray11 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, assetResponseArray11);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray14 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet15 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15, assetResponseArray14);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult17 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = assetsVerificationResult17.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult19 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet10, assetResponseSet18);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = assetsVerificationResult19.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray21 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, assetResponseArray21);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray24 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25, assetResponseArray24);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult27 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet28 = assetsVerificationResult27.getNonWorkingAssets();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder29.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder29.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration34 = builder29.build();
        java.lang.String str35 = crawlerConfiguration34.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = crawlerConfiguration34.getRequestHeadersMap();
        java.lang.String str37 = crawlerConfiguration34.getNotOnPath();
        int int38 = crawlerConfiguration34.getMaxLevels();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray39 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40, assetResponseArray39);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray42 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet43 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet43, assetResponseArray42);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult45 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet43);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet46 = assetsVerificationResult45.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet47 = assetsVerificationResult45.getWorkingAssets();
        boolean boolean48 = crawlerConfiguration34.equals((java.lang.Object) assetResponseSet47);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult49 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet28, assetResponseSet47);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet50 = assetsVerificationResult49.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet51 = assetsVerificationResult49.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet52 = assetsVerificationResult49.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult53 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet20, assetResponseSet52);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray54 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet55 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet55, assetResponseArray54);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray57 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet58 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet58, assetResponseArray57);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult60 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet55, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet58);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet61 = assetsVerificationResult60.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet62 = assetsVerificationResult60.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet63 = assetsVerificationResult60.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet64 = assetsVerificationResult60.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet65 = assetsVerificationResult60.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet66 = assetsVerificationResult60.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet67 = assetsVerificationResult60.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet68 = assetsVerificationResult60.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet69 = assetsVerificationResult60.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult70 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet20, assetResponseSet69);
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseSet9);
        org.junit.Assert.assertNotNull(assetResponseSet10);
        org.junit.Assert.assertNotNull(assetResponseArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(assetResponseArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(assetResponseSet18);
        org.junit.Assert.assertNotNull(assetResponseSet20);
        org.junit.Assert.assertNotNull(assetResponseArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(assetResponseArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(assetResponseSet28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(crawlerConfiguration34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(assetResponseArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(assetResponseArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(assetResponseSet46);
        org.junit.Assert.assertNotNull(assetResponseSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(assetResponseSet50);
        org.junit.Assert.assertNotNull(assetResponseSet51);
        org.junit.Assert.assertNotNull(assetResponseSet52);
        org.junit.Assert.assertNotNull(assetResponseArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(assetResponseArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(assetResponseSet61);
        org.junit.Assert.assertNotNull(assetResponseSet62);
        org.junit.Assert.assertNotNull(assetResponseSet63);
        org.junit.Assert.assertNotNull(assetResponseSet64);
        org.junit.Assert.assertNotNull(assetResponseSet65);
        org.junit.Assert.assertNotNull(assetResponseSet66);
        org.junit.Assert.assertNotNull(assetResponseSet67);
        org.junit.Assert.assertNotNull(assetResponseSet68);
        org.junit.Assert.assertNotNull(assetResponseSet69);
    }

    @Test
    public void test09084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09084");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL15 = hTMLPageResponse12.getPageUrl();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        java.lang.String str17 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        java.net.URI uRI19 = crawlerURL18.getUri();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(crawlerURL15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str17, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertNull(uRI19);
    }

    @Test
    public void test09085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09085");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        long long16 = hTMLPageResponse12.getFetchTime();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder17.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration24 = builder17.build();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = crawlerConfiguration24.getRequestHeadersMap();
        boolean boolean26 = hTMLPageResponse12.equals((java.lang.Object) crawlerConfiguration24);
        java.lang.String str27 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL28 = hTMLPageResponse12.getPageUrl();
        org.jsoup.nodes.Document document29 = hTMLPageResponse12.getBody();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str31 = hTMLPageResponse12.getHeaderValue("HTMLPageResponseurl:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1responseCode:10encoding:hi! type:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(crawlerConfiguration24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str27, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL28);
        org.junit.Assert.assertNull(document29);
    }

    @Test
    public void test09086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09086");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher3 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher5 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder6.build();
        java.lang.String str12 = crawlerConfiguration11.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = crawlerConfiguration11.getRequestHeadersMap();
        boolean boolean14 = crawlerConfiguration11.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = crawlerConfiguration11.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable17 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("com.soulgalore.crawler.nrofhttpthreads", assetFetcher5, strMap15, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable19 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", assetFetcher3, strMap15, "com.soulgalore.crawler.proxy");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable21 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt", assetFetcher1, strMap15, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        java.lang.String str22 = assetResponseCallable21.toString();
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.assets.AssetResponse assetResponse23 = assetResponseCallable21.call();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt" + "'", str22, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt");
    }

    @Test
    public void test09087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09087");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet11 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = assetsVerificationResult6.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray13 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet14 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet14, assetResponseArray13);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray16 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet17 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet17, assetResponseArray16);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult19 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet14, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet17);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = assetsVerificationResult19.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet21 = assetsVerificationResult19.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = assetsVerificationResult19.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray23 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet24, assetResponseArray23);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray26 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet27 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet27, assetResponseArray26);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult29 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet24, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet27);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet30 = assetsVerificationResult29.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet31 = assetsVerificationResult29.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet32 = assetsVerificationResult29.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult33 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet22, assetResponseSet32);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult34 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet12, assetResponseSet32);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL37 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean38 = crawlerURL37.isWrongSyntax();
        java.lang.String str39 = crawlerURL37.getReferer();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray40 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet41, assetResponseArray40);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray43 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet44 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet44, assetResponseArray43);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult46 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet41, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet44);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet47 = assetsVerificationResult46.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet48 = assetsVerificationResult46.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet49 = assetsVerificationResult46.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet50 = assetsVerificationResult46.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray51 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet52 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet52, assetResponseArray51);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray54 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet55 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet55, assetResponseArray54);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult57 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet52, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet55);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet58 = assetsVerificationResult57.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult59 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet50, assetResponseSet58);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet60 = assetsVerificationResult59.getNonWorkingAssets();
        boolean boolean61 = crawlerURL37.equals((java.lang.Object) assetsVerificationResult59);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet62 = assetsVerificationResult59.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet63 = assetsVerificationResult59.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet64 = assetsVerificationResult59.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult65 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet32, assetResponseSet64);
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseSet9);
        org.junit.Assert.assertNotNull(assetResponseSet10);
        org.junit.Assert.assertNotNull(assetResponseSet11);
        org.junit.Assert.assertNotNull(assetResponseSet12);
        org.junit.Assert.assertNotNull(assetResponseArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(assetResponseArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(assetResponseSet20);
        org.junit.Assert.assertNotNull(assetResponseSet21);
        org.junit.Assert.assertNotNull(assetResponseSet22);
        org.junit.Assert.assertNotNull(assetResponseArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(assetResponseArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(assetResponseSet30);
        org.junit.Assert.assertNotNull(assetResponseSet31);
        org.junit.Assert.assertNotNull(assetResponseSet32);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "urls.txt" + "'", str39, "urls.txt");
        org.junit.Assert.assertNotNull(assetResponseArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(assetResponseArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(assetResponseSet47);
        org.junit.Assert.assertNotNull(assetResponseSet48);
        org.junit.Assert.assertNotNull(assetResponseSet49);
        org.junit.Assert.assertNotNull(assetResponseSet50);
        org.junit.Assert.assertNotNull(assetResponseArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(assetResponseArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(assetResponseSet58);
        org.junit.Assert.assertNotNull(assetResponseSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(assetResponseSet62);
        org.junit.Assert.assertNotNull(assetResponseSet63);
        org.junit.Assert.assertNotNull(assetResponseSet64);
    }

    @Test
    public void test09088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09088");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration5.getRequestHeadersMap();
        java.lang.String str8 = crawlerConfiguration5.getNotOnPath();
        int int9 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher11 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI15 = crawlerURL14.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration20 = builder19.build();
        java.lang.String str21 = crawlerConfiguration20.getStartUrl();
        int int22 = crawlerConfiguration20.getMaxLevels();
        int int23 = crawlerConfiguration20.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = crawlerConfiguration20.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse30 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL14, (int) (short) 10, strMap24, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable32 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Malformed url", assetFetcher11, strMap24, "errorurls.txt");
        java.lang.String str33 = assetResponseCallable32.toString();
        boolean boolean34 = crawlerConfiguration5.equals((java.lang.Object) assetResponseCallable32);
        java.lang.String str35 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str36 = crawlerConfiguration5.getStartUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(uRI15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(crawlerConfiguration20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AssetResponseCallable url:Malformed url" + "'", str33, "AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test09089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09089");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:", "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
    }

    @Test
    public void test09090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09090");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.lang.String str13 = crawlerResult12.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet14 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult12.getUrls();
        java.lang.String str17 = crawlerResult12.getTheStartPoint();
        java.lang.String str18 = crawlerResult12.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet19 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray25 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL24 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet26 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet26, crawlerURLArray25);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray29 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet30 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet30, hTMLPageResponseArray29);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult32 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet26, hTMLPageResponseSet28, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet30);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet33 = crawlerResult32.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet34 = crawlerResult32.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet35 = crawlerResult32.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet36 = crawlerResult32.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet37 = crawlerResult32.getUrls();
        java.lang.String str38 = crawlerResult32.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet39 = crawlerResult32.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL43 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean44 = crawlerURL43.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL47 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean48 = crawlerURL47.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL51 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI52 = crawlerURL51.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray53 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL43, crawlerURL47, crawlerURL51 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet54 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet54, crawlerURLArray53);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray56 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet57 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet57, hTMLPageResponseArray56);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL62 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray63 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL62 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet64 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet64, crawlerURLArray63);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet66 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray67 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet68 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet68, hTMLPageResponseArray67);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult70 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet64, hTMLPageResponseSet66, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet68);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult71 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet54, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet57, hTMLPageResponseSet66);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet72 = crawlerResult71.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet73 = crawlerResult71.getUrls();
        java.lang.String str74 = crawlerResult71.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet75 = crawlerResult71.getVerifiedURLResponses();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL79 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray80 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL79 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet81 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet81, crawlerURLArray80);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet83 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray84 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet85 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet85, hTMLPageResponseArray84);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult87 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet81, hTMLPageResponseSet83, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet85);
        java.lang.String str88 = crawlerResult87.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet89 = crawlerResult87.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet90 = crawlerResult87.getNonWorkingUrls();
        java.lang.String str91 = crawlerResult87.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet92 = crawlerResult87.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult93 = new com.soulgalore.crawler.core.CrawlerResult("CrawlerURL url:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout", crawlerURLSet39, hTMLPageResponseSet75, hTMLPageResponseSet92);
        java.lang.String str94 = crawlerResult93.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet95 = crawlerResult93.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet96 = crawlerResult93.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet97 = null;
        com.soulgalore.crawler.core.CrawlerResult crawlerResult98 = new com.soulgalore.crawler.core.CrawlerResult("AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:10", crawlerURLSet19, hTMLPageResponseSet96, hTMLPageResponseSet97);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet99 = crawlerResult98.getVerifiedURLResponses();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet19);
        org.junit.Assert.assertNotNull(crawlerURLArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet33);
        org.junit.Assert.assertNotNull(crawlerURLSet34);
        org.junit.Assert.assertNotNull(crawlerURLSet35);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet36);
        org.junit.Assert.assertNotNull(crawlerURLSet37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(uRI52);
        org.junit.Assert.assertNotNull(crawlerURLArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet72);
        org.junit.Assert.assertNotNull(crawlerURLSet73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "com.soulgalore.crawler.auth" + "'", str74, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet75);
        org.junit.Assert.assertNotNull(crawlerURLArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!" + "'", str88, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet89);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!" + "'", str91, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet92);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "CrawlerURL url:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout" + "'", str94, "CrawlerURL url:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertNotNull(crawlerURLSet95);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet96);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet99);
    }

    @Test
    public void test09091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09091");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.lang.String str14 = hTMLPageResponse12.getResponseType();
        java.lang.String str15 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "com.soulgalore.crawler.auth");
        java.lang.String str21 = crawlerURL20.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration26 = builder25.build();
        java.lang.String str27 = crawlerConfiguration26.getOnlyOnPath();
        boolean boolean28 = crawlerConfiguration26.isVerifyUrls();
        int int29 = crawlerConfiguration26.getMaxLevels();
        int int30 = crawlerConfiguration26.getMaxLevels();
        boolean boolean31 = crawlerConfiguration26.isVerifyUrls();
        boolean boolean32 = crawlerConfiguration26.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = crawlerConfiguration26.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse39 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, 100, strMap33, "Unknown error", "com.soulgalore.crawler.http.socket.timeout", (long) 10, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", 0L);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL16, (int) '4', strMap33, "97", "100", (long) (byte) 1, "com.soulgalore.crawler.http.socket.timeout", (long) (byte) -1);
        int int46 = hTMLPageResponse45.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL47 = hTMLPageResponse45.getPageUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder48 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder50 = builder48.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration51 = builder50.build();
        java.lang.String str52 = crawlerConfiguration51.getStartUrl();
        java.lang.String str53 = crawlerConfiguration51.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap54 = crawlerConfiguration51.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = crawlerConfiguration51.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = crawlerConfiguration51.getRequestHeadersMap();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL59 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean60 = crawlerURL59.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder62 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder64 = builder62.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder66 = builder62.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration67 = builder62.build();
        java.lang.String str68 = crawlerConfiguration67.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap69 = crawlerConfiguration67.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse75 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL59, (-1), strMap69, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int76 = hTMLPageResponse75.getResponseCode();
        int int77 = hTMLPageResponse75.getResponseCode();
        boolean boolean78 = crawlerConfiguration51.equals((java.lang.Object) hTMLPageResponse75);
        java.lang.String str79 = crawlerConfiguration51.getOnlyOnPath();
        java.lang.String str80 = crawlerConfiguration51.getOnlyOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder81 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder83 = builder81.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder85 = builder81.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration86 = builder85.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration87 = builder85.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder89 = builder85.setRequestHeaders("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder91 = builder89.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder93 = builder89.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
        boolean boolean94 = crawlerConfiguration51.equals((java.lang.Object) builder93);
        boolean boolean95 = crawlerURL47.equals((java.lang.Object) builder93);
        java.lang.String str96 = crawlerURL47.getUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.auth" + "'", str15, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "CrawlerURL url:urls.txt" + "'", str21, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(crawlerConfiguration26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(crawlerURL47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(crawlerConfiguration51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(crawlerConfiguration67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(crawlerConfiguration86);
        org.junit.Assert.assertNotNull(crawlerConfiguration87);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "com.soulgalore.crawler.auth" + "'", str96, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test09092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09092");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet12 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet16 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = crawlerResult11.getUrls();
        java.lang.String str18 = crawlerResult11.getTheStartPoint();
        java.lang.String str19 = crawlerResult11.getTheStartPoint();
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet12);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet16);
        org.junit.Assert.assertNotNull(crawlerURLSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
    }

    @Test
    public void test09093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09093");
        com.soulgalore.crawler.util.HeaderUtil headerUtil0 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = headerUtil0.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap4 = headerUtil0.createHeadersFromString("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil0.createHeadersFromString("CrawlerURL url:10");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = headerUtil0.createHeadersFromString("AssetResponseCallable url:errorassets.csv");
        java.lang.Class<?> wildcardClass9 = strMap8.getClass();
        org.junit.Assert.assertNotNull(headerUtil0);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test09094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09094");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder2.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder2.build();
        java.lang.String str8 = crawlerConfiguration7.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = crawlerConfiguration7.getRequestHeadersMap();
        java.lang.String str10 = crawlerConfiguration7.getNotOnPath();
        boolean boolean11 = crawlerConfiguration7.isVerifyUrls();
        boolean boolean12 = crawlerConfiguration7.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = crawlerConfiguration7.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable15 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Malformed url", assetFetcher1, strMap13, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt");
        java.lang.String str16 = assetResponseCallable15.toString();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AssetResponseCallable url:Malformed url" + "'", str16, "AssetResponseCallable url:Malformed url");
    }

    @Test
    public void test09095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09095");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse37 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (short) 100, strMap31, "-1", "1", (long) (byte) 10, "com.soulgalore.crawler.nrofhttpthreads", (long) (short) 1);
        java.lang.String str38 = hTMLPageResponse37.toString();
        org.jsoup.nodes.Document document39 = hTMLPageResponse37.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL40 = hTMLPageResponse37.getPageUrl();
        java.lang.String str41 = hTMLPageResponse37.getEncoding();
        java.lang.String str42 = hTMLPageResponse37.toString();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads" + "'", str38, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNull(document39);
        org.junit.Assert.assertNotNull(crawlerURL40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1" + "'", str41, "1");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads" + "'", str42, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads");
    }

    @Test
    public void test09096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09096");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        long long16 = hTMLPageResponse12.getFetchTime();
        org.jsoup.nodes.Document document17 = hTMLPageResponse12.getBody();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder18.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration23 = builder18.build();
        java.lang.String str24 = crawlerConfiguration23.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = crawlerConfiguration23.getRequestHeadersMap();
        boolean boolean26 = crawlerConfiguration23.isVerifyUrls();
        java.lang.String str27 = crawlerConfiguration23.getStartUrl();
        boolean boolean28 = crawlerConfiguration23.isVerifyUrls();
        com.soulgalore.crawler.util.StatusCode statusCode29 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT;
        int int30 = statusCode29.getCode();
        int int31 = statusCode29.getCode();
        java.lang.String str32 = statusCode29.getFriendlyName();
        java.lang.String str33 = statusCode29.getFriendlyName();
        java.lang.String str34 = statusCode29.getFriendlyName();
        boolean boolean35 = crawlerConfiguration23.equals((java.lang.Object) str34);
        java.lang.String str36 = crawlerConfiguration23.getRequestHeaders();
        boolean boolean37 = hTMLPageResponse12.equals((java.lang.Object) crawlerConfiguration23);
        int int38 = hTMLPageResponse12.getResponseCode();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder41 = builder39.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder43 = builder39.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder45 = builder39.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder47 = builder45.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder49 = builder47.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder51 = builder47.setMaxLevels(10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder53 = builder51.setNotOnPath("result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder55 = builder51.setOnlyOnPath("HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder57 = builder55.setRequestHeaders("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout");
        boolean boolean58 = hTMLPageResponse12.equals((java.lang.Object) builder57);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder60 = builder57.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:308encoding:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:32encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url type:com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder62 = builder60.setMaxLevels(308);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertNull(document17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(crawlerConfiguration23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + statusCode29 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT + "'", statusCode29.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 580 + "'", int30 == 580);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 580 + "'", int31 == 580);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Response timed out" + "'", str32, "Response timed out");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Response timed out" + "'", str33, "Response timed out");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Response timed out" + "'", str34, "Response timed out");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 97 + "'", int38 == 97);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder62);
    }

    @Test
    public void test09097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09097");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        long long15 = hTMLPageResponse12.getFetchTime();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        java.lang.Object obj17 = null;
        boolean boolean18 = hTMLPageResponse12.equals(obj17);
        int int19 = hTMLPageResponse12.getResponseCode();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 100L + "'", long15 == 100L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
    }

    @Test
    public void test09098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09098");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        int int6 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil7 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean8 = crawlerConfiguration5.equals((java.lang.Object) headerUtil7);
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil7.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil7.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil7.createHeadersFromString("AssetResponseCallable url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap16 = headerUtil7.createHeadersFromString("AssetResponseCallable url:Unknown error");
        java.util.Map<java.lang.String, java.lang.String> strMap18 = headerUtil7.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap20 = headerUtil7.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:10");
        java.util.Map<java.lang.String, java.lang.String> strMap22 = headerUtil7.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap24 = headerUtil7.createHeadersFromString("HTMLPageResponseurl:AssetResponseCallable url:Malformed urlresponseCode:581encoding:Unknown error type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(headerUtil7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap24);
    }

    @Test
    public void test09099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09099");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder0.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder0.setRequestHeaders("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setNotOnPath("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder9.setMaxLevels(582);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder9.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder15.setMaxLevels(100);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder15.setMaxLevels(582);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setRequestHeaders("AssetResponseCallable url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
    }

    @Test
    public void test09100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09100");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        boolean boolean3 = crawlerURL1.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean7 = crawlerURL6.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder9.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration14 = builder9.build();
        java.lang.String str15 = crawlerConfiguration14.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = crawlerConfiguration14.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse22 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL6, (-1), strMap16, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int23 = hTMLPageResponse22.getResponseCode();
        long long24 = hTMLPageResponse22.getFetchTime();
        long long25 = hTMLPageResponse22.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL28 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI29 = crawlerURL28.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean34 = crawlerURL33.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder36.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder36.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration41 = builder36.build();
        java.lang.String str42 = crawlerConfiguration41.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = crawlerConfiguration41.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse49 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL33, (-1), strMap43, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse55 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL28, 100, strMap43, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        boolean boolean56 = hTMLPageResponse22.equals((java.lang.Object) 100);
        org.jsoup.nodes.Document document57 = hTMLPageResponse22.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL60 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "com.soulgalore.crawler.auth");
        java.lang.String str61 = crawlerURL60.toString();
        boolean boolean62 = hTMLPageResponse22.equals((java.lang.Object) str61);
        boolean boolean63 = crawlerURL1.equals((java.lang.Object) hTMLPageResponse22);
        long long64 = hTMLPageResponse22.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse69 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.proxy", "", (int) (short) -1, (long) 583);
        java.lang.String str70 = assetResponse69.getUrl();
        java.lang.String str71 = assetResponse69.getReferer();
        long long72 = assetResponse69.getFetchTime();
        boolean boolean73 = hTMLPageResponse22.equals((java.lang.Object) assetResponse69);
        java.lang.String str74 = assetResponse69.getUrl();
        java.lang.String str75 = assetResponse69.getReferer();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(crawlerConfiguration14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 580L + "'", long24 == 580L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 580L + "'", long25 == 580L);
        org.junit.Assert.assertNull(uRI29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(crawlerConfiguration41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(document57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "CrawlerURL url:urls.txt" + "'", str61, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 580L + "'", long64 == 580L);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "com.soulgalore.crawler.proxy" + "'", str70, "com.soulgalore.crawler.proxy");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 583L + "'", long72 == 583L);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "com.soulgalore.crawler.proxy" + "'", str74, "com.soulgalore.crawler.proxy");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
    }

    @Test
    public void test09101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09101");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        int int7 = assetResponse4.getResponseCode();
        java.lang.String str8 = assetResponse4.getUrl();
        int int9 = assetResponse4.getResponseCode();
        long long10 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder11.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration16 = builder15.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration17 = builder15.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder15.setRequestHeaders("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setNotOnPath("");
        boolean boolean22 = assetResponse4.equals((java.lang.Object) builder21);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder21.setMaxLevels(100);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder24.setOnlyOnPath("Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration27 = builder24.build();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = crawlerConfiguration27.getRequestHeadersMap();
        int int29 = crawlerConfiguration27.getMaxLevels();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(crawlerConfiguration16);
        org.junit.Assert.assertNotNull(crawlerConfiguration17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(crawlerConfiguration27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
    }

    @Test
    public void test09102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09102");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder0.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder0.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder0.setNotOnPath("result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder0.setMaxLevels(52);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder15.setRequestHeaders("CrawlerURL url:urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder15.setStartUrl("CrawlerURL url:AssetResponseCallable url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
    }

    @Test
    public void test09103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09103");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder8.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration19 = builder18.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration20 = builder18.build();
        boolean boolean21 = crawlerConfiguration3.equals((java.lang.Object) crawlerConfiguration20);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder22.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration27 = builder22.build();
        int int28 = crawlerConfiguration27.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil29 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean30 = crawlerConfiguration27.equals((java.lang.Object) headerUtil29);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = headerUtil29.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap34 = headerUtil29.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap36 = headerUtil29.createHeadersFromString("AssetResponseCallable url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap38 = headerUtil29.createHeadersFromString("CrawlerURL url:urls.txt");
        java.util.Map<java.lang.String, java.lang.String> strMap40 = headerUtil29.createHeadersFromString("AssetResponseCallable url:100");
        boolean boolean41 = crawlerConfiguration20.equals((java.lang.Object) headerUtil29);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = headerUtil29.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout");
        java.util.Map<java.lang.String, java.lang.String> strMap45 = headerUtil29.createHeadersFromString("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap47 = headerUtil29.createHeadersFromString("HTMLPageResponseurl:AssetResponseCallable url:Malformed urlresponseCode:581encoding:Unknown error type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
        java.util.Map<java.lang.String, java.lang.String> strMap49 = headerUtil29.createHeadersFromString("CrawlerURL url:CrawlerURL url:urls.txt");
        java.util.Map<java.lang.String, java.lang.String> strMap51 = headerUtil29.createHeadersFromString("CrawlerURL url:Wrong content type");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(crawlerConfiguration19);
        org.junit.Assert.assertNotNull(crawlerConfiguration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(crawlerConfiguration27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(headerUtil29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap51);
    }

    @Test
    public void test09104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09104");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.lang.String str12 = crawlerResult11.getTheStartPoint();
        java.lang.String str13 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet14 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet16 = crawlerResult11.getNonWorkingUrls();
        java.lang.String str17 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet18 = crawlerResult11.getNonWorkingUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet14);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet15);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet18);
    }

    @Test
    public void test09105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09105");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet12 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet16 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet18 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet19 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet20 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet21 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet22 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet23 = crawlerResult11.getUrls();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet24 = crawlerResult11.getVerifiedURLResponses();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet12);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet16);
        org.junit.Assert.assertNotNull(crawlerURLSet17);
        org.junit.Assert.assertNotNull(crawlerURLSet18);
        org.junit.Assert.assertNotNull(crawlerURLSet19);
        org.junit.Assert.assertNotNull(crawlerURLSet20);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet21);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet22);
        org.junit.Assert.assertNotNull(crawlerURLSet23);
    }

    @Test
    public void test09106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09106");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration3.getRequestHeadersMap();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray12 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL11 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet13, crawlerURLArray12);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray16 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet17, hTMLPageResponseArray16);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult19 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet13, hTMLPageResponseSet15, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet17);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet20 = crawlerResult19.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet21 = crawlerResult19.getUrls();
        boolean boolean22 = crawlerConfiguration3.equals((java.lang.Object) crawlerURLSet21);
        java.lang.String str23 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str24 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str25 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str26 = crawlerConfiguration3.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(crawlerURLArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet20);
        org.junit.Assert.assertNotNull(crawlerURLSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
    }

    @Test
    public void test09107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09107");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv", "result.csv");
        java.net.URI uRI3 = crawlerURL2.getUri();
        org.junit.Assert.assertNull(uRI3);
    }

    @Test
    public void test09108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09108");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        java.lang.String str20 = hTMLPageResponse18.getHeaderValue("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = hTMLPageResponse18.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = hTMLPageResponse18.getPageUrl();
        java.lang.String str23 = hTMLPageResponse18.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL26 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean27 = crawlerURL26.isWrongSyntax();
        java.lang.String str28 = crawlerURL26.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse36 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL26, (int) 'a', strMap30, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str37 = hTMLPageResponse36.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean39 = hTMLPageResponse36.equals((java.lang.Object) builder38);
        long long40 = hTMLPageResponse36.getFetchTime();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder41 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder43 = builder41.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder45 = builder41.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder47 = builder41.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration48 = builder41.build();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = crawlerConfiguration48.getRequestHeadersMap();
        boolean boolean50 = hTMLPageResponse36.equals((java.lang.Object) crawlerConfiguration48);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = crawlerConfiguration48.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap52 = crawlerConfiguration48.getRequestHeadersMap();
        boolean boolean53 = hTMLPageResponse18.equals((java.lang.Object) crawlerConfiguration48);
        java.lang.String str54 = crawlerConfiguration48.getOnlyOnPath();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(crawlerURL21);
        org.junit.Assert.assertNotNull(crawlerURL22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "errorurls.txt" + "'", str23, "errorurls.txt");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "urls.txt" + "'", str28, "urls.txt");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "com.soulgalore.crawler.auth" + "'", str37, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 100L + "'", long40 == 100L);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(crawlerConfiguration48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
    }

    @Test
    public void test09109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09109");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet12 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult11.getUrls();
        java.lang.String str15 = crawlerResult11.getTheStartPoint();
        java.lang.String str16 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet18 = crawlerResult11.getNonWorkingUrls();
        java.lang.String str19 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet20 = crawlerResult11.getNonWorkingUrls();
        java.lang.String str21 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet22 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet23 = crawlerResult11.getNonWorkingUrls();
        java.lang.String str24 = crawlerResult11.getTheStartPoint();
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet12);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet17);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet22);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
    }

    @Test
    public void test09110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09110");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        boolean boolean22 = hTMLPageResponse12.equals((java.lang.Object) builder21);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder21.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder21.setMaxLevels((int) (short) 10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder26.setRequestHeaders("CrawlerURL url:hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
    }

    @Test
    public void test09111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09111");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int19 = hTMLPageResponse18.getResponseCode();
        long long20 = hTMLPageResponse18.getFetchTime();
        long long21 = hTMLPageResponse18.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI25 = crawlerURL24.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean30 = crawlerURL29.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder32.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration37 = builder32.build();
        java.lang.String str38 = crawlerConfiguration37.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = crawlerConfiguration37.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, (-1), strMap39, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse51 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL24, 100, strMap39, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        boolean boolean52 = hTMLPageResponse18.equals((java.lang.Object) 100);
        org.jsoup.nodes.Document document53 = hTMLPageResponse18.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL54 = hTMLPageResponse18.getPageUrl();
        java.lang.String str56 = hTMLPageResponse18.getHeaderValue("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder57 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder59 = builder57.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder61 = builder57.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder63 = builder61.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder65 = builder63.setOnlyOnPath("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder67 = builder63.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder69 = builder67.setRequestHeaders("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout");
        boolean boolean70 = hTMLPageResponse18.equals((java.lang.Object) builder67);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder72 = builder67.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration73 = builder72.build();
        java.lang.String str74 = crawlerConfiguration73.getRequestHeaders();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 580L + "'", long20 == 580L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 580L + "'", long21 == 580L);
        org.junit.Assert.assertNull(uRI25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(crawlerConfiguration37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(document53);
        org.junit.Assert.assertNotNull(crawlerURL54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(crawlerConfiguration73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout" + "'", str74, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout");
    }

    @Test
    public void test09112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09112");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("errorassets.csv", "AssetResponseCallable url:result.csv");
        java.lang.String str3 = crawlerURL2.getReferer();
        java.lang.String str4 = crawlerURL2.getHost();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI8 = crawlerURL7.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration12 = builder11.build();
        java.lang.String str13 = crawlerConfiguration12.getStartUrl();
        int int14 = crawlerConfiguration12.getMaxLevels();
        int int15 = crawlerConfiguration12.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean19 = crawlerURL18.isWrongSyntax();
        java.lang.String str20 = crawlerURL18.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse28 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL18, (int) 'a', strMap22, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str29 = hTMLPageResponse28.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL30 = hTMLPageResponse28.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = hTMLPageResponse28.getResponseHeaders();
        java.lang.String str32 = hTMLPageResponse28.getUrl();
        org.jsoup.nodes.Document document33 = hTMLPageResponse28.getBody();
        boolean boolean34 = crawlerConfiguration12.equals((java.lang.Object) hTMLPageResponse28);
        boolean boolean35 = crawlerURL7.equals((java.lang.Object) hTMLPageResponse28);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = builder37.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration40 = builder39.build();
        java.lang.String str41 = crawlerConfiguration40.getStartUrl();
        int int42 = crawlerConfiguration40.getMaxLevels();
        int int43 = crawlerConfiguration40.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = crawlerConfiguration40.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse50 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, 582, strMap44, "urls.txt", "hi!", (long) (short) 0, "AssetResponseCallable url:result.csv", 10L);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = hTMLPageResponse50.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL53 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI54 = crawlerURL53.getUri();
        boolean boolean55 = crawlerURL53.isWrongSyntax();
        java.lang.String str56 = crawlerURL53.getHost();
        java.net.URI uRI57 = crawlerURL53.getUri();
        java.net.URI uRI58 = crawlerURL53.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL62 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI63 = crawlerURL62.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder65 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder67 = builder65.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration68 = builder67.build();
        java.lang.String str69 = crawlerConfiguration68.getStartUrl();
        int int70 = crawlerConfiguration68.getMaxLevels();
        int int71 = crawlerConfiguration68.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap72 = crawlerConfiguration68.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse78 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL62, (int) (short) 10, strMap72, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int79 = hTMLPageResponse78.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = hTMLPageResponse78.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse86 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL53, 0, strMap80, "CrawlerURL url:result.csv", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) 583, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (byte) 1);
        java.lang.String str87 = hTMLPageResponse86.getUrl();
        boolean boolean88 = hTMLPageResponse50.equals((java.lang.Object) str87);
        java.lang.String str89 = hTMLPageResponse50.getResponseType();
        java.util.Map<java.lang.String, java.lang.String> strMap90 = hTMLPageResponse50.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse96 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) 1, strMap90, "AssetResponseCallable url:AssetResponseCallable url:1", "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth", (long) (short) -1, "", (long) (short) -1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AssetResponseCallable url:result.csv" + "'", str3, "AssetResponseCallable url:result.csv");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(uRI8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(crawlerConfiguration12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "urls.txt" + "'", str20, "urls.txt");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str29, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "com.soulgalore.crawler.auth" + "'", str32, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(crawlerConfiguration40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(uRI54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(uRI57);
        org.junit.Assert.assertNull(uRI58);
        org.junit.Assert.assertNull(uRI63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(crawlerConfiguration68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 10 + "'", int79 == 10);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str87, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "AssetResponseCallable url:result.csv" + "'", str89, "AssetResponseCallable url:result.csv");
        org.junit.Assert.assertNotNull(strMap90);
    }

    @Test
    public void test09113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09113");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.lang.String str14 = hTMLPageResponse12.getResponseType();
        java.lang.String str15 = hTMLPageResponse12.getUrl();
        java.lang.String str16 = hTMLPageResponse12.getEncoding();
        java.lang.String str17 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration21 = builder20.build();
        java.lang.String str22 = crawlerConfiguration21.getStartUrl();
        java.lang.String str23 = crawlerConfiguration21.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = crawlerConfiguration21.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = crawlerConfiguration21.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = crawlerConfiguration21.getRequestHeadersMap();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean30 = crawlerURL29.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder32.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration37 = builder32.build();
        java.lang.String str38 = crawlerConfiguration37.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = crawlerConfiguration37.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, (-1), strMap39, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int46 = hTMLPageResponse45.getResponseCode();
        int int47 = hTMLPageResponse45.getResponseCode();
        boolean boolean48 = crawlerConfiguration21.equals((java.lang.Object) hTMLPageResponse45);
        long long49 = hTMLPageResponse45.getFetchTime();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder50 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder52 = builder50.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration53 = builder52.build();
        java.lang.String str54 = crawlerConfiguration53.getStartUrl();
        java.lang.String str55 = crawlerConfiguration53.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = crawlerConfiguration53.getRequestHeadersMap();
        java.lang.String str57 = crawlerConfiguration53.getNotOnPath();
        java.lang.String str58 = crawlerConfiguration53.getStartUrl();
        java.lang.String str59 = crawlerConfiguration53.getRequestHeaders();
        boolean boolean60 = hTMLPageResponse45.equals((java.lang.Object) str59);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL63 = new com.soulgalore.crawler.core.CrawlerURL("Redirected to new domain", "1");
        boolean boolean64 = hTMLPageResponse45.equals((java.lang.Object) "Redirected to new domain");
        boolean boolean65 = hTMLPageResponse12.equals((java.lang.Object) "Redirected to new domain");
        long long66 = hTMLPageResponse12.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL67 = hTMLPageResponse12.getPageUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.auth" + "'", str15, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str16, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str17, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(crawlerConfiguration21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(crawlerConfiguration37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 580L + "'", long49 == 580L);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(crawlerConfiguration53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 100L + "'", long66 == 100L);
        org.junit.Assert.assertNotNull(crawlerURL67);
    }

    @Test
    public void test09114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09114");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.lang.String str15 = crawlerResult12.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet18 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet19 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL23 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray24 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL23 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet25 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet25, crawlerURLArray24);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet27 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray28 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet29 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet29, hTMLPageResponseArray28);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult31 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet25, hTMLPageResponseSet27, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet29);
        java.lang.String str32 = crawlerResult31.getTheStartPoint();
        java.lang.String str33 = crawlerResult31.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet34 = crawlerResult31.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet35 = crawlerResult31.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet36 = crawlerResult31.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet37 = crawlerResult31.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL41 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray42 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL41 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet43 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet43, crawlerURLArray42);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet45 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray46 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet47 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet47, hTMLPageResponseArray46);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult49 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet43, hTMLPageResponseSet45, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet47);
        java.lang.String str50 = crawlerResult49.getTheStartPoint();
        java.lang.String str51 = crawlerResult49.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet52 = crawlerResult49.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet53 = crawlerResult49.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet54 = crawlerResult49.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet55 = crawlerResult49.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet56 = crawlerResult49.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet57 = crawlerResult49.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult58 = new com.soulgalore.crawler.core.CrawlerResult("HTMLPageResponseurl:hi!responseCode:10encoding:result.csv type:hi!", crawlerURLSet19, hTMLPageResponseSet37, hTMLPageResponseSet57);
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(crawlerURLSet17);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet18);
        org.junit.Assert.assertNotNull(crawlerURLSet19);
        org.junit.Assert.assertNotNull(crawlerURLArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet34);
        org.junit.Assert.assertNotNull(crawlerURLSet35);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet36);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet37);
        org.junit.Assert.assertNotNull(crawlerURLArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet52);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet53);
        org.junit.Assert.assertNotNull(crawlerURLSet54);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet55);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet56);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet57);
    }

    @Test
    public void test09115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09115");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder4.setOnlyOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder4.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder4.build();
        java.lang.String str16 = crawlerConfiguration15.getStartUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
        boolean boolean19 = crawlerConfiguration15.equals((java.lang.Object) crawlerURL18);
        java.lang.String str20 = crawlerConfiguration15.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
    }

    @Test
    public void test09116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09116");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        int int8 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str9 = crawlerConfiguration3.getRequestHeaders();
        java.lang.String str10 = crawlerConfiguration3.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str12 = crawlerConfiguration3.getStartUrl();
        java.lang.String str13 = crawlerConfiguration3.getOnlyOnPath();
        java.lang.String str14 = crawlerConfiguration3.getNotOnPath();
        boolean boolean15 = crawlerConfiguration3.isVerifyUrls();
        java.lang.String str16 = crawlerConfiguration3.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test09117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09117");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "Response timed out");
        com.soulgalore.crawler.util.HeaderUtil headerUtil4 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil4.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) '4', strMap6, "com.soulgalore.crawler.http.socket.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 580, "com.soulgalore.crawler.auth", (long) (short) 1);
        org.jsoup.nodes.Document document13 = hTMLPageResponse12.getBody();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        int int15 = hTMLPageResponse12.getResponseCode();
        org.junit.Assert.assertNotNull(headerUtil4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(document13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
    }

    @Test
    public void test09118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09118");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        long long17 = hTMLPageResponse12.getFetchTime();
        int int18 = hTMLPageResponse12.getResponseCode();
        java.lang.String str19 = hTMLPageResponse12.getResponseType();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = hTMLPageResponse12.getHeaderValue("CrawlerURL url:hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 100L + "'", long17 == 100L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 97 + "'", int18 == 97);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test09119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09119");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        org.jsoup.nodes.Document document15 = hTMLPageResponse12.getBody();
        java.lang.String str16 = hTMLPageResponse12.getResponseType();
        java.lang.String str17 = hTMLPageResponse12.getUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = hTMLPageResponse12.getResponseHeaders();
        int int19 = hTMLPageResponse12.getResponseCode();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = hTMLPageResponse12.getHeaderValue("AssetResponseCallable url:CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:10");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(document15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "com.soulgalore.crawler.auth" + "'", str17, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
    }

    @Test
    public void test09120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09120");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.util.Map<java.lang.String, java.lang.String> strMap30 = hTMLPageResponse29.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean34 = crawlerURL33.isWrongSyntax();
        java.lang.String str35 = crawlerURL33.getReferer();
        java.lang.String str36 = crawlerURL33.getHost();
        java.lang.String str37 = crawlerURL33.getUrl();
        boolean boolean38 = hTMLPageResponse29.equals((java.lang.Object) crawlerURL33);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL41 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI42 = crawlerURL41.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder43 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder45 = builder43.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration46 = builder45.build();
        java.lang.String str47 = crawlerConfiguration46.getStartUrl();
        int int48 = crawlerConfiguration46.getMaxLevels();
        int int49 = crawlerConfiguration46.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL52 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean53 = crawlerURL52.isWrongSyntax();
        java.lang.String str54 = crawlerURL52.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse62 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL52, (int) 'a', strMap56, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str63 = hTMLPageResponse62.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL64 = hTMLPageResponse62.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap65 = hTMLPageResponse62.getResponseHeaders();
        java.lang.String str66 = hTMLPageResponse62.getUrl();
        org.jsoup.nodes.Document document67 = hTMLPageResponse62.getBody();
        boolean boolean68 = crawlerConfiguration46.equals((java.lang.Object) hTMLPageResponse62);
        boolean boolean69 = crawlerURL41.equals((java.lang.Object) hTMLPageResponse62);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder71 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder73 = builder71.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration74 = builder73.build();
        java.lang.String str75 = crawlerConfiguration74.getStartUrl();
        int int76 = crawlerConfiguration74.getMaxLevels();
        int int77 = crawlerConfiguration74.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap78 = crawlerConfiguration74.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse84 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL41, 582, strMap78, "urls.txt", "hi!", (long) (short) 0, "AssetResponseCallable url:result.csv", 10L);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse90 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL33, (int) '4', strMap78, "CrawlerURL url:100", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads", (long) (byte) 1, "-1", (long) (short) 0);
        java.lang.String str91 = hTMLPageResponse90.getResponseType();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL92 = hTMLPageResponse90.getPageUrl();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "urls.txt" + "'", str35, "urls.txt");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "com.soulgalore.crawler.auth" + "'", str37, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(uRI42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(crawlerConfiguration46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "urls.txt" + "'", str54, "urls.txt");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str63, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "com.soulgalore.crawler.auth" + "'", str66, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(crawlerConfiguration74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "-1" + "'", str91, "-1");
        org.junit.Assert.assertNotNull(crawlerURL92);
    }

    @Test
    public void test09121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09121");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean14 = assetResponse4.equals((java.lang.Object) 100L);
        java.lang.String str15 = assetResponse4.getReferer();
        java.lang.String str16 = assetResponse4.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder17.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder23.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder29.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder29.setVerifyUrls(false);
        boolean boolean34 = assetResponse4.equals((java.lang.Object) builder29);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration35 = builder29.build();
        java.lang.String str36 = crawlerConfiguration35.getOnlyOnPath();
        int int37 = crawlerConfiguration35.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = crawlerConfiguration35.getRequestHeadersMap();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100" + "'", str15, "100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "100" + "'", str16, "100");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(crawlerConfiguration35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(strMap38);
    }

    @Test
    public void test09122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09122");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setMaxLevels((int) '4');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setMaxLevels(583);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setOnlyOnPath("Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("AssetResponseCallable url:Redirected to new domain");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setOnlyOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setOnlyOnPath("AssetResponseCallable url:CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test09123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09123");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        java.lang.String str2 = crawlerURL1.getUrl();
        boolean boolean3 = crawlerURL1.isWrongSyntax();
        com.soulgalore.crawler.util.HeaderUtil headerUtil5 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = headerUtil5.createHeadersFromString("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse13 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) 10, strMap7, "urls.txt", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (byte) 10, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", (-1L));
        java.lang.String str15 = hTMLPageResponse13.getHeaderValue("CrawlerURL url:1");
        long long16 = hTMLPageResponse13.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse13.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = hTMLPageResponse13.getResponseHeaders();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(headerUtil5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test09124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09124");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder0.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder0.setOnlyOnPath("com.soulgalore.crawler.http.socket.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder0.setStartUrl("CrawlerURL url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setStartUrl("97");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setNotOnPath("AssetResponseCallable url:HTMLPageResponseurl:result.csvresponseCode:-1encoding:AssetResponseCallable url:Wrong content type type:CrawlerURL url:errorassets.csv");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
    }

    @Test
    public void test09125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09125");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int13 = hTMLPageResponse12.getResponseCode();
        int int14 = hTMLPageResponse12.getResponseCode();
        java.lang.String str15 = hTMLPageResponse12.getUrl();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        int int17 = hTMLPageResponse12.getResponseCode();
        java.lang.String str18 = hTMLPageResponse12.getUrl();
        java.lang.String str19 = hTMLPageResponse12.toString();
        java.lang.String str20 = hTMLPageResponse12.toString();
        long long21 = hTMLPageResponse12.getFetchTime();
        java.lang.String str22 = hTMLPageResponse12.getUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 97 + "'", int14 == 97);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.auth" + "'", str15, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 97 + "'", int17 == 97);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.auth" + "'", str18, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str19, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str20, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 100L + "'", long21 == 100L);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "com.soulgalore.crawler.auth" + "'", str22, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test09126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09126");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        java.lang.String str2 = crawlerURL1.getUrl();
        boolean boolean3 = crawlerURL1.isWrongSyntax();
        java.lang.String str4 = crawlerURL1.toString();
        java.net.URI uRI5 = crawlerURL1.getUri();
        java.lang.String str6 = crawlerURL1.getUrl();
        java.lang.String str7 = crawlerURL1.getUrl();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CrawlerURL url:hi!" + "'", str4, "CrawlerURL url:hi!");
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    }

    @Test
    public void test09127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09127");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        java.lang.String str6 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration3.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = crawlerConfiguration3.getRequestHeadersMap();
        boolean boolean9 = crawlerConfiguration3.isVerifyUrls();
        java.lang.String str10 = crawlerConfiguration3.getOnlyOnPath();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse15 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url", "AssetResponseCallable url:com.soulgalore.crawler.auth", (int) (byte) 10, 0L);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder16.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder16.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder24.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder26.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder26.setMaxLevels(308);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder30.setRequestHeaders("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads");
        boolean boolean33 = assetResponse15.equals((java.lang.Object) builder32);
        boolean boolean34 = crawlerConfiguration3.equals((java.lang.Object) boolean33);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test09128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09128");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        int int7 = crawlerConfiguration5.getMaxLevels();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test09129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09129");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean6 = crawlerURL5.isWrongSyntax();
        java.lang.String str7 = crawlerURL5.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse15 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) 'a', strMap9, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str16 = hTMLPageResponse15.getUrl();
        boolean boolean17 = crawlerURL1.equals((java.lang.Object) str16);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher20 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil21 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = headerUtil21.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable25 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher20, strMap23, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse31 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) 100, strMap23, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        org.jsoup.nodes.Document document32 = hTMLPageResponse31.getBody();
        java.lang.String str34 = hTMLPageResponse31.getHeaderValue("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        int int35 = hTMLPageResponse31.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = hTMLPageResponse31.getResponseHeaders();
        java.lang.String str37 = hTMLPageResponse31.getUrl();
        java.lang.String str38 = hTMLPageResponse31.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = hTMLPageResponse31.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL40 = hTMLPageResponse31.getPageUrl();
        long long41 = hTMLPageResponse31.getFetchTime();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "urls.txt" + "'", str7, "urls.txt");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(headerUtil21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(document32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str37, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Unknown error" + "'", str38, "Unknown error");
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(crawlerURL40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 100L + "'", long41 == 100L);
    }

    @Test
    public void test09130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09130");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setStartUrl("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder16.setStartUrl("10");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder20.setStartUrl("CrawlerURL url:urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setOnlyOnPath("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration25 = builder22.build();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(crawlerConfiguration25);
    }

    @Test
    public void test09131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09131");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("52");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder0.build();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
    }

    @Test
    public void test09132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09132");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher3 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder7.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setStartUrl("-1");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration14 = builder13.build();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = crawlerConfiguration14.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse21 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) '4', strMap15, "result.csv", "Unknown error", 0L, "CrawlerURL url:com.soulgalore.crawler.auth", (long) 52);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable23 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads", assetFetcher3, strMap15, "97");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable25 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:HTMLPageResponseurl:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1responseCode:10encoding:hi! type:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", assetFetcher1, strMap15, "AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(crawlerConfiguration14);
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test09133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09133");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int19 = hTMLPageResponse18.getResponseCode();
        int int20 = hTMLPageResponse18.getResponseCode();
        java.lang.String str21 = hTMLPageResponse18.toString();
        org.jsoup.nodes.Document document22 = hTMLPageResponse18.getBody();
        java.lang.String str23 = hTMLPageResponse18.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth" + "'", str21, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth" + "'", str23, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
    }

    @Test
    public void test09134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09134");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder0.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder0.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder0.setNotOnPath("result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder0.setMaxLevels(52);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setOnlyOnPath("AssetResponseCallable url:AssetResponseCallable url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder13.setNotOnPath("CrawlerURL url:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:hi!");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
    }

    @Test
    public void test09135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09135");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI6 = crawlerURL5.getUri();
        boolean boolean7 = crawlerURL5.isWrongSyntax();
        java.lang.String str8 = crawlerURL5.getHost();
        java.net.URI uRI9 = crawlerURL5.getUri();
        java.net.URI uRI10 = crawlerURL5.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI15 = crawlerURL14.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration20 = builder19.build();
        java.lang.String str21 = crawlerConfiguration20.getStartUrl();
        int int22 = crawlerConfiguration20.getMaxLevels();
        int int23 = crawlerConfiguration20.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = crawlerConfiguration20.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse30 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL14, (int) (short) 10, strMap24, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int31 = hTMLPageResponse30.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = hTMLPageResponse30.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse38 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, 0, strMap32, "CrawlerURL url:result.csv", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) 583, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (byte) 1);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse44 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) 'a', strMap32, "AssetResponseCallable url:com.soulgalore.crawler.auth", "AssetResponseCallable url:errorassets.csv", (long) 100, "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", 35L);
        java.lang.String str45 = crawlerURL1.getUrl();
        java.net.URI uRI46 = crawlerURL1.getUri();
        com.soulgalore.crawler.util.HeaderUtil headerUtil48 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = headerUtil48.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap52 = headerUtil48.createHeadersFromString("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.util.Map<java.lang.String, java.lang.String> strMap54 = headerUtil48.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap56 = headerUtil48.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:CrawlerURL url:1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse62 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (byte) 100, strMap56, "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:", "CrawlerURL url:AssetResponseCallable url:com.soulgalore.crawler.nrofhttpthreads", (long) (short) -1, "CrawlerURL url:CrawlerURL url:CrawlerURL url:com.soulgalore.crawler.auth", (long) (byte) 0);
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertNull(uRI6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(uRI9);
        org.junit.Assert.assertNull(uRI10);
        org.junit.Assert.assertNull(uRI15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(crawlerConfiguration20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str45, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNull(uRI46);
        org.junit.Assert.assertNotNull(headerUtil48);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap56);
    }

    @Test
    public void test09136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09136");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        int int8 = crawlerConfiguration3.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = crawlerConfiguration3.getRequestHeadersMap();
        boolean boolean10 = crawlerConfiguration3.isVerifyUrls();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test09137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09137");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        long long16 = hTMLPageResponse12.getFetchTime();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder17.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration24 = builder17.build();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = crawlerConfiguration24.getRequestHeadersMap();
        boolean boolean26 = hTMLPageResponse12.equals((java.lang.Object) crawlerConfiguration24);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder27.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder27.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration34 = builder27.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder27.setRequestHeaders("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder36.setNotOnPath("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder38.setVerifyUrls(true);
        boolean boolean41 = hTMLPageResponse12.equals((java.lang.Object) builder40);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder43 = builder40.setRequestHeaders("HTMLPageResponseurl:responseCode:308encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt type:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(crawlerConfiguration24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(crawlerConfiguration34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(builder43);
    }

    @Test
    public void test09138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09138");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder2.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder2.build();
        int int8 = crawlerConfiguration7.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil9 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean10 = crawlerConfiguration7.equals((java.lang.Object) headerUtil9);
        java.util.Map<java.lang.String, java.lang.String> strMap11 = crawlerConfiguration7.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable13 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("35", assetFetcher1, strMap11, "Unknown error");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.assets.AssetResponse assetResponse14 = assetResponseCallable13.call();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(headerUtil9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test09139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09139");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        org.jsoup.nodes.Document document13 = hTMLPageResponse12.getBody();
        java.lang.String str14 = hTMLPageResponse12.getUrl();
        int int15 = hTMLPageResponse12.getResponseCode();
        long long16 = hTMLPageResponse12.getFetchTime();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNull(document13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "com.soulgalore.crawler.auth" + "'", str14, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 97 + "'", int15 == 97);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
    }

    @Test
    public void test09140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09140");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL10 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean11 = crawlerURL10.isWrongSyntax();
        java.lang.String str12 = crawlerURL10.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse20 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL10, (int) 'a', strMap14, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str21 = hTMLPageResponse20.toString();
        int int22 = hTMLPageResponse20.getResponseCode();
        boolean boolean23 = crawlerConfiguration3.equals((java.lang.Object) hTMLPageResponse20);
        int int24 = crawlerConfiguration3.getMaxLevels();
        boolean boolean25 = crawlerConfiguration3.isVerifyUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL28 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "Response timed out");
        com.soulgalore.crawler.util.HeaderUtil headerUtil30 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = headerUtil30.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse38 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL28, (int) '4', strMap32, "com.soulgalore.crawler.http.socket.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 580, "com.soulgalore.crawler.auth", (long) (short) 1);
        java.lang.String str39 = hTMLPageResponse38.getUrl();
        java.lang.String str40 = hTMLPageResponse38.getEncoding();
        boolean boolean41 = crawlerConfiguration3.equals((java.lang.Object) hTMLPageResponse38);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "urls.txt" + "'", str12, "urls.txt");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str21, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 97 + "'", int22 == 97);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(headerUtil30);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "urls.txt" + "'", str39, "urls.txt");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str40, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test09141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09141");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration3.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = crawlerConfiguration3.getRequestHeadersMap();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean12 = crawlerURL11.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration19 = builder14.build();
        java.lang.String str20 = crawlerConfiguration19.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = crawlerConfiguration19.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse27 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL11, (-1), strMap21, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int28 = hTMLPageResponse27.getResponseCode();
        int int29 = hTMLPageResponse27.getResponseCode();
        boolean boolean30 = crawlerConfiguration3.equals((java.lang.Object) hTMLPageResponse27);
        long long31 = hTMLPageResponse27.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL32 = hTMLPageResponse27.getPageUrl();
        java.lang.String str33 = hTMLPageResponse27.getUrl();
        java.lang.String str34 = hTMLPageResponse27.getResponseType();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL35 = hTMLPageResponse27.getPageUrl();
        java.lang.String str36 = hTMLPageResponse27.getResponseType();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(crawlerConfiguration19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 580L + "'", long31 == 580L);
        org.junit.Assert.assertNotNull(crawlerURL32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "com.soulgalore.crawler.auth" + "'", str33, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "com.soulgalore.crawler.auth" + "'", str34, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "com.soulgalore.crawler.auth" + "'", str36, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test09142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09142");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        long long5 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean9 = crawlerURL8.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder11.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration16 = builder11.build();
        java.lang.String str17 = crawlerConfiguration16.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = crawlerConfiguration16.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse24 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, (-1), strMap18, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        boolean boolean25 = assetResponse4.equals((java.lang.Object) strMap18);
        java.lang.String str26 = assetResponse4.getReferer();
        java.lang.String str27 = assetResponse4.getReferer();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL30 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean31 = crawlerURL30.isWrongSyntax();
        java.lang.String str32 = crawlerURL30.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse40 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL30, (int) 'a', strMap34, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder41 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder43 = builder41.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder45 = builder41.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder47 = builder41.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder49 = builder47.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder51 = builder49.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder53 = builder51.setVerifyUrls(false);
        boolean boolean54 = hTMLPageResponse40.equals((java.lang.Object) builder53);
        boolean boolean55 = assetResponse4.equals((java.lang.Object) boolean54);
        java.lang.String str56 = assetResponse4.getReferer();
        java.lang.String str57 = assetResponse4.getUrl();
        long long58 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher60 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher62 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher64 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder65 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder67 = builder65.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder69 = builder65.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration70 = builder65.build();
        java.lang.String str71 = crawlerConfiguration70.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap72 = crawlerConfiguration70.getRequestHeadersMap();
        boolean boolean73 = crawlerConfiguration70.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap74 = crawlerConfiguration70.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable76 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("com.soulgalore.crawler.nrofhttpthreads", assetFetcher64, strMap74, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable78 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("com.soulgalore.crawler.http.connection.timeout", assetFetcher62, strMap74, "Response timed out");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable80 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("CrawlerURL url:result.csv", assetFetcher60, strMap74, "CrawlerURL url:AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        boolean boolean81 = assetResponse4.equals((java.lang.Object) assetFetcher60);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 100L + "'", long5 == 100L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(crawlerConfiguration16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str26, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str27, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "urls.txt" + "'", str32, "urls.txt");
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str56, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "com.soulgalore.crawler.auth" + "'", str57, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 100L + "'", long58 == 100L);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(crawlerConfiguration70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test09143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09143");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        int int5 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str6 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str8 = crawlerConfiguration3.getStartUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test09144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09144");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder4.build();
        java.lang.String str6 = crawlerConfiguration5.getOnlyOnPath();
        boolean boolean7 = crawlerConfiguration5.isVerifyUrls();
        int int8 = crawlerConfiguration5.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = crawlerConfiguration5.getRequestHeadersMap();
        java.lang.String str10 = crawlerConfiguration5.getStartUrl();
        boolean boolean11 = crawlerConfiguration5.isVerifyUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean15 = crawlerURL14.isWrongSyntax();
        java.lang.String str16 = crawlerURL14.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse24 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL14, (int) 'a', strMap18, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str25 = hTMLPageResponse24.getEncoding();
        long long26 = hTMLPageResponse24.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL27 = hTMLPageResponse24.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = hTMLPageResponse24.getResponseHeaders();
        java.lang.String str29 = hTMLPageResponse24.getResponseType();
        java.lang.String str30 = hTMLPageResponse24.getUrl();
        org.jsoup.nodes.Document document31 = hTMLPageResponse24.getBody();
        java.lang.String str32 = hTMLPageResponse24.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = hTMLPageResponse24.getPageUrl();
        boolean boolean34 = crawlerConfiguration5.equals((java.lang.Object) crawlerURL33);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder36.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration39 = builder38.build();
        java.lang.String str40 = crawlerConfiguration39.getOnlyOnPath();
        boolean boolean41 = crawlerConfiguration39.isVerifyUrls();
        int int42 = crawlerConfiguration39.getMaxLevels();
        int int43 = crawlerConfiguration39.getMaxLevels();
        boolean boolean44 = crawlerConfiguration39.isVerifyUrls();
        boolean boolean45 = crawlerConfiguration39.isVerifyUrls();
        java.lang.String str46 = crawlerConfiguration39.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = crawlerConfiguration39.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse53 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL33, 0, strMap47, "CrawlerURL url:CrawlerURL url:errorassets.csv", "AssetResponseCallable url:AssetResponseCallable url:97", (long) (short) 1, "CrawlerURL url:CrawlerURL url:35", (long) (short) 0);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable55 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("HTMLPageResponseurl:result.csvresponseCode:-1encoding:AssetResponseCallable url:Wrong content type type:CrawlerURL url:errorassets.csv", assetFetcher1, strMap47, "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:");
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "urls.txt" + "'", str16, "urls.txt");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str25, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 100L + "'", long26 == 100L);
        org.junit.Assert.assertNotNull(crawlerURL27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "com.soulgalore.crawler.auth" + "'", str30, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str32, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(crawlerConfiguration39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(strMap47);
    }

    @Test
    public void test09145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09145");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        com.soulgalore.crawler.util.StatusCode statusCode6 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN;
        boolean boolean7 = crawlerConfiguration3.equals((java.lang.Object) statusCode6);
        java.lang.Class<?> wildcardClass8 = statusCode6.getClass();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + statusCode6 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN + "'", statusCode6.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test09146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09146");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setOnlyOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder0.setRequestHeaders("AssetResponseCallable url:AssetResponseCallable url:97");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder0.setOnlyOnPath("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder0.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder0.setStartUrl("CrawlerURL url:AssetResponseCallable url:Redirected to new domain");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertNotNull(builder13);
    }

    @Test
    public void test09147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09147");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("hi!", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:308encoding:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:32encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url type:com.soulgalore.crawler.http.connection.timeout");
    }

    @Test
    public void test09148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09148");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet16 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = crawlerResult12.getUrls();
        java.lang.String str18 = crawlerResult12.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet19 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet20 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray25 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL24 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet26 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet26, crawlerURLArray25);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray29 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet30 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet30, hTMLPageResponseArray29);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult32 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet26, hTMLPageResponseSet28, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet30);
        java.lang.String str33 = crawlerResult32.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet34 = crawlerResult32.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet35 = crawlerResult32.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet36 = crawlerResult32.getUrls();
        java.lang.String str37 = crawlerResult32.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet38 = crawlerResult32.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL42 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray43 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL42 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet44 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet44, crawlerURLArray43);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet46 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray47 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet48 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet48, hTMLPageResponseArray47);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult50 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet44, hTMLPageResponseSet46, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet48);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet51 = crawlerResult50.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet52 = crawlerResult50.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet53 = crawlerResult50.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet54 = crawlerResult50.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet55 = crawlerResult50.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet56 = crawlerResult50.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet57 = crawlerResult50.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet58 = crawlerResult50.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet59 = crawlerResult50.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult60 = new com.soulgalore.crawler.core.CrawlerResult("AssetResponseCallable url:AssetResponseCallable url:Unknown error", crawlerURLSet20, hTMLPageResponseSet38, hTMLPageResponseSet59);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet61 = crawlerResult60.getVerifiedURLResponses();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet16);
        org.junit.Assert.assertNotNull(crawlerURLSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet19);
        org.junit.Assert.assertNotNull(crawlerURLSet20);
        org.junit.Assert.assertNotNull(crawlerURLArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet34);
        org.junit.Assert.assertNotNull(crawlerURLSet35);
        org.junit.Assert.assertNotNull(crawlerURLSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet38);
        org.junit.Assert.assertNotNull(crawlerURLArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet51);
        org.junit.Assert.assertNotNull(crawlerURLSet52);
        org.junit.Assert.assertNotNull(crawlerURLSet53);
        org.junit.Assert.assertNotNull(crawlerURLSet54);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet55);
        org.junit.Assert.assertNotNull(crawlerURLSet56);
        org.junit.Assert.assertNotNull(crawlerURLSet57);
        org.junit.Assert.assertNotNull(crawlerURLSet58);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet59);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet61);
    }

    @Test
    public void test09149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09149");
        com.soulgalore.crawler.util.HeaderUtil headerUtil0 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = headerUtil0.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap4 = headerUtil0.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil0.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = headerUtil0.createHeadersFromString("AssetResponseCallable url:CrawlerURL url:AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil0.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(headerUtil0);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test09150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09150");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setMaxLevels((int) '#');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setMaxLevels(1);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test09151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09151");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder0.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setStartUrl("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder8.build();
        java.lang.String str12 = crawlerConfiguration11.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "urls.txt" + "'", str12, "urls.txt");
    }

    @Test
    public void test09152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09152");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet4 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet6 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet8 = authUtil0.createAuthsFromString("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet10 = authUtil0.createAuthsFromString("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"HTMLPageResponseurl\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
        org.junit.Assert.assertNotNull(authSet2);
        org.junit.Assert.assertNotNull(authSet4);
        org.junit.Assert.assertNotNull(authSet6);
        org.junit.Assert.assertNotNull(authSet8);
    }

    @Test
    public void test09153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09153");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        java.lang.String str9 = assetResponse4.getUrl();
        long long10 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setVerifyUrls(false);
        boolean boolean16 = assetResponse4.equals((java.lang.Object) builder13);
        long long17 = assetResponse4.getFetchTime();
        int int18 = assetResponse4.getResponseCode();
        long long19 = assetResponse4.getFetchTime();
        java.lang.String str20 = assetResponse4.getReferer();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL23 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean24 = crawlerURL23.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder26.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder26.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration31 = builder26.build();
        java.lang.String str32 = crawlerConfiguration31.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = crawlerConfiguration31.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse39 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL23, (-1), strMap33, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL43 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI44 = crawlerURL43.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL48 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean49 = crawlerURL48.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder51 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder53 = builder51.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder55 = builder51.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration56 = builder51.build();
        java.lang.String str57 = crawlerConfiguration56.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = crawlerConfiguration56.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse64 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL48, (-1), strMap58, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse70 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL43, 100, strMap58, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse76 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL23, (int) (byte) 10, strMap58, "100", "errorassets.csv", (long) (byte) 100, "", (long) (short) 100);
        java.util.Map<java.lang.String, java.lang.String> strMap77 = hTMLPageResponse76.getResponseHeaders();
        boolean boolean78 = assetResponse4.equals((java.lang.Object) strMap77);
        java.lang.String str79 = assetResponse4.getReferer();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "100" + "'", str20, "100");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(crawlerConfiguration31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(uRI44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(crawlerConfiguration56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "100" + "'", str79, "100");
    }

    @Test
    public void test09154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09154");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult12.getUrls();
        java.lang.String str16 = crawlerResult12.getTheStartPoint();
        java.lang.String str17 = crawlerResult12.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet18 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray23 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL22 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, crawlerURLArray23);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray27 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28, hTMLPageResponseArray27);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult30 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, hTMLPageResponseSet26, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet31 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet32 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet33 = crawlerResult30.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet34 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet35 = crawlerResult30.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray40 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL39 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, crawlerURLArray40);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray44 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet45 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45, hTMLPageResponseArray44);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult47 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, hTMLPageResponseSet43, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45);
        java.lang.String str48 = crawlerResult47.getTheStartPoint();
        java.lang.String str49 = crawlerResult47.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet50 = crawlerResult47.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet51 = crawlerResult47.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet52 = crawlerResult47.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult53 = new com.soulgalore.crawler.core.CrawlerResult("CrawlerURL url:urls.txt", crawlerURLSet18, hTMLPageResponseSet35, hTMLPageResponseSet52);
        java.lang.String str54 = crawlerResult53.getTheStartPoint();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet18);
        org.junit.Assert.assertNotNull(crawlerURLArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet31);
        org.junit.Assert.assertNotNull(crawlerURLSet32);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet33);
        org.junit.Assert.assertNotNull(crawlerURLSet34);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet35);
        org.junit.Assert.assertNotNull(crawlerURLArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet50);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet51);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "CrawlerURL url:urls.txt" + "'", str54, "CrawlerURL url:urls.txt");
    }

    @Test
    public void test09155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09155");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        org.jsoup.nodes.Document document13 = hTMLPageResponse12.getBody();
        org.jsoup.nodes.Document document14 = hTMLPageResponse12.getBody();
        com.soulgalore.crawler.util.StatusCode statusCode15 = com.soulgalore.crawler.util.StatusCode.SC_MALFORMED_URI;
        boolean boolean16 = hTMLPageResponse12.equals((java.lang.Object) statusCode15);
        int int17 = statusCode15.getCode();
        java.lang.String str18 = statusCode15.getFriendlyName();
        int int19 = statusCode15.getCode();
        int int20 = statusCode15.getCode();
        int int21 = statusCode15.getCode();
        java.lang.String str22 = statusCode15.getFriendlyName();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNull(document13);
        org.junit.Assert.assertNull(document14);
        org.junit.Assert.assertTrue("'" + statusCode15 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_MALFORMED_URI + "'", statusCode15.equals(com.soulgalore.crawler.util.StatusCode.SC_MALFORMED_URI));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 582 + "'", int17 == 582);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Malformed url" + "'", str18, "Malformed url");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 582 + "'", int19 == 582);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 582 + "'", int20 == 582);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 582 + "'", int21 == 582);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Malformed url" + "'", str22, "Malformed url");
    }

    @Test
    public void test09156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09156");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable4 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:errorassets.csv", assetFetcher1, strMap2, "AssetResponseCallable url:100");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.assets.AssetResponse assetResponse5 = assetResponseCallable4.call();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09157");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        java.lang.String str20 = hTMLPageResponse18.getHeaderValue("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = hTMLPageResponse18.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = hTMLPageResponse18.getPageUrl();
        java.lang.String str23 = hTMLPageResponse18.getEncoding();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder24.setNotOnPath("52");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder26.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder26.setOnlyOnPath("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder26.setNotOnPath("100");
        boolean boolean33 = hTMLPageResponse18.equals((java.lang.Object) builder32);
        java.lang.String str34 = hTMLPageResponse18.getEncoding();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(crawlerURL21);
        org.junit.Assert.assertNotNull(crawlerURL22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "errorurls.txt" + "'", str23, "errorurls.txt");
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "errorurls.txt" + "'", str34, "errorurls.txt");
    }

    @Test
    public void test09158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09158");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.util.Map<java.lang.String, java.lang.String> strMap30 = hTMLPageResponse29.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean34 = crawlerURL33.isWrongSyntax();
        java.lang.String str35 = crawlerURL33.getReferer();
        java.lang.String str36 = crawlerURL33.getHost();
        java.lang.String str37 = crawlerURL33.getUrl();
        boolean boolean38 = hTMLPageResponse29.equals((java.lang.Object) crawlerURL33);
        java.lang.String str39 = hTMLPageResponse29.getUrl();
        java.lang.String str40 = hTMLPageResponse29.getUrl();
        org.jsoup.nodes.Document document41 = hTMLPageResponse29.getBody();
        java.lang.String str42 = hTMLPageResponse29.getEncoding();
        java.lang.String str43 = hTMLPageResponse29.getResponseType();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = hTMLPageResponse29.getResponseHeaders();
        java.lang.String str45 = hTMLPageResponse29.getUrl();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "urls.txt" + "'", str35, "urls.txt");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "com.soulgalore.crawler.auth" + "'", str37, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "com.soulgalore.crawler.auth" + "'", str39, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "com.soulgalore.crawler.auth" + "'", str40, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Malformed url" + "'", str42, "Malformed url");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "-1" + "'", str43, "-1");
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "com.soulgalore.crawler.auth" + "'", str45, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test09159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09159");
        com.soulgalore.crawler.util.StatusCode statusCode0 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT;
        int int1 = statusCode0.getCode();
        int int2 = statusCode0.getCode();
        int int3 = statusCode0.getCode();
        int int4 = statusCode0.getCode();
        int int5 = statusCode0.getCode();
        java.lang.String str6 = statusCode0.getFriendlyName();
        int int7 = statusCode0.getCode();
        int int8 = statusCode0.getCode();
        int int9 = statusCode0.getCode();
        org.junit.Assert.assertTrue("'" + statusCode0 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT + "'", statusCode0.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 580 + "'", int1 == 580);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 580 + "'", int2 == 580);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 580 + "'", int3 == 580);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 580 + "'", int4 == 580);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 580 + "'", int5 == 580);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Response timed out" + "'", str6, "Response timed out");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 580 + "'", int7 == 580);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 580 + "'", int8 == 580);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 580 + "'", int9 == 580);
    }

    @Test
    public void test09160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09160");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean6 = crawlerURL5.isWrongSyntax();
        java.lang.String str7 = crawlerURL5.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse15 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) 'a', strMap9, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str16 = hTMLPageResponse15.getUrl();
        boolean boolean17 = crawlerURL1.equals((java.lang.Object) str16);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher20 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil21 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = headerUtil21.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable25 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher20, strMap23, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse31 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) 100, strMap23, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        org.jsoup.nodes.Document document32 = hTMLPageResponse31.getBody();
        java.lang.String str34 = hTMLPageResponse31.getHeaderValue("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        int int35 = hTMLPageResponse31.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = hTMLPageResponse31.getResponseHeaders();
        java.lang.String str37 = hTMLPageResponse31.getUrl();
        java.lang.String str38 = hTMLPageResponse31.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = hTMLPageResponse31.getResponseHeaders();
        java.lang.String str40 = hTMLPageResponse31.getEncoding();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "urls.txt" + "'", str7, "urls.txt");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(headerUtil21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(document32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str37, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Unknown error" + "'", str38, "Unknown error");
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Unknown error" + "'", str40, "Unknown error");
    }

    @Test
    public void test09161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09161");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean6 = crawlerURL5.isWrongSyntax();
        java.lang.String str7 = crawlerURL5.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse15 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) 'a', strMap9, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str16 = hTMLPageResponse15.getUrl();
        boolean boolean17 = crawlerURL1.equals((java.lang.Object) str16);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher20 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil21 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = headerUtil21.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable25 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher20, strMap23, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse31 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) 100, strMap23, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        org.jsoup.nodes.Document document32 = hTMLPageResponse31.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = hTMLPageResponse31.getPageUrl();
        java.lang.String str35 = hTMLPageResponse31.getHeaderValue("errorassets.csv");
        java.lang.String str36 = hTMLPageResponse31.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = builder37.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration40 = builder39.build();
        java.lang.String str41 = crawlerConfiguration40.getStartUrl();
        int int42 = crawlerConfiguration40.getMaxLevels();
        int int43 = crawlerConfiguration40.getMaxLevels();
        java.lang.String str44 = crawlerConfiguration40.getStartUrl();
        java.lang.String str45 = crawlerConfiguration40.getOnlyOnPath();
        java.lang.String str46 = crawlerConfiguration40.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = crawlerConfiguration40.getRequestHeadersMap();
        boolean boolean48 = hTMLPageResponse31.equals((java.lang.Object) strMap47);
        int int49 = hTMLPageResponse31.getResponseCode();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "urls.txt" + "'", str7, "urls.txt");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(headerUtil21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(document32);
        org.junit.Assert.assertNotNull(crawlerURL33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt" + "'", str36, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt");
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(crawlerConfiguration40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
    }

    @Test
    public void test09162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09162");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:urls.txt type:", "HTMLPageResponseurl:hi!responseCode:52encoding:urls.txt type:CrawlerURL url:com.soulgalore.crawler.auth", 1, (long) (-1));
    }

    @Test
    public void test09163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09163");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int13 = hTMLPageResponse12.getResponseCode();
        int int14 = hTMLPageResponse12.getResponseCode();
        java.lang.String str15 = hTMLPageResponse12.getUrl();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean20 = crawlerURL19.isWrongSyntax();
        java.lang.String str21 = crawlerURL19.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL19, (int) 'a', strMap23, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str30 = hTMLPageResponse29.getEncoding();
        java.lang.String str31 = hTMLPageResponse29.getResponseType();
        java.lang.String str32 = hTMLPageResponse29.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = hTMLPageResponse29.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL37 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "com.soulgalore.crawler.auth");
        java.lang.String str38 = crawlerURL37.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder40.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration43 = builder42.build();
        java.lang.String str44 = crawlerConfiguration43.getOnlyOnPath();
        boolean boolean45 = crawlerConfiguration43.isVerifyUrls();
        int int46 = crawlerConfiguration43.getMaxLevels();
        int int47 = crawlerConfiguration43.getMaxLevels();
        boolean boolean48 = crawlerConfiguration43.isVerifyUrls();
        boolean boolean49 = crawlerConfiguration43.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = crawlerConfiguration43.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse56 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL37, 100, strMap50, "Unknown error", "com.soulgalore.crawler.http.socket.timeout", (long) 10, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", 0L);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse62 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL33, (int) '4', strMap50, "97", "100", (long) (byte) 1, "com.soulgalore.crawler.http.socket.timeout", (long) (byte) -1);
        boolean boolean63 = hTMLPageResponse12.equals((java.lang.Object) "100");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL65 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI66 = crawlerURL65.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL69 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean70 = crawlerURL69.isWrongSyntax();
        java.lang.String str71 = crawlerURL69.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap73 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse79 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL69, (int) 'a', strMap73, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str80 = hTMLPageResponse79.getUrl();
        boolean boolean81 = crawlerURL65.equals((java.lang.Object) str80);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher84 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil85 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap87 = headerUtil85.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable89 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher84, strMap87, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse95 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL65, (int) (short) 100, strMap87, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        long long96 = hTMLPageResponse95.getFetchTime();
        org.jsoup.nodes.Document document97 = hTMLPageResponse95.getBody();
        boolean boolean98 = hTMLPageResponse12.equals((java.lang.Object) document97);
        java.lang.String str99 = hTMLPageResponse12.getEncoding();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 97 + "'", int14 == 97);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.auth" + "'", str15, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "urls.txt" + "'", str21, "urls.txt");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str30, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "com.soulgalore.crawler.auth" + "'", str32, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL33);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "CrawlerURL url:urls.txt" + "'", str38, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(crawlerConfiguration43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(uRI66);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "urls.txt" + "'", str71, "urls.txt");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "com.soulgalore.crawler.auth" + "'", str80, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(headerUtil85);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertTrue("'" + long96 + "' != '" + 100L + "'", long96 == 100L);
        org.junit.Assert.assertNull(document97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str99, "com.soulgalore.crawler.http.socket.timeout");
    }

    @Test
    public void test09164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09164");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("CrawlerURL url:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout", "", 97, 10L);
        java.lang.String str5 = assetResponse4.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setOnlyOnPath("-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setStartUrl("Redirected to new domain");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setVerifyUrls(true);
        boolean boolean19 = assetResponse4.equals((java.lang.Object) builder16);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CrawlerURL url:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout" + "'", str5, "CrawlerURL url:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test09165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09165");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("CrawlerURL url:35", "CrawlerURL url:AssetResponseCallable url:1", 0, (long) 581);
        int int5 = assetResponse4.getResponseCode();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test09166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09166");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        int int5 = crawlerConfiguration3.getMaxLevels();
        int int6 = crawlerConfiguration3.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration3.getRequestHeadersMap();
        int int8 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str9 = crawlerConfiguration3.getStartUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test09167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09167");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean6 = crawlerURL5.isWrongSyntax();
        java.lang.String str7 = crawlerURL5.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse15 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) 'a', strMap9, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str16 = hTMLPageResponse15.getUrl();
        boolean boolean17 = crawlerURL1.equals((java.lang.Object) str16);
        java.net.URI uRI18 = crawlerURL1.getUri();
        java.lang.String str19 = crawlerURL1.getUrl();
        java.lang.String str20 = crawlerURL1.getHost();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "urls.txt" + "'", str7, "urls.txt");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(uRI18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str19, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test09168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09168");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("AssetResponseCallable url:1");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:AssetResponseCallable url:1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
    }

    @Test
    public void test09169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09169");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet4 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet6 = authUtil0.createAuthsFromString("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet8 = authUtil0.createAuthsFromString("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"HTMLPageResponseurl\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
        org.junit.Assert.assertNotNull(authSet2);
        org.junit.Assert.assertNotNull(authSet4);
        org.junit.Assert.assertNotNull(authSet6);
    }

    @Test
    public void test09170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09170");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        java.lang.String str20 = hTMLPageResponse18.getHeaderValue("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = hTMLPageResponse18.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = hTMLPageResponse18.getPageUrl();
        java.lang.String str23 = hTMLPageResponse18.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL26 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean27 = crawlerURL26.isWrongSyntax();
        java.lang.String str28 = crawlerURL26.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse36 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL26, (int) 'a', strMap30, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str37 = hTMLPageResponse36.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean39 = hTMLPageResponse36.equals((java.lang.Object) builder38);
        long long40 = hTMLPageResponse36.getFetchTime();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder41 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder43 = builder41.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder45 = builder41.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder47 = builder41.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration48 = builder41.build();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = crawlerConfiguration48.getRequestHeadersMap();
        boolean boolean50 = hTMLPageResponse36.equals((java.lang.Object) crawlerConfiguration48);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = crawlerConfiguration48.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap52 = crawlerConfiguration48.getRequestHeadersMap();
        boolean boolean53 = hTMLPageResponse18.equals((java.lang.Object) crawlerConfiguration48);
        int int54 = hTMLPageResponse18.getResponseCode();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(crawlerURL21);
        org.junit.Assert.assertNotNull(crawlerURL22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "errorurls.txt" + "'", str23, "errorurls.txt");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "urls.txt" + "'", str28, "urls.txt");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "com.soulgalore.crawler.auth" + "'", str37, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 100L + "'", long40 == 100L);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(crawlerConfiguration48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
    }

    @Test
    public void test09171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09171");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url", "", (int) (short) -1, 0L);
        int int5 = assetResponse4.getResponseCode();
        java.lang.String str6 = assetResponse4.getUrl();
        long long7 = assetResponse4.getFetchTime();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url" + "'", str6, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    }

    @Test
    public void test09172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09172");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        long long6 = assetResponse4.getFetchTime();
        java.lang.String str7 = assetResponse4.getUrl();
        long long8 = assetResponse4.getFetchTime();
        java.lang.String str9 = assetResponse4.getReferer();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "100" + "'", str9, "100");
    }

    @Test
    public void test09173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09173");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.lang.String str2 = crawlerURL1.getHost();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean6 = crawlerURL5.isWrongSyntax();
        java.lang.String str7 = crawlerURL5.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse15 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) 'a', strMap9, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str16 = hTMLPageResponse15.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean18 = hTMLPageResponse15.equals((java.lang.Object) builder17);
        long long19 = hTMLPageResponse15.getFetchTime();
        java.lang.String str20 = hTMLPageResponse15.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = hTMLPageResponse15.getPageUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder22.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder22.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder28.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder30.setVerifyUrls(false);
        boolean boolean33 = crawlerURL21.equals((java.lang.Object) builder32);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration34 = builder32.build();
        java.lang.String str35 = crawlerConfiguration34.getStartUrl();
        java.lang.String str36 = crawlerConfiguration34.getOnlyOnPath();
        boolean boolean37 = crawlerURL1.equals((java.lang.Object) str36);
        java.lang.String str38 = crawlerURL1.toString();
        java.net.URI uRI39 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL41 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI42 = crawlerURL41.getUri();
        java.lang.String str43 = crawlerURL41.getUrl();
        java.lang.String str44 = crawlerURL41.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder45 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder47 = builder45.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder49 = builder45.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder51 = builder45.setNotOnPath("AssetResponseCallable url:errorassets.csv");
        boolean boolean52 = crawlerURL41.equals((java.lang.Object) builder51);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder54 = builder51.setMaxLevels(52);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder56 = builder51.setVerifyUrls(false);
        boolean boolean57 = crawlerURL1.equals((java.lang.Object) false);
        java.lang.String str58 = crawlerURL1.toString();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "urls.txt" + "'", str7, "urls.txt");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 100L + "'", long19 == 100L);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str20, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(crawlerConfiguration34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str38, "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        org.junit.Assert.assertNull(uRI39);
        org.junit.Assert.assertNull(uRI42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str43, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str44, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str58, "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
    }

    @Test
    public void test09174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09174");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int19 = hTMLPageResponse18.getResponseCode();
        int int20 = hTMLPageResponse18.getResponseCode();
        java.lang.String str21 = hTMLPageResponse18.toString();
        org.jsoup.nodes.Document document22 = hTMLPageResponse18.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL25 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI26 = crawlerURL25.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder28.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration31 = builder30.build();
        java.lang.String str32 = crawlerConfiguration31.getStartUrl();
        int int33 = crawlerConfiguration31.getMaxLevels();
        int int34 = crawlerConfiguration31.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = crawlerConfiguration31.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse41 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL25, (int) (short) 10, strMap35, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int42 = hTMLPageResponse41.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = hTMLPageResponse41.getResponseHeaders();
        java.lang.String str45 = hTMLPageResponse41.getHeaderValue("");
        java.util.Map<java.lang.String, java.lang.String> strMap46 = hTMLPageResponse41.getResponseHeaders();
        java.lang.String str47 = hTMLPageResponse41.getEncoding();
        java.lang.String str49 = hTMLPageResponse41.getHeaderValue("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder50 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder52 = builder50.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration53 = builder52.build();
        java.lang.String str54 = crawlerConfiguration53.getStartUrl();
        int int55 = crawlerConfiguration53.getMaxLevels();
        java.lang.String str56 = crawlerConfiguration53.getOnlyOnPath();
        java.lang.String str57 = crawlerConfiguration53.getOnlyOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder58 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder60 = builder58.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration61 = builder60.build();
        java.lang.String str62 = crawlerConfiguration61.getStartUrl();
        boolean boolean64 = crawlerConfiguration61.equals((java.lang.Object) true);
        java.lang.String str65 = crawlerConfiguration61.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL68 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean69 = crawlerURL68.isWrongSyntax();
        java.lang.String str70 = crawlerURL68.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap72 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse78 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL68, (int) 'a', strMap72, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str79 = hTMLPageResponse78.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL80 = hTMLPageResponse78.getPageUrl();
        boolean boolean81 = crawlerConfiguration61.equals((java.lang.Object) crawlerURL80);
        java.lang.String str82 = crawlerConfiguration61.getOnlyOnPath();
        boolean boolean83 = crawlerConfiguration53.equals((java.lang.Object) crawlerConfiguration61);
        boolean boolean84 = hTMLPageResponse41.equals((java.lang.Object) crawlerConfiguration61);
        java.lang.String str85 = crawlerConfiguration61.getStartUrl();
        int int86 = crawlerConfiguration61.getMaxLevels();
        java.lang.String str87 = crawlerConfiguration61.getOnlyOnPath();
        boolean boolean88 = hTMLPageResponse18.equals((java.lang.Object) str87);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth" + "'", str21, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document22);
        org.junit.Assert.assertNull(uRI26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(crawlerConfiguration31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str47, "com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(crawlerConfiguration53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(crawlerConfiguration61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "urls.txt" + "'", str70, "urls.txt");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str79, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test09175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09175");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:HTMLPageResponseurl:hi!responseCode:-1encoding:errorurls.txt type:result.csv", "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", 100, (long) 97);
    }

    @Test
    public void test09176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09176");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean4 = crawlerURL3.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI12 = crawlerURL11.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray13 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3, crawlerURL7, crawlerURL11 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet14, crawlerURLArray13);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray16 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet17, hTMLPageResponseArray16);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray23 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL22 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, crawlerURLArray23);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray27 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28, hTMLPageResponseArray27);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult30 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, hTMLPageResponseSet26, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult31 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet14, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet17, hTMLPageResponseSet26);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet32 = crawlerResult31.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet33 = crawlerResult31.getUrls();
        java.lang.String str34 = crawlerResult31.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet35 = crawlerResult31.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet36 = crawlerResult31.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet37 = crawlerResult31.getVerifiedURLResponses();
        java.lang.String str38 = crawlerResult31.getTheStartPoint();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet39 = crawlerResult31.getNonWorkingUrls();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(uRI12);
        org.junit.Assert.assertNotNull(crawlerURLArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet32);
        org.junit.Assert.assertNotNull(crawlerURLSet33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "com.soulgalore.crawler.auth" + "'", str34, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURLSet35);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet36);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "com.soulgalore.crawler.auth" + "'", str38, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test09177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09177");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        java.lang.String str2 = crawlerURL1.getUrl();
        boolean boolean3 = crawlerURL1.isWrongSyntax();
        com.soulgalore.crawler.util.HeaderUtil headerUtil5 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = headerUtil5.createHeadersFromString("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse13 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) 10, strMap7, "urls.txt", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (byte) 10, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", (-1L));
        java.lang.String str15 = hTMLPageResponse13.getHeaderValue("CrawlerURL url:1");
        long long16 = hTMLPageResponse13.getFetchTime();
        org.jsoup.nodes.Document document17 = hTMLPageResponse13.getBody();
        java.lang.String str18 = hTMLPageResponse13.getResponseType();
        org.jsoup.nodes.Document document19 = hTMLPageResponse13.getBody();
        org.jsoup.nodes.Document document20 = hTMLPageResponse13.getBody();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(headerUtil5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNull(document17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url" + "'", str18, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertNull(document19);
        org.junit.Assert.assertNull(document20);
    }

    @Test
    public void test09178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09178");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "CrawlerURL url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (int) (short) -1, 100L);
    }

    @Test
    public void test09179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09179");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean9 = crawlerURL8.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder11.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration16 = builder11.build();
        java.lang.String str17 = crawlerConfiguration16.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = crawlerConfiguration16.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse24 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, (-1), strMap18, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int25 = hTMLPageResponse24.getResponseCode();
        long long26 = hTMLPageResponse24.getFetchTime();
        long long27 = hTMLPageResponse24.getFetchTime();
        boolean boolean28 = crawlerConfiguration3.equals((java.lang.Object) hTMLPageResponse24);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = hTMLPageResponse24.getPageUrl();
        java.lang.String str30 = crawlerURL29.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration35 = builder34.build();
        java.lang.String str36 = crawlerConfiguration35.getOnlyOnPath();
        boolean boolean37 = crawlerConfiguration35.isVerifyUrls();
        int int38 = crawlerConfiguration35.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = crawlerConfiguration35.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, 583, strMap39, "AssetResponseCallable url:AssetResponseCallable url:Unknown error", "CrawlerURL url:CrawlerURL url:CrawlerURL url:errorassets.csv", (long) (short) 10, "AssetResponseCallable url:100", 580L);
        java.lang.String str46 = crawlerURL29.getReferer();
        java.lang.String str47 = crawlerURL29.getHost();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(crawlerConfiguration16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 580L + "'", long26 == 580L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 580L + "'", long27 == 580L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(crawlerURL29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "com.soulgalore.crawler.auth" + "'", str30, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(crawlerConfiguration35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "urls.txt" + "'", str46, "urls.txt");
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test09180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09180");
        com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider(100, (int) '4', (int) 'a', "", "CrawlerURL url:com.soulgalore.crawler.auth");
        org.apache.http.client.HttpClient httpClient6 = httpClientProvider5.get();
        org.apache.http.client.HttpClient httpClient7 = httpClientProvider5.get();
        org.apache.http.client.HttpClient httpClient8 = httpClientProvider5.get();
        org.apache.http.client.HttpClient httpClient9 = httpClientProvider5.get();
        org.apache.http.client.HttpClient httpClient10 = httpClientProvider5.get();
        org.apache.http.client.HttpClient httpClient11 = httpClientProvider5.get();
        org.apache.http.client.HttpClient httpClient12 = httpClientProvider5.get();
        org.apache.http.client.HttpClient httpClient13 = httpClientProvider5.get();
        org.apache.http.client.HttpClient httpClient14 = httpClientProvider5.get();
        org.apache.http.client.HttpClient httpClient15 = httpClientProvider5.get();
        org.apache.http.client.HttpClient httpClient16 = httpClientProvider5.get();
        org.apache.http.client.HttpClient httpClient17 = httpClientProvider5.get();
        org.junit.Assert.assertNotNull(httpClient6);
        org.junit.Assert.assertNotNull(httpClient7);
        org.junit.Assert.assertNotNull(httpClient8);
        org.junit.Assert.assertNotNull(httpClient9);
        org.junit.Assert.assertNotNull(httpClient10);
        org.junit.Assert.assertNotNull(httpClient11);
        org.junit.Assert.assertNotNull(httpClient12);
        org.junit.Assert.assertNotNull(httpClient13);
        org.junit.Assert.assertNotNull(httpClient14);
        org.junit.Assert.assertNotNull(httpClient15);
        org.junit.Assert.assertNotNull(httpClient16);
        org.junit.Assert.assertNotNull(httpClient17);
    }

    @Test
    public void test09181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09181");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setStartUrl("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder0.setNotOnPath("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder0.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder0.setStartUrl("HTMLPageResponseurl:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1responseCode:10encoding:result.csv type:97");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setRequestHeaders("HTMLPageResponseurl:Wrong content typeresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads type:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test09182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09182");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = hTMLPageResponse12.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        org.jsoup.nodes.Document document17 = hTMLPageResponse12.getBody();
        java.lang.String str18 = hTMLPageResponse12.getResponseType();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = hTMLPageResponse12.getResponseHeaders();
        long long20 = hTMLPageResponse12.getFetchTime();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration24 = builder23.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder23.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration27 = builder26.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder26.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder26.setVerifyUrls(false);
        boolean boolean32 = hTMLPageResponse12.equals((java.lang.Object) builder31);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder31.setStartUrl("CrawlerURL url:CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertNull(document17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 100L + "'", long20 == 100L);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(crawlerConfiguration24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(crawlerConfiguration27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(builder34);
    }

    @Test
    public void test09183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09183");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        boolean boolean3 = crawlerURL1.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean7 = crawlerURL6.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder9.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration14 = builder9.build();
        java.lang.String str15 = crawlerConfiguration14.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = crawlerConfiguration14.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse22 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL6, (-1), strMap16, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int23 = hTMLPageResponse22.getResponseCode();
        long long24 = hTMLPageResponse22.getFetchTime();
        long long25 = hTMLPageResponse22.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL28 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI29 = crawlerURL28.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean34 = crawlerURL33.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder36.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder36.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration41 = builder36.build();
        java.lang.String str42 = crawlerConfiguration41.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = crawlerConfiguration41.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse49 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL33, (-1), strMap43, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse55 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL28, 100, strMap43, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        boolean boolean56 = hTMLPageResponse22.equals((java.lang.Object) 100);
        org.jsoup.nodes.Document document57 = hTMLPageResponse22.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL60 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "com.soulgalore.crawler.auth");
        java.lang.String str61 = crawlerURL60.toString();
        boolean boolean62 = hTMLPageResponse22.equals((java.lang.Object) str61);
        boolean boolean63 = crawlerURL1.equals((java.lang.Object) hTMLPageResponse22);
        long long64 = hTMLPageResponse22.getFetchTime();
        java.util.Map<java.lang.String, java.lang.String> strMap65 = hTMLPageResponse22.getResponseHeaders();
        java.lang.String str67 = hTMLPageResponse22.getHeaderValue("AssetResponseCallable url:urls.txt");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL68 = hTMLPageResponse22.getPageUrl();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse73 = new com.soulgalore.crawler.core.assets.AssetResponse("Redirected to new domain", "CrawlerURL url:10", 0, 32L);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL75 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        java.lang.String str76 = crawlerURL75.getUrl();
        boolean boolean77 = crawlerURL75.isWrongSyntax();
        com.soulgalore.crawler.util.HeaderUtil headerUtil79 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = headerUtil79.createHeadersFromString("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse87 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL75, (int) (short) 10, strMap81, "urls.txt", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (byte) 10, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", (-1L));
        java.lang.String str89 = hTMLPageResponse87.getHeaderValue("CrawlerURL url:1");
        long long90 = hTMLPageResponse87.getFetchTime();
        java.lang.String str91 = hTMLPageResponse87.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL92 = hTMLPageResponse87.getPageUrl();
        boolean boolean93 = assetResponse73.equals((java.lang.Object) crawlerURL92);
        boolean boolean94 = crawlerURL68.equals((java.lang.Object) boolean93);
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(crawlerConfiguration14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 580L + "'", long24 == 580L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 580L + "'", long25 == 580L);
        org.junit.Assert.assertNull(uRI29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(crawlerConfiguration41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(document57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "CrawlerURL url:urls.txt" + "'", str61, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 580L + "'", long64 == 580L);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(crawlerURL68);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(headerUtil79);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + (-1L) + "'", long90 == (-1L));
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!" + "'", str91, "hi!");
        org.junit.Assert.assertNotNull(crawlerURL92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test09184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09184");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder4.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration6 = builder4.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setRequestHeaders("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setRequestHeaders("AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setOnlyOnPath("AssetResponseCallable url:CrawlerURL url:10");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertNotNull(crawlerConfiguration6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test09185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09185");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "Wrong content type", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        long long6 = assetResponse4.getFetchTime();
        long long7 = assetResponse4.getFetchTime();
        java.lang.String str8 = assetResponse4.getUrl();
        java.lang.String str9 = assetResponse4.getUrl();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test09186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09186");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        java.lang.String str2 = crawlerURL1.getUrl();
        boolean boolean3 = crawlerURL1.isWrongSyntax();
        com.soulgalore.crawler.util.HeaderUtil headerUtil5 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = headerUtil5.createHeadersFromString("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse13 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) 10, strMap7, "urls.txt", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (byte) 10, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", (-1L));
        java.lang.String str15 = hTMLPageResponse13.getHeaderValue("CrawlerURL url:1");
        long long16 = hTMLPageResponse13.getFetchTime();
        java.lang.String str17 = hTMLPageResponse13.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse13.getPageUrl();
        java.lang.String str19 = hTMLPageResponse13.getResponseType();
        java.lang.String str20 = hTMLPageResponse13.toString();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = hTMLPageResponse13.getResponseHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = hTMLPageResponse13.getResponseHeaders();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(headerUtil5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url" + "'", str19, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "HTMLPageResponseurl:hi!responseCode:10encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url" + "'", str20, "HTMLPageResponseurl:hi!responseCode:10encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
    }

    @Test
    public void test09187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09187");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int19 = hTMLPageResponse18.getResponseCode();
        long long20 = hTMLPageResponse18.getFetchTime();
        long long21 = hTMLPageResponse18.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI25 = crawlerURL24.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean30 = crawlerURL29.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder32.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration37 = builder32.build();
        java.lang.String str38 = crawlerConfiguration37.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = crawlerConfiguration37.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, (-1), strMap39, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse51 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL24, 100, strMap39, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        boolean boolean52 = hTMLPageResponse18.equals((java.lang.Object) 100);
        int int53 = hTMLPageResponse18.getResponseCode();
        java.lang.String str54 = hTMLPageResponse18.getUrl();
        java.lang.String str55 = hTMLPageResponse18.getEncoding();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 580L + "'", long20 == 580L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 580L + "'", long21 == 580L);
        org.junit.Assert.assertNull(uRI25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(crawlerConfiguration37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "com.soulgalore.crawler.auth" + "'", str54, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "errorurls.txt" + "'", str55, "errorurls.txt");
    }

    @Test
    public void test09188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09188");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("errorassets.csv", "AssetResponseCallable url:result.csv");
        java.lang.String str3 = crawlerURL2.getReferer();
        java.lang.String str4 = crawlerURL2.getReferer();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AssetResponseCallable url:result.csv" + "'", str3, "AssetResponseCallable url:result.csv");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "AssetResponseCallable url:result.csv" + "'", str4, "AssetResponseCallable url:result.csv");
    }

    @Test
    public void test09189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09189");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        java.lang.String str3 = crawlerURL1.getUrl();
        java.lang.String str4 = crawlerURL1.getHost();
        boolean boolean5 = crawlerURL1.isWrongSyntax();
        java.lang.String str6 = crawlerURL1.getHost();
        java.net.URI uRI7 = crawlerURL1.getUri();
        java.net.URI uRI8 = crawlerURL1.getUri();
        java.lang.String str9 = crawlerURL1.getUrl();
        boolean boolean10 = crawlerURL1.isWrongSyntax();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray11 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, assetResponseArray11);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray14 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet15 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15, assetResponseArray14);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult17 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = assetsVerificationResult17.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet19 = assetsVerificationResult17.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = assetsVerificationResult17.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet21 = null;
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray22 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet23 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23, assetResponseArray22);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray25 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet26, assetResponseArray25);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult28 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet26);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = assetsVerificationResult28.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray30 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet31 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet31, assetResponseArray30);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray33 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet34 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet34, assetResponseArray33);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult36 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet31, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet34);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult37 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet29, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet34);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult38 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet21, assetResponseSet29);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult39 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet20, assetResponseSet29);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = null;
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult41 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet29, assetResponseSet40);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray42 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet43 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet43, assetResponseArray42);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray45 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet46 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet46, assetResponseArray45);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult48 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet43, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet46);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet49 = assetsVerificationResult48.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet50 = assetsVerificationResult48.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet51 = assetsVerificationResult48.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult52 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet40, assetResponseSet51);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet53 = assetsVerificationResult52.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray54 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet55 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet55, assetResponseArray54);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray57 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet58 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet58, assetResponseArray57);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult60 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet55, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet58);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray61 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet62 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet62, assetResponseArray61);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray64 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet65 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet65, assetResponseArray64);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult67 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet62, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet65);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet68 = assetsVerificationResult67.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult69 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet58, assetResponseSet68);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult70 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet53, assetResponseSet68);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet71 = null;
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray72 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet73 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet73, assetResponseArray72);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray75 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet76 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet76, assetResponseArray75);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult78 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet73, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet76);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet79 = assetsVerificationResult78.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray80 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet81 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet81, assetResponseArray80);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray83 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet84 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet84, assetResponseArray83);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult86 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet81, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet84);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult87 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet79, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet84);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult88 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet71, assetResponseSet79);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult89 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet68, assetResponseSet71);
        boolean boolean90 = crawlerURL1.equals((java.lang.Object) assetResponseSet71);
        java.net.URI uRI91 = crawlerURL1.getUri();
        java.lang.String str92 = crawlerURL1.getReferer();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str3, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(uRI7);
        org.junit.Assert.assertNull(uRI8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str9, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(assetResponseArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(assetResponseArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(assetResponseSet18);
        org.junit.Assert.assertNotNull(assetResponseSet19);
        org.junit.Assert.assertNotNull(assetResponseSet20);
        org.junit.Assert.assertNotNull(assetResponseArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(assetResponseArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(assetResponseSet29);
        org.junit.Assert.assertNotNull(assetResponseArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(assetResponseArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(assetResponseArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(assetResponseArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(assetResponseSet49);
        org.junit.Assert.assertNotNull(assetResponseSet50);
        org.junit.Assert.assertNotNull(assetResponseSet51);
        org.junit.Assert.assertNotNull(assetResponseSet53);
        org.junit.Assert.assertNotNull(assetResponseArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(assetResponseArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(assetResponseArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(assetResponseArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(assetResponseSet68);
        org.junit.Assert.assertNotNull(assetResponseArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(assetResponseArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(assetResponseSet79);
        org.junit.Assert.assertNotNull(assetResponseArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(assetResponseArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(uRI91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
    }

    @Test
    public void test09190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09190");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        java.lang.String str3 = crawlerURL1.getUrl();
        java.lang.String str4 = crawlerURL1.getHost();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI9 = crawlerURL8.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration14 = builder13.build();
        java.lang.String str15 = crawlerConfiguration14.getStartUrl();
        int int16 = crawlerConfiguration14.getMaxLevels();
        int int17 = crawlerConfiguration14.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = crawlerConfiguration14.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse24 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, (int) (short) 10, strMap18, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int25 = hTMLPageResponse24.getResponseCode();
        java.lang.String str26 = hTMLPageResponse24.getUrl();
        long long27 = hTMLPageResponse24.getFetchTime();
        java.lang.String str29 = hTMLPageResponse24.getHeaderValue("HTMLPageResponseurl:CrawlerURL url:com.soulgalore.crawler.authresponseCode:0encoding:CrawlerURL url:result.csv type:-1");
        java.util.Map<java.lang.String, java.lang.String> strMap30 = hTMLPageResponse24.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse36 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (byte) 100, strMap30, "com.soulgalore.crawler.http.socket.timeout", "Redirected to new domain", (long) 32, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv", (long) (byte) -1);
        java.lang.String str37 = crawlerURL1.getUrl();
        java.lang.String str38 = crawlerURL1.getReferer();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str3, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(uRI9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(crawlerConfiguration14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "com.soulgalore.crawler.auth" + "'", str26, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 580L + "'", long27 == 580L);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str37, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
    }

    @Test
    public void test09191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09191");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        java.lang.String str15 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder16.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder20.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setOnlyOnPath("com.soulgalore.crawler.auth");
        boolean boolean25 = hTMLPageResponse12.equals((java.lang.Object) builder22);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder22.setOnlyOnPath("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder22.setMaxLevels((int) (short) 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str15, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
    }

    @Test
    public void test09192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09192");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url", "CrawlerURL url:CrawlerURL url:1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration9 = builder4.build();
        int int10 = crawlerConfiguration9.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil11 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean12 = crawlerConfiguration9.equals((java.lang.Object) headerUtil11);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil11.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap16 = headerUtil11.createHeadersFromString("CrawlerURL url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap18 = headerUtil11.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap20 = headerUtil11.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap22 = headerUtil11.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap24 = headerUtil11.createHeadersFromString("CrawlerURL url:35");
        java.util.Map<java.lang.String, java.lang.String> strMap26 = headerUtil11.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse32 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) 10, strMap26, "AssetResponseCallable url:AssetResponseCallable url:Wrong content type", "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:", 0L, "AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 32);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(crawlerConfiguration9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(headerUtil11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap26);
    }

    @Test
    public void test09193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09193");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("result.csv");
        java.lang.String str2 = crawlerURL1.toString();
        java.lang.String str3 = crawlerURL1.getHost();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "CrawlerURL url:result.csv" + "'", str2, "CrawlerURL url:result.csv");
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test09194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09194");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult12.getUrls();
        java.lang.String str16 = crawlerResult12.getTheStartPoint();
        java.lang.String str17 = crawlerResult12.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet18 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet19 = crawlerResult12.getNonWorkingUrls();
        java.lang.String str20 = crawlerResult12.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet21 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet22 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL27 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray28 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL27 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet29 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet29, crawlerURLArray28);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet31 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray32 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet33 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet33, hTMLPageResponseArray32);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult35 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet29, hTMLPageResponseSet31, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet33);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet36 = crawlerResult35.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet37 = crawlerResult35.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet38 = crawlerResult35.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet39 = crawlerResult35.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL43 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray44 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL43 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet45 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet45, crawlerURLArray44);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet47 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray48 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet49 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet49, hTMLPageResponseArray48);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult51 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet45, hTMLPageResponseSet47, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet49);
        java.lang.String str52 = crawlerResult51.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet53 = crawlerResult51.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet54 = crawlerResult51.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL58 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean59 = crawlerURL58.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL62 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean63 = crawlerURL62.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL66 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI67 = crawlerURL66.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray68 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL58, crawlerURL62, crawlerURL66 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet69 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet69, crawlerURLArray68);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray71 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet72 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet72, hTMLPageResponseArray71);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL77 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray78 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL77 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet79 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet79, crawlerURLArray78);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet81 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray82 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet83 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet83, hTMLPageResponseArray82);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult85 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet79, hTMLPageResponseSet81, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet83);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult86 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet69, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet72, hTMLPageResponseSet81);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet87 = crawlerResult86.getVerifiedURLResponses();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult88 = new com.soulgalore.crawler.core.CrawlerResult("errorurls.txt", crawlerURLSet39, hTMLPageResponseSet54, hTMLPageResponseSet87);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet89 = crawlerResult88.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet90 = crawlerResult88.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet91 = crawlerResult88.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet92 = crawlerResult88.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult93 = new com.soulgalore.crawler.core.CrawlerResult("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", crawlerURLSet21, hTMLPageResponseSet22, hTMLPageResponseSet92);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet94 = crawlerResult93.getNonWorkingUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet18);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet21);
        org.junit.Assert.assertNotNull(crawlerURLArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet36);
        org.junit.Assert.assertNotNull(crawlerURLSet37);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet38);
        org.junit.Assert.assertNotNull(crawlerURLSet39);
        org.junit.Assert.assertNotNull(crawlerURLArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet53);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(uRI67);
        org.junit.Assert.assertNotNull(crawlerURLArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet87);
        org.junit.Assert.assertNotNull(crawlerURLSet89);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet90);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet91);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet92);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet94);
    }

    @Test
    public void test09195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09195");
        com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider(32, (int) '#', 580, "", "CrawlerURL url:10");
        org.apache.http.client.HttpClient httpClient6 = httpClientProvider5.get();
        org.junit.Assert.assertNotNull(httpClient6);
    }

    @Test
    public void test09196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09196");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder4.build();
        java.lang.String str6 = crawlerConfiguration5.getOnlyOnPath();
        boolean boolean7 = crawlerConfiguration5.isVerifyUrls();
        int int8 = crawlerConfiguration5.getMaxLevels();
        int int9 = crawlerConfiguration5.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = crawlerConfiguration5.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = crawlerConfiguration5.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable13 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:100 type:com.soulgalore.crawler.http.socket.timeout", assetFetcher1, strMap11, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:CrawlerURL url:1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.assets.AssetResponse assetResponse14 = assetResponseCallable13.call();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test09197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09197");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setOnlyOnPath("CrawlerURL url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setRequestHeaders("CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setMaxLevels((int) (byte) 1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test09198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09198");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.lang.String str14 = hTMLPageResponse12.getEncoding();
        java.lang.String str15 = hTMLPageResponse12.getUrl();
        java.lang.String str16 = hTMLPageResponse12.getResponseType();
        java.lang.String str17 = hTMLPageResponse12.getResponseType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str14, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.auth" + "'", str15, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test09199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09199");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:CrawlerURL url:com.soulgalore.crawler.authresponseCode:0encoding:CrawlerURL url:result.csv type:-1", "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url");
        java.lang.String str3 = crawlerURL2.getUrl();
        java.net.URI uRI4 = crawlerURL2.getUri();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "HTMLPageResponseurl:CrawlerURL url:com.soulgalore.crawler.authresponseCode:0encoding:CrawlerURL url:result.csv type:-1" + "'", str3, "HTMLPageResponseurl:CrawlerURL url:com.soulgalore.crawler.authresponseCode:0encoding:CrawlerURL url:result.csv type:-1");
        org.junit.Assert.assertNull(uRI4);
    }

    @Test
    public void test09200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09200");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.lang.String str5 = crawlerURL2.getHost();
        java.lang.String str6 = crawlerURL2.getUrl();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray7 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet8, assetResponseArray7);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray10 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet11 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet11, assetResponseArray10);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult13 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet8, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet11);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet14 = assetsVerificationResult13.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet15 = assetsVerificationResult13.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray16 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet17 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet17, assetResponseArray16);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray19 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet20, assetResponseArray19);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult22 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet17, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet20);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult23 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet15, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet17);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray24 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25, assetResponseArray24);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray27 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet28 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet28, assetResponseArray27);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult30 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet28);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet31 = assetsVerificationResult30.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult32 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet15, assetResponseSet31);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet33 = assetsVerificationResult32.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet34 = assetsVerificationResult32.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet35 = assetsVerificationResult32.getWorkingAssets();
        boolean boolean36 = crawlerURL2.equals((java.lang.Object) assetsVerificationResult32);
        java.lang.String str37 = crawlerURL2.getUrl();
        java.lang.String str38 = crawlerURL2.getUrl();
        java.lang.String str39 = crawlerURL2.toString();
        java.lang.String str40 = crawlerURL2.getReferer();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "com.soulgalore.crawler.auth" + "'", str6, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(assetResponseArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(assetResponseArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(assetResponseSet14);
        org.junit.Assert.assertNotNull(assetResponseSet15);
        org.junit.Assert.assertNotNull(assetResponseArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(assetResponseArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(assetResponseArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(assetResponseArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(assetResponseSet31);
        org.junit.Assert.assertNotNull(assetResponseSet33);
        org.junit.Assert.assertNotNull(assetResponseSet34);
        org.junit.Assert.assertNotNull(assetResponseSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "com.soulgalore.crawler.auth" + "'", str37, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "com.soulgalore.crawler.auth" + "'", str38, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str39, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "urls.txt" + "'", str40, "urls.txt");
    }

    @Test
    public void test09201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09201");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setStartUrl("CrawlerURL url:urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:10");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration9 = builder8.build();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(crawlerConfiguration9);
    }

    @Test
    public void test09202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09202");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int13 = hTMLPageResponse12.getResponseCode();
        java.lang.String str14 = hTMLPageResponse12.getResponseType();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        org.jsoup.nodes.Document document16 = hTMLPageResponse12.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        java.lang.String str18 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = hTMLPageResponse12.getPageUrl();
        java.lang.String str21 = hTMLPageResponse12.getUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(document16);
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str18, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL19);
        org.junit.Assert.assertNotNull(crawlerURL20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "com.soulgalore.crawler.auth" + "'", str21, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test09203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09203");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) "CrawlerURL url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean19 = crawlerURL18.isWrongSyntax();
        java.lang.String str20 = crawlerURL18.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse28 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL18, (int) 'a', strMap22, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str29 = crawlerURL18.getUrl();
        boolean boolean30 = hTMLPageResponse12.equals((java.lang.Object) str29);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL31 = hTMLPageResponse12.getPageUrl();
        java.lang.String str32 = crawlerURL31.getHost();
        java.lang.String str33 = crawlerURL31.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL36 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean37 = crawlerURL36.isWrongSyntax();
        java.lang.String str38 = crawlerURL36.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse46 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL36, (int) 'a', strMap40, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str47 = hTMLPageResponse46.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = hTMLPageResponse46.getResponseHeaders();
        java.lang.String str49 = hTMLPageResponse46.getEncoding();
        java.lang.String str50 = hTMLPageResponse46.toString();
        long long51 = hTMLPageResponse46.getFetchTime();
        java.lang.String str52 = hTMLPageResponse46.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL53 = hTMLPageResponse46.getPageUrl();
        java.lang.String str54 = hTMLPageResponse46.toString();
        boolean boolean55 = crawlerURL31.equals((java.lang.Object) hTMLPageResponse46);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "urls.txt" + "'", str20, "urls.txt");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "com.soulgalore.crawler.auth" + "'", str29, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(crawlerURL31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str33, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "urls.txt" + "'", str38, "urls.txt");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str47, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str49, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str50, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 100L + "'", long51 == 100L);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str52, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str54, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test09204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09204");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder0.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder0.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder0.setNotOnPath("result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setNotOnPath("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder13.setNotOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setVerifyUrls(true);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
    }

    @Test
    public void test09205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09205");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI5 = crawlerURL4.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean9 = crawlerURL8.isWrongSyntax();
        java.lang.String str10 = crawlerURL8.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, (int) 'a', strMap12, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str19 = hTMLPageResponse18.getUrl();
        boolean boolean20 = crawlerURL4.equals((java.lang.Object) str19);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher23 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil24 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = headerUtil24.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable28 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher23, strMap26, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse34 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL4, (int) (short) 100, strMap26, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse40 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) -1, strMap26, "com.soulgalore.crawler.http.socket.timeout", "errorurls.txt", (long) 100, "result.csv", (long) (short) 0);
        org.jsoup.nodes.Document document41 = hTMLPageResponse40.getBody();
        int int42 = hTMLPageResponse40.getResponseCode();
        java.lang.String str44 = hTMLPageResponse40.getHeaderValue("AssetResponseCallable url:com.soulgalore.crawler.auth");
        java.lang.String str45 = hTMLPageResponse40.toString();
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "urls.txt" + "'", str10, "urls.txt");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "com.soulgalore.crawler.auth" + "'", str19, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(headerUtil24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(document41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "HTMLPageResponseurl:hi!responseCode:-1encoding:errorurls.txt type:result.csv" + "'", str45, "HTMLPageResponseurl:hi!responseCode:-1encoding:errorurls.txt type:result.csv");
    }

    @Test
    public void test09206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09206");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads type:-1", "CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:10", 582, (long) (byte) 100);
        int int5 = assetResponse4.getResponseCode();
        java.lang.String str6 = assetResponse4.getUrl();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 582 + "'", int5 == 582);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads type:-1" + "'", str6, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads type:-1");
    }

    @Test
    public void test09207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09207");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setStartUrl("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder0.setNotOnPath("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder0.setStartUrl("Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder0.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder0.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder0.setNotOnPath("HTMLPageResponseurl:CrawlerURL url:hi!responseCode:0encoding:AssetResponseCallable url:com.soulgalore.crawler.auth type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder15.setRequestHeaders("");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
    }

    @Test
    public void test09208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09208");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setStartUrl("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder0.setNotOnPath("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder0.setStartUrl("Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder10.build();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration11.getRequestHeadersMap();
        int int13 = crawlerConfiguration11.getMaxLevels();
        int int14 = crawlerConfiguration11.getMaxLevels();
        java.lang.String str15 = crawlerConfiguration11.getRequestHeaders();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test09209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09209");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int13 = hTMLPageResponse12.getResponseCode();
        java.lang.String str14 = hTMLPageResponse12.getResponseType();
        java.lang.String str15 = hTMLPageResponse12.toString();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        java.lang.String str17 = hTMLPageResponse12.toString();
        org.jsoup.nodes.Document document18 = hTMLPageResponse12.getBody();
        java.lang.String str19 = hTMLPageResponse12.getUrl();
        java.lang.String str20 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse25 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.proxy", "", (int) (short) -1, (long) 583);
        java.lang.String str26 = assetResponse25.getUrl();
        long long27 = assetResponse25.getFetchTime();
        int int28 = assetResponse25.getResponseCode();
        boolean boolean29 = hTMLPageResponse12.equals((java.lang.Object) int28);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str15, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str17, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNull(document18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "com.soulgalore.crawler.auth" + "'", str19, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str20, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "com.soulgalore.crawler.proxy" + "'", str26, "com.soulgalore.crawler.proxy");
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 583L + "'", long27 == 583L);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test09210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09210");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads type:-1", "", 97, 52L);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder5.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder11.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder15.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setOnlyOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder17.setNotOnPath("32");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder17.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder25.setVerifyUrls(false);
        boolean boolean28 = assetResponse4.equals((java.lang.Object) builder25);
        java.lang.String str29 = assetResponse4.getReferer();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
    }

    @Test
    public void test09211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09211");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:", "32", 52, (long) 'a');
        java.lang.String str5 = assetResponse4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:" + "'", str5, "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:");
    }

    @Test
    public void test09212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09212");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("hi!", "CrawlerURL url:result.csv");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        boolean boolean4 = crawlerURL2.isWrongSyntax();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test09213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09213");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder13.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder13.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setVerifyUrls(false);
        boolean boolean26 = hTMLPageResponse12.equals((java.lang.Object) builder25);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder25.setOnlyOnPath("HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration29 = builder28.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder28.setRequestHeaders("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder28.setRequestHeaders("HTMLPageResponseurl:CrawlerURL url:com.soulgalore.crawler.authresponseCode:0encoding:CrawlerURL url:result.csv type:-1");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(crawlerConfiguration29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
    }

    @Test
    public void test09214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09214");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        int int8 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str9 = crawlerConfiguration3.getRequestHeaders();
        java.lang.String str10 = crawlerConfiguration3.getStartUrl();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse15 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        long long16 = assetResponse15.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean20 = crawlerURL19.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder22.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration27 = builder22.build();
        java.lang.String str28 = crawlerConfiguration27.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = crawlerConfiguration27.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse35 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL19, (-1), strMap29, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        boolean boolean36 = assetResponse15.equals((java.lang.Object) strMap29);
        java.lang.String str37 = assetResponse15.getReferer();
        java.lang.String str38 = assetResponse15.getReferer();
        boolean boolean39 = crawlerConfiguration3.equals((java.lang.Object) assetResponse15);
        java.lang.String str40 = crawlerConfiguration3.getRequestHeaders();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(crawlerConfiguration27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str37, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str38, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
    }

    @Test
    public void test09215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09215");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:errorassets.csv", "");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder6.build();
        java.lang.String str8 = crawlerConfiguration7.getStartUrl();
        int int9 = crawlerConfiguration7.getMaxLevels();
        int int10 = crawlerConfiguration7.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = crawlerConfiguration7.getRequestHeadersMap();
        java.lang.String str12 = crawlerConfiguration7.getStartUrl();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse17 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int18 = assetResponse17.getResponseCode();
        int int19 = assetResponse17.getResponseCode();
        long long20 = assetResponse17.getFetchTime();
        long long21 = assetResponse17.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse26 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean27 = assetResponse17.equals((java.lang.Object) 100L);
        java.lang.String str28 = assetResponse17.getReferer();
        java.lang.String str29 = assetResponse17.getReferer();
        long long30 = assetResponse17.getFetchTime();
        boolean boolean31 = crawlerConfiguration7.equals((java.lang.Object) assetResponse17);
        java.lang.String str32 = crawlerConfiguration7.getStartUrl();
        boolean boolean33 = crawlerConfiguration7.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = crawlerConfiguration7.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse40 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 583, strMap34, "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout", "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", (long) (short) 100, "52", (long) 'a');
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "100" + "'", str28, "100");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "100" + "'", str29, "100");
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strMap34);
    }

    @Test
    public void test09216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09216");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("CrawlerURL url:CrawlerURL url:CrawlerURL url:errorassets.csv", "AssetResponseCallable url:-1", 583, (long) (byte) 10);
    }

    @Test
    public void test09217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09217");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:", "AssetResponseCallable url:HTMLPageResponseurl:hi!responseCode:10encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
    }

    @Test
    public void test09218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09218");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        java.net.URI uRI4 = crawlerURL2.getUri();
        java.net.URI uRI5 = crawlerURL2.getUri();
        java.net.URI uRI6 = crawlerURL2.getUri();
        com.soulgalore.crawler.util.HeaderUtil headerUtil8 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil8.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil8.createHeadersFromString("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 97, strMap12, "CrawlerURL url:hi!", "AssetResponseCallable url:AssetResponseCallable url:97", (long) (byte) -1, "-1", (long) (byte) 10);
        java.lang.String str19 = crawlerURL2.getReferer();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertNull(uRI4);
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertNull(uRI6);
        org.junit.Assert.assertNotNull(headerUtil8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "urls.txt" + "'", str19, "urls.txt");
    }

    @Test
    public void test09219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09219");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI23 = crawlerURL22.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL27 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean28 = crawlerURL27.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder30.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder30.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration35 = builder30.build();
        java.lang.String str36 = crawlerConfiguration35.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = crawlerConfiguration35.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse43 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL27, (-1), strMap37, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse49 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL22, 100, strMap37, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse55 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) 10, strMap37, "100", "errorassets.csv", (long) (byte) 100, "", (long) (short) 100);
        java.util.Map<java.lang.String, java.lang.String> strMap56 = hTMLPageResponse55.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder57 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder59 = builder57.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration60 = builder59.build();
        java.lang.String str61 = crawlerConfiguration60.getStartUrl();
        boolean boolean62 = crawlerConfiguration60.isVerifyUrls();
        java.lang.String str63 = crawlerConfiguration60.getNotOnPath();
        java.lang.String str64 = crawlerConfiguration60.getRequestHeaders();
        boolean boolean65 = hTMLPageResponse55.equals((java.lang.Object) crawlerConfiguration60);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL67 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:Unknown error");
        boolean boolean68 = crawlerConfiguration60.equals((java.lang.Object) "AssetResponseCallable url:Unknown error");
        java.lang.String str69 = crawlerConfiguration60.getRequestHeaders();
        java.lang.String str70 = crawlerConfiguration60.getNotOnPath();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(uRI23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(crawlerConfiguration35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(crawlerConfiguration60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
    }

    @Test
    public void test09220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09220");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = hTMLPageResponse12.getResponseHeaders();
        org.jsoup.nodes.Document document16 = hTMLPageResponse12.getBody();
        java.lang.String str17 = hTMLPageResponse12.toString();
        java.lang.String str18 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = hTMLPageResponse12.getResponseHeaders();
        int int20 = hTMLPageResponse12.getResponseCode();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(document16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str17, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str18, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 97 + "'", int20 == 97);
    }

    @Test
    public void test09221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09221");
        com.soulgalore.crawler.util.HeaderUtil headerUtil0 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = headerUtil0.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap4 = headerUtil0.createHeadersFromString("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil0.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = headerUtil0.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:CrawlerURL url:1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain");
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil0.createHeadersFromString("CrawlerURL url:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertNotNull(headerUtil0);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test09222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09222");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int13 = hTMLPageResponse12.getResponseCode();
        int int14 = hTMLPageResponse12.getResponseCode();
        java.lang.String str15 = hTMLPageResponse12.getUrl();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        int int17 = hTMLPageResponse12.getResponseCode();
        java.lang.String str18 = hTMLPageResponse12.getUrl();
        java.lang.String str19 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.util.HeaderUtil headerUtil20 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = headerUtil20.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap24 = headerUtil20.createHeadersFromString("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap26 = headerUtil20.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
        boolean boolean27 = hTMLPageResponse12.equals((java.lang.Object) "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
        java.lang.String str28 = hTMLPageResponse12.getEncoding();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str30 = hTMLPageResponse12.getHeaderValue("HTMLPageResponseurl:hi!responseCode:-1encoding:errorurls.txt type:result.csv");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 97 + "'", int14 == 97);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.auth" + "'", str15, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 97 + "'", int17 == 97);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.auth" + "'", str18, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "com.soulgalore.crawler.auth" + "'", str19, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(headerUtil20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str28, "com.soulgalore.crawler.http.socket.timeout");
    }

    @Test
    public void test09223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09223");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setOnlyOnPath("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setNotOnPath("Wrong content type");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration13 = builder12.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration14 = builder12.build();
        java.lang.String str15 = crawlerConfiguration14.getRequestHeaders();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(crawlerConfiguration13);
        org.junit.Assert.assertNotNull(crawlerConfiguration14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test09224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09224");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("Response timed out", "0", 580, (long) (byte) -1);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL10 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI11 = crawlerURL10.getUri();
        java.lang.String str12 = crawlerURL10.getReferer();
        java.lang.String str13 = crawlerURL10.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder15.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration18 = builder17.build();
        java.lang.String str19 = crawlerConfiguration18.getStartUrl();
        int int20 = crawlerConfiguration18.getMaxLevels();
        int int21 = crawlerConfiguration18.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = crawlerConfiguration18.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse28 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL10, (int) (byte) -1, strMap22, "100", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) (short) -1, "com.soulgalore.crawler.nrofhttpthreads", 0L);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse34 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL6, 580, strMap22, "10", "HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", 580L, "0", (long) 0);
        boolean boolean35 = assetResponse4.equals((java.lang.Object) 0);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray40 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL39 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, crawlerURLArray40);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray44 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet45 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45, hTMLPageResponseArray44);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult47 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, hTMLPageResponseSet43, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet48 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet49 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet50 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet51 = crawlerResult47.getNonWorkingUrls();
        boolean boolean52 = assetResponse4.equals((java.lang.Object) hTMLPageResponseSet51);
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse57 = new com.soulgalore.crawler.core.assets.AssetResponse("hi!", "", (int) (byte) 10, (long) (byte) 100);
        boolean boolean58 = assetResponse4.equals((java.lang.Object) "hi!");
        long long59 = assetResponse4.getFetchTime();
        long long60 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse65 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:AssetResponseCallable url:Malformed url", "CrawlerURL url:-1", (int) (short) 1, 0L);
        boolean boolean66 = assetResponse4.equals((java.lang.Object) 0L);
        org.junit.Assert.assertNull(uRI11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "urls.txt" + "'", str12, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "urls.txt" + "'", str13, "urls.txt");
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(crawlerConfiguration18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet48);
        org.junit.Assert.assertNotNull(crawlerURLSet49);
        org.junit.Assert.assertNotNull(crawlerURLSet50);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test09225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09225");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setStartUrl("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("-1");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration9 = builder6.build();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(crawlerConfiguration9);
    }

    @Test
    public void test09226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09226");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "Response timed out");
        com.soulgalore.crawler.util.HeaderUtil headerUtil4 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil4.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) '4', strMap6, "com.soulgalore.crawler.http.socket.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 580, "com.soulgalore.crawler.auth", (long) (short) 1);
        org.jsoup.nodes.Document document13 = hTMLPageResponse12.getBody();
        java.lang.String str15 = hTMLPageResponse12.getHeaderValue("com.soulgalore.crawler.proxy");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray17 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, assetResponseArray17);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray20 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet21 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21, assetResponseArray20);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult23 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet24 = assetsVerificationResult23.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = assetsVerificationResult23.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = assetsVerificationResult23.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet27 = null;
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray28 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, assetResponseArray28);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray31 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet32 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32, assetResponseArray31);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult34 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet35 = assetsVerificationResult34.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray36 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet37 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37, assetResponseArray36);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray39 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40, assetResponseArray39);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult42 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult43 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet35, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult44 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet27, assetResponseSet35);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult45 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet26, assetResponseSet35);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet46 = assetsVerificationResult45.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet47 = assetsVerificationResult45.getWorkingAssets();
        boolean boolean48 = hTMLPageResponse12.equals((java.lang.Object) assetResponseSet47);
        int int49 = hTMLPageResponse12.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL50 = hTMLPageResponse12.getPageUrl();
        java.lang.String str51 = hTMLPageResponse12.getResponseType();
        org.junit.Assert.assertNotNull(headerUtil4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(document13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertNotNull(assetResponseArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(assetResponseArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(assetResponseSet24);
        org.junit.Assert.assertNotNull(assetResponseSet25);
        org.junit.Assert.assertNotNull(assetResponseSet26);
        org.junit.Assert.assertNotNull(assetResponseArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(assetResponseArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(assetResponseSet35);
        org.junit.Assert.assertNotNull(assetResponseArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(assetResponseArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(assetResponseSet46);
        org.junit.Assert.assertNotNull(assetResponseSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertNotNull(crawlerURL50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "com.soulgalore.crawler.auth" + "'", str51, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test09227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09227");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setStartUrl("CrawlerURL url:urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setNotOnPath("AssetResponseCallable url:35");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test09228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09228");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.lang.String str14 = hTMLPageResponse12.getResponseType();
        java.lang.String str15 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean21 = crawlerURL20.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder23.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration28 = builder23.build();
        java.lang.String str29 = crawlerConfiguration28.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = crawlerConfiguration28.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse36 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, (-1), strMap30, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL40 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI41 = crawlerURL40.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL45 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean46 = crawlerURL45.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder48 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder50 = builder48.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder52 = builder48.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration53 = builder48.build();
        java.lang.String str54 = crawlerConfiguration53.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = crawlerConfiguration53.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse61 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL45, (-1), strMap55, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse67 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL40, 100, strMap55, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse73 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, (int) (byte) 10, strMap55, "100", "errorassets.csv", (long) (byte) 100, "", (long) (short) 100);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse79 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL16, 100, strMap55, "com.soulgalore.crawler.nrofhttpthreads", "errorassets.csv", (long) 97, "result.csv", (long) (byte) -1);
        java.lang.String str80 = hTMLPageResponse79.getUrl();
        java.lang.String str81 = hTMLPageResponse79.getUrl();
        java.lang.String str82 = hTMLPageResponse79.getResponseType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.auth" + "'", str15, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(crawlerConfiguration28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(uRI41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(crawlerConfiguration53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "com.soulgalore.crawler.auth" + "'", str80, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "com.soulgalore.crawler.auth" + "'", str81, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "result.csv" + "'", str82, "result.csv");
    }

    @Test
    public void test09229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09229");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration5.getRequestHeadersMap();
        java.lang.String str8 = crawlerConfiguration5.getOnlyOnPath();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean12 = crawlerURL11.isWrongSyntax();
        java.lang.String str13 = crawlerURL11.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse21 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL11, (int) 'a', strMap15, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int22 = hTMLPageResponse21.getResponseCode();
        int int23 = hTMLPageResponse21.getResponseCode();
        java.lang.String str24 = hTMLPageResponse21.getUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = hTMLPageResponse21.getResponseHeaders();
        boolean boolean26 = crawlerConfiguration5.equals((java.lang.Object) strMap25);
        java.lang.String str27 = crawlerConfiguration5.getOnlyOnPath();
        java.lang.String str28 = crawlerConfiguration5.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "urls.txt" + "'", str13, "urls.txt");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 97 + "'", int22 == 97);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 97 + "'", int23 == 97);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "com.soulgalore.crawler.auth" + "'", str24, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
    }

    @Test
    public void test09230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09230");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str7 = crawlerConfiguration5.getRequestHeaders();
        boolean boolean9 = crawlerConfiguration5.equals((java.lang.Object) 0.0d);
        java.lang.String str10 = crawlerConfiguration5.getNotOnPath();
        java.lang.String str11 = crawlerConfiguration5.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL15 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray16 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL15 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet17, crawlerURLArray16);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet19 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray20 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet21 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet21, hTMLPageResponseArray20);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult23 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet17, hTMLPageResponseSet19, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet21);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet24 = crawlerResult23.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet25 = crawlerResult23.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet26 = crawlerResult23.getUrls();
        java.lang.String str27 = crawlerResult23.getTheStartPoint();
        java.lang.String str28 = crawlerResult23.getTheStartPoint();
        java.lang.String str29 = crawlerResult23.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet30 = crawlerResult23.getUrls();
        java.lang.String str31 = crawlerResult23.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet32 = crawlerResult23.getUrls();
        boolean boolean33 = crawlerConfiguration5.equals((java.lang.Object) crawlerResult23);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(crawlerURLArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet24);
        org.junit.Assert.assertNotNull(crawlerURLSet25);
        org.junit.Assert.assertNotNull(crawlerURLSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test09231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09231");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean9 = crawlerURL8.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder11.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration16 = builder11.build();
        java.lang.String str17 = crawlerConfiguration16.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = crawlerConfiguration16.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse24 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, (-1), strMap18, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int25 = hTMLPageResponse24.getResponseCode();
        long long26 = hTMLPageResponse24.getFetchTime();
        long long27 = hTMLPageResponse24.getFetchTime();
        boolean boolean28 = crawlerConfiguration3.equals((java.lang.Object) hTMLPageResponse24);
        java.lang.String str29 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str30 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str31 = crawlerConfiguration3.getOnlyOnPath();
        java.lang.String str32 = crawlerConfiguration3.getNotOnPath();
        boolean boolean33 = crawlerConfiguration3.isVerifyUrls();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(crawlerConfiguration16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 580L + "'", long26 == 580L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 580L + "'", long27 == 580L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test09232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09232");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.lang.String str13 = crawlerResult12.getTheStartPoint();
        java.lang.String str14 = crawlerResult12.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray21 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL20 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet22, crawlerURLArray21);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet24 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray25 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet26, hTMLPageResponseArray25);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult28 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet22, hTMLPageResponseSet24, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet26);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet29 = crawlerResult28.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet30 = crawlerResult28.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet31 = crawlerResult28.getUrls();
        java.lang.String str32 = crawlerResult28.getTheStartPoint();
        java.lang.String str33 = crawlerResult28.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet34 = crawlerResult28.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet35 = crawlerResult28.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray40 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL39 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, crawlerURLArray40);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray44 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet45 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45, hTMLPageResponseArray44);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult47 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, hTMLPageResponseSet43, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet48 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet49 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet50 = crawlerResult47.getNonWorkingUrls();
        java.lang.String str51 = crawlerResult47.getTheStartPoint();
        java.lang.String str52 = crawlerResult47.getTheStartPoint();
        java.lang.String str53 = crawlerResult47.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet54 = crawlerResult47.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult55 = new com.soulgalore.crawler.core.CrawlerResult("errorassets.csv", crawlerURLSet16, hTMLPageResponseSet35, hTMLPageResponseSet54);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet56 = crawlerResult55.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet57 = crawlerResult55.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet58 = crawlerResult55.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet59 = crawlerResult55.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet60 = crawlerResult55.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet61 = crawlerResult55.getUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(crawlerURLArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet29);
        org.junit.Assert.assertNotNull(crawlerURLSet30);
        org.junit.Assert.assertNotNull(crawlerURLSet31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet34);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet35);
        org.junit.Assert.assertNotNull(crawlerURLArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet48);
        org.junit.Assert.assertNotNull(crawlerURLSet49);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet54);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet56);
        org.junit.Assert.assertNotNull(crawlerURLSet57);
        org.junit.Assert.assertNotNull(crawlerURLSet58);
        org.junit.Assert.assertNotNull(crawlerURLSet59);
        org.junit.Assert.assertNotNull(crawlerURLSet60);
        org.junit.Assert.assertNotNull(crawlerURLSet61);
    }

    @Test
    public void test09233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09233");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        java.lang.String str2 = crawlerURL1.getUrl();
        boolean boolean3 = crawlerURL1.isWrongSyntax();
        com.soulgalore.crawler.util.HeaderUtil headerUtil5 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = headerUtil5.createHeadersFromString("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse13 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) 10, strMap7, "urls.txt", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (byte) 10, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", (-1L));
        java.lang.String str15 = hTMLPageResponse13.getHeaderValue("CrawlerURL url:1");
        long long16 = hTMLPageResponse13.getFetchTime();
        java.lang.String str17 = hTMLPageResponse13.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder18.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder24.setStartUrl("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder24.setMaxLevels(0);
        boolean boolean29 = hTMLPageResponse13.equals((java.lang.Object) 0);
        long long30 = hTMLPageResponse13.getFetchTime();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(headerUtil5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "HTMLPageResponseurl:hi!responseCode:10encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url" + "'", str17, "HTMLPageResponseurl:hi!responseCode:10encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
    }

    @Test
    public void test09234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09234");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("100", "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.lang.String str3 = crawlerURL2.getReferer();
        java.lang.String str4 = crawlerURL2.toString();
        java.lang.String str5 = crawlerURL2.getHost();
        java.lang.String str6 = crawlerURL2.getHost();
        java.lang.String str7 = crawlerURL2.getHost();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str3, "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CrawlerURL url:100" + "'", str4, "CrawlerURL url:100");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test09235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09235");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder4.build();
        java.lang.String str6 = crawlerConfiguration5.getStartUrl();
        java.lang.String str7 = crawlerConfiguration5.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = crawlerConfiguration5.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = crawlerConfiguration5.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable11 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("", assetFetcher1, strMap9, "AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.assets.AssetResponse assetResponse12 = assetResponseCallable11.call();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
    }

    @Test
    public void test09236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09236");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration5.getRequestHeadersMap();
        boolean boolean8 = crawlerConfiguration5.isVerifyUrls();
        java.lang.String str9 = crawlerConfiguration5.getStartUrl();
        boolean boolean10 = crawlerConfiguration5.isVerifyUrls();
        java.lang.String str11 = crawlerConfiguration5.getOnlyOnPath();
        java.lang.String str12 = crawlerConfiguration5.getOnlyOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration16 = builder15.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder15.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setNotOnPath("AssetResponseCallable url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration21 = builder20.build();
        java.lang.String str22 = crawlerConfiguration21.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = crawlerConfiguration21.getRequestHeadersMap();
        boolean boolean24 = crawlerConfiguration5.equals((java.lang.Object) crawlerConfiguration21);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(crawlerConfiguration16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(crawlerConfiguration21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test09237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09237");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI5 = crawlerURL4.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean9 = crawlerURL8.isWrongSyntax();
        java.lang.String str10 = crawlerURL8.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, (int) 'a', strMap12, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str19 = hTMLPageResponse18.getUrl();
        boolean boolean20 = crawlerURL4.equals((java.lang.Object) str19);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher23 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil24 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = headerUtil24.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable28 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher23, strMap26, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse34 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL4, (int) (short) 100, strMap26, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse40 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) -1, strMap26, "com.soulgalore.crawler.http.socket.timeout", "errorurls.txt", (long) 100, "result.csv", (long) (short) 0);
        org.jsoup.nodes.Document document41 = hTMLPageResponse40.getBody();
        int int42 = hTMLPageResponse40.getResponseCode();
        java.lang.String str44 = hTMLPageResponse40.getHeaderValue("AssetResponseCallable url:com.soulgalore.crawler.auth");
        int int45 = hTMLPageResponse40.getResponseCode();
        long long46 = hTMLPageResponse40.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL47 = hTMLPageResponse40.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = hTMLPageResponse40.getResponseHeaders();
        java.lang.String str49 = hTMLPageResponse40.getEncoding();
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "urls.txt" + "'", str10, "urls.txt");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "com.soulgalore.crawler.auth" + "'", str19, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(headerUtil24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(document41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertNotNull(crawlerURL47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "errorurls.txt" + "'", str49, "errorurls.txt");
    }

    @Test
    public void test09238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09238");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:", "CrawlerURL url:CrawlerURL url:35");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse7 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth", "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", 0, (long) (-1));
        java.lang.String str8 = assetResponse7.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder9.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setStartUrl("-1");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration16 = builder15.build();
        java.lang.String str17 = crawlerConfiguration16.getStartUrl();
        boolean boolean18 = crawlerConfiguration16.isVerifyUrls();
        boolean boolean19 = assetResponse7.equals((java.lang.Object) crawlerConfiguration16);
        boolean boolean20 = crawlerURL2.equals((java.lang.Object) crawlerConfiguration16);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str8, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(crawlerConfiguration16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1" + "'", str17, "-1");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test09239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09239");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", "52");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean7 = crawlerURL6.isWrongSyntax();
        java.lang.String str8 = crawlerURL6.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse16 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL6, (int) 'a', strMap10, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str17 = hTMLPageResponse16.getUrl();
        boolean boolean19 = hTMLPageResponse16.equals((java.lang.Object) "CrawlerURL url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = hTMLPageResponse16.getPageUrl();
        java.net.URI uRI21 = crawlerURL20.getUri();
        java.lang.String str22 = crawlerURL20.toString();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher25 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL27 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL30 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI31 = crawlerURL30.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL34 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean35 = crawlerURL34.isWrongSyntax();
        java.lang.String str36 = crawlerURL34.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse44 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL34, (int) 'a', strMap38, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str45 = hTMLPageResponse44.getUrl();
        boolean boolean46 = crawlerURL30.equals((java.lang.Object) str45);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher49 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil50 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap52 = headerUtil50.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable54 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher49, strMap52, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse60 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL30, (int) (short) 100, strMap52, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse66 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL27, (int) (short) -1, strMap52, "com.soulgalore.crawler.http.socket.timeout", "errorurls.txt", (long) 100, "result.csv", (long) (short) 0);
        java.util.Map<java.lang.String, java.lang.String> strMap67 = hTMLPageResponse66.getResponseHeaders();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable69 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("com.soulgalore.crawler.nrofhttpthreads", assetFetcher25, strMap67, "HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse75 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, (int) '#', strMap67, "0", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:", (long) 581, "0", (long) (-1));
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse81 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) 10, strMap67, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads", "AssetResponseCallable url:0", (long) '4', "AssetResponseCallable url:com.soulgalore.crawler.auth", 580L);
        java.util.Map<java.lang.String, java.lang.String> strMap82 = hTMLPageResponse81.getResponseHeaders();
        java.lang.String str83 = hTMLPageResponse81.toString();
        long long84 = hTMLPageResponse81.getFetchTime();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "urls.txt" + "'", str8, "urls.txt");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "com.soulgalore.crawler.auth" + "'", str17, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(crawlerURL20);
        org.junit.Assert.assertNull(uRI21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str22, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(uRI31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "urls.txt" + "'", str36, "urls.txt");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "com.soulgalore.crawler.auth" + "'", str45, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(headerUtil50);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "HTMLPageResponseurl:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1responseCode:10encoding:AssetResponseCallable url:0 type:AssetResponseCallable url:com.soulgalore.crawler.auth" + "'", str83, "HTMLPageResponseurl:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1responseCode:10encoding:AssetResponseCallable url:0 type:AssetResponseCallable url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 580L + "'", long84 == 580L);
    }

    @Test
    public void test09240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09240");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        int int5 = crawlerConfiguration3.getMaxLevels();
        int int6 = crawlerConfiguration3.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL9 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean10 = crawlerURL9.isWrongSyntax();
        java.lang.String str11 = crawlerURL9.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse19 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL9, (int) 'a', strMap13, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str20 = hTMLPageResponse19.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = hTMLPageResponse19.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = hTMLPageResponse19.getResponseHeaders();
        java.lang.String str23 = hTMLPageResponse19.getUrl();
        org.jsoup.nodes.Document document24 = hTMLPageResponse19.getBody();
        boolean boolean25 = crawlerConfiguration3.equals((java.lang.Object) hTMLPageResponse19);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str27 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str28 = crawlerConfiguration3.getOnlyOnPath();
        java.lang.Object obj29 = null;
        boolean boolean30 = crawlerConfiguration3.equals(obj29);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = crawlerConfiguration3.getRequestHeadersMap();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "urls.txt" + "'", str11, "urls.txt");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str20, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.auth" + "'", str23, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap31);
    }

    @Test
    public void test09241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09241");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setStartUrl("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder0.setNotOnPath("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder0.setRequestHeaders("HTMLPageResponseurl:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1responseCode:10encoding:AssetResponseCallable url:0 type:AssetResponseCallable url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder14.build();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
    }

    @Test
    public void test09242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09242");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean6 = crawlerURL5.isWrongSyntax();
        java.lang.String str7 = crawlerURL5.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse15 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) 'a', strMap9, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str16 = hTMLPageResponse15.getUrl();
        boolean boolean17 = crawlerURL1.equals((java.lang.Object) str16);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher20 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil21 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = headerUtil21.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable25 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher20, strMap23, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse31 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) 100, strMap23, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        org.jsoup.nodes.Document document32 = hTMLPageResponse31.getBody();
        java.lang.String str34 = hTMLPageResponse31.getHeaderValue("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        int int35 = hTMLPageResponse31.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = hTMLPageResponse31.getResponseHeaders();
        int int37 = hTMLPageResponse31.getResponseCode();
        org.jsoup.nodes.Document document38 = hTMLPageResponse31.getBody();
        java.lang.String str39 = hTMLPageResponse31.getEncoding();
        int int40 = hTMLPageResponse31.getResponseCode();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "urls.txt" + "'", str7, "urls.txt");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(headerUtil21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(document32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        org.junit.Assert.assertNull(document38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Unknown error" + "'", str39, "Unknown error");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
    }

    @Test
    public void test09243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09243");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        int int5 = crawlerConfiguration3.getMaxLevels();
        int int6 = crawlerConfiguration3.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str8 = crawlerConfiguration3.getStartUrl();
        java.lang.String str9 = crawlerConfiguration3.getOnlyOnPath();
        java.lang.String str10 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str11 = crawlerConfiguration3.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration3.getRequestHeadersMap();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test09244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09244");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "com.soulgalore.crawler.auth");
        java.lang.String str3 = crawlerURL2.toString();
        java.lang.String str4 = crawlerURL2.toString();
        java.lang.String str5 = crawlerURL2.getUrl();
        com.soulgalore.crawler.util.StatusCode statusCode6 = com.soulgalore.crawler.util.StatusCode.SC_WRONG_CONTENT_TYPE;
        java.lang.String str7 = statusCode6.getFriendlyName();
        java.lang.String str8 = statusCode6.getFriendlyName();
        int int9 = statusCode6.getCode();
        int int10 = statusCode6.getCode();
        int int11 = statusCode6.getCode();
        java.lang.String str12 = statusCode6.getFriendlyName();
        int int13 = statusCode6.getCode();
        int int14 = statusCode6.getCode();
        boolean boolean15 = crawlerURL2.equals((java.lang.Object) int14);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "CrawlerURL url:urls.txt" + "'", str3, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CrawlerURL url:urls.txt" + "'", str4, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "urls.txt" + "'", str5, "urls.txt");
        org.junit.Assert.assertTrue("'" + statusCode6 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_WRONG_CONTENT_TYPE + "'", statusCode6.equals(com.soulgalore.crawler.util.StatusCode.SC_WRONG_CONTENT_TYPE));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Wrong content type" + "'", str7, "Wrong content type");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Wrong content type" + "'", str8, "Wrong content type");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 583 + "'", int9 == 583);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 583 + "'", int10 == 583);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 583 + "'", int11 == 583);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Wrong content type" + "'", str12, "Wrong content type");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 583 + "'", int13 == 583);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 583 + "'", int14 == 583);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test09245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09245");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = crawlerURL2.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean17 = crawlerURL16.isWrongSyntax();
        java.lang.String str18 = crawlerURL16.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse26 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL16, (int) 'a', strMap20, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str27 = hTMLPageResponse26.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = hTMLPageResponse26.getResponseHeaders();
        java.lang.String str29 = hTMLPageResponse26.getEncoding();
        java.lang.String str30 = hTMLPageResponse26.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder31.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = builder31.setMaxLevels((int) (short) 0);
        boolean boolean36 = hTMLPageResponse26.equals((java.lang.Object) builder35);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder35.setVerifyUrls(false);
        boolean boolean39 = crawlerURL2.equals((java.lang.Object) builder35);
        java.net.URI uRI40 = crawlerURL2.getUri();
        java.lang.String str41 = crawlerURL2.getHost();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "urls.txt" + "'", str18, "urls.txt");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str27, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str29, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str30, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(uRI40);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test09246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09246");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setMaxLevels(10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder8.setOnlyOnPath("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setOnlyOnPath("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setOnlyOnPath("AssetResponseCallable url:errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder20.setNotOnPath("AssetResponseCallable url:AssetResponseCallable url:Redirected to new domain");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test09247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09247");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = hTMLPageResponse12.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        org.jsoup.nodes.Document document17 = hTMLPageResponse12.getBody();
        java.lang.String str18 = hTMLPageResponse12.getResponseType();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str20 = hTMLPageResponse12.getResponseType();
        java.lang.String str21 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = hTMLPageResponse12.getPageUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertNull(document17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str21, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL22);
    }

    @Test
    public void test09248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09248");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setOnlyOnPath("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setOnlyOnPath("CrawlerURL url:com.soulgalore.crawler.proxy");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder14.setNotOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder14.setRequestHeaders("AssetResponseCallable url:HTMLPageResponseurl:hi!responseCode:-1encoding:errorurls.txt type:result.csv");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test09249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09249");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        int int6 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil7 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean8 = crawlerConfiguration5.equals((java.lang.Object) headerUtil7);
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil7.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil7.createHeadersFromString("CrawlerURL url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil7.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap16 = headerUtil7.createHeadersFromString("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        java.util.Map<java.lang.String, java.lang.String> strMap18 = headerUtil7.createHeadersFromString("CrawlerURL url:35");
        java.util.Map<java.lang.String, java.lang.String> strMap20 = headerUtil7.createHeadersFromString("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        java.util.Map<java.lang.String, java.lang.String> strMap22 = headerUtil7.createHeadersFromString("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(headerUtil7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap22);
    }

    @Test
    public void test09250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09250");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "CrawlerURL url:1", (int) (short) 0, (long) (byte) 10);
        java.lang.String str5 = assetResponse4.getReferer();
        long long6 = assetResponse4.getFetchTime();
        java.lang.String str7 = assetResponse4.getUrl();
        java.lang.String str8 = assetResponse4.getUrl();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("CrawlerURL url:result.csv", "errorurls.txt", (int) '#', (long) 580);
        long long14 = assetResponse13.getFetchTime();
        boolean boolean15 = assetResponse4.equals((java.lang.Object) assetResponse13);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CrawlerURL url:1" + "'", str5, "CrawlerURL url:1");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10L + "'", long6 == 10L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 580L + "'", long14 == 580L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test09251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09251");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean6 = crawlerURL5.isWrongSyntax();
        java.lang.String str7 = crawlerURL5.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse15 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) 'a', strMap9, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str16 = hTMLPageResponse15.getUrl();
        boolean boolean17 = crawlerURL1.equals((java.lang.Object) str16);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher20 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil21 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = headerUtil21.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable25 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher20, strMap23, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse31 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) 100, strMap23, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        org.jsoup.nodes.Document document32 = hTMLPageResponse31.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = hTMLPageResponse31.getPageUrl();
        java.lang.String str35 = hTMLPageResponse31.getHeaderValue("errorassets.csv");
        java.lang.String str36 = hTMLPageResponse31.getResponseType();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "urls.txt" + "'", str7, "urls.txt");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(headerUtil21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(document32);
        org.junit.Assert.assertNotNull(crawlerURL33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "errorurls.txt" + "'", str36, "errorurls.txt");
    }

    @Test
    public void test09252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09252");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        int int5 = crawlerConfiguration3.getMaxLevels();
        int int6 = crawlerConfiguration3.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str8 = crawlerConfiguration3.getStartUrl();
        java.lang.String str9 = crawlerConfiguration3.getStartUrl();
        int int10 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str11 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str12 = crawlerConfiguration3.getRequestHeaders();
        java.lang.String str13 = crawlerConfiguration3.getStartUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test09253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09253");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        boolean boolean22 = hTMLPageResponse12.equals((java.lang.Object) builder21);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL23 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher26 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI30 = crawlerURL29.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL34 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean35 = crawlerURL34.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = builder37.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder41 = builder37.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration42 = builder37.build();
        java.lang.String str43 = crawlerConfiguration42.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = crawlerConfiguration42.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse50 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL34, (-1), strMap44, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse56 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, 100, strMap44, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.util.Map<java.lang.String, java.lang.String> strMap57 = hTMLPageResponse56.getResponseHeaders();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable59 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("result.csv", assetFetcher26, strMap57, "-1");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse65 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL23, (int) '4', strMap57, "Wrong content type", "com.soulgalore.crawler.http.connection.timeout", (long) (short) 1, "errorassets.csv", (long) ' ');
        boolean boolean66 = crawlerURL23.isWrongSyntax();
        java.net.URI uRI67 = crawlerURL23.getUri();
        java.net.URI uRI68 = crawlerURL23.getUri();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(crawlerURL23);
        org.junit.Assert.assertNull(uRI30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(crawlerConfiguration42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(uRI67);
        org.junit.Assert.assertNull(uRI68);
    }

    @Test
    public void test09254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09254");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("Malformed url", "com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.util.HeaderUtil headerUtil4 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil4.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 583, strMap6, "Redirected to new domain", "result.csv", 0L, "result.csv", (long) (short) 100);
        java.lang.String str14 = hTMLPageResponse12.getHeaderValue("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.jsoup.nodes.Document document15 = hTMLPageResponse12.getBody();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        org.junit.Assert.assertNotNull(headerUtil4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(document15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Malformed url" + "'", str16, "Malformed url");
    }

    @Test
    public void test09255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09255");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder4.setOnlyOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setMaxLevels((int) (byte) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setNotOnPath("CrawlerURL url:1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setVerifyUrls(false);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test09256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09256");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        int int5 = crawlerConfiguration3.getMaxLevels();
        int int6 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str7 = crawlerConfiguration3.getStartUrl();
        int int8 = crawlerConfiguration3.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str10 = crawlerConfiguration3.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test09257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09257");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        org.jsoup.nodes.Document document15 = hTMLPageResponse12.getBody();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder16.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration21 = builder16.build();
        java.lang.String str22 = crawlerConfiguration21.getRequestHeaders();
        java.lang.Class<?> wildcardClass23 = crawlerConfiguration21.getClass();
        boolean boolean24 = hTMLPageResponse12.equals((java.lang.Object) crawlerConfiguration21);
        org.jsoup.nodes.Document document25 = hTMLPageResponse12.getBody();
        java.lang.String str26 = hTMLPageResponse12.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(document15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(crawlerConfiguration21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(document25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str26, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
    }

    @Test
    public void test09258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09258");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getNonWorkingAssets();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration13 = builder8.build();
        java.lang.String str14 = crawlerConfiguration13.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = crawlerConfiguration13.getRequestHeadersMap();
        java.lang.String str16 = crawlerConfiguration13.getNotOnPath();
        int int17 = crawlerConfiguration13.getMaxLevels();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray18 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet19 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet19, assetResponseArray18);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray21 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, assetResponseArray21);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult24 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet19, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = assetsVerificationResult24.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = assetsVerificationResult24.getWorkingAssets();
        boolean boolean27 = crawlerConfiguration13.equals((java.lang.Object) assetResponseSet26);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult28 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet7, assetResponseSet26);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = assetsVerificationResult28.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet30 = assetsVerificationResult28.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet31 = assetsVerificationResult28.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray32 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet33 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33, assetResponseArray32);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray35 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet36 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet36, assetResponseArray35);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult38 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet36);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet39 = assetsVerificationResult38.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = assetsVerificationResult38.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet41 = assetsVerificationResult38.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult42 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet31, assetResponseSet41);
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(crawlerConfiguration13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(assetResponseArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(assetResponseArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(assetResponseSet25);
        org.junit.Assert.assertNotNull(assetResponseSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(assetResponseSet29);
        org.junit.Assert.assertNotNull(assetResponseSet30);
        org.junit.Assert.assertNotNull(assetResponseSet31);
        org.junit.Assert.assertNotNull(assetResponseArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(assetResponseArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(assetResponseSet39);
        org.junit.Assert.assertNotNull(assetResponseSet40);
        org.junit.Assert.assertNotNull(assetResponseSet41);
    }

    @Test
    public void test09259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09259");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        int int6 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil7 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean8 = crawlerConfiguration5.equals((java.lang.Object) headerUtil7);
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil7.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil7.createHeadersFromString("CrawlerURL url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil7.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap16 = headerUtil7.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap18 = headerUtil7.createHeadersFromString("AssetResponseCallable url:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        java.util.Map<java.lang.String, java.lang.String> strMap20 = headerUtil7.createHeadersFromString("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:");
        java.util.Map<java.lang.String, java.lang.String> strMap22 = headerUtil7.createHeadersFromString("AssetResponseCallable url:35");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(headerUtil7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap22);
    }

    @Test
    public void test09260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09260");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider((int) '4', 583, (int) (short) 1, "AssetResponseCallable url:AssetResponseCallable url:Wrong content type", "CrawlerURL url:CrawlerURL url:HTMLPageResponseurl:CrawlerURL url:com.soulgalore.crawler.authresponseCode:0encoding:CrawlerURL url:result.csv type:-1");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:AssetResponseCallable url:AssetResponseCallable url:Wrong content type");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09261");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        java.lang.String str15 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder16.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder20.setStartUrl("-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder20.setNotOnPath("10");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder20.setVerifyUrls(false);
        boolean boolean27 = hTMLPageResponse12.equals((java.lang.Object) builder20);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str15, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test09262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09262");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        java.lang.String str15 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder16.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder20.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setOnlyOnPath("com.soulgalore.crawler.auth");
        boolean boolean25 = hTMLPageResponse12.equals((java.lang.Object) builder22);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder22.setOnlyOnPath("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setOnlyOnPath("AssetResponseCallable url:100");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration30 = builder29.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder29.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder29.setOnlyOnPath("HTMLPageResponseurl:AssetResponseCallable url:Malformed urlresponseCode:581encoding:Unknown error type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str15, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(crawlerConfiguration30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
    }

    @Test
    public void test09263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09263");
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet0 = null;
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = null;
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray2 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet3 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet3, assetResponseArray2);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray5 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet6, assetResponseArray5);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult8 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet3, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet6);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = assetsVerificationResult8.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray10 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet11 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet11, assetResponseArray10);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray13 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet14 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet14, assetResponseArray13);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult16 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet11, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet14);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult17 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet9, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet14);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult18 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet1, assetResponseSet9);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult19 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet0, assetResponseSet1);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = assetsVerificationResult19.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet21 = assetsVerificationResult19.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = assetsVerificationResult19.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet23 = assetsVerificationResult19.getWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(assetResponseArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(assetResponseSet9);
        org.junit.Assert.assertNotNull(assetResponseArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(assetResponseArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(assetResponseSet20);
        org.junit.Assert.assertNull(assetResponseSet21);
        org.junit.Assert.assertNull(assetResponseSet22);
        org.junit.Assert.assertNull(assetResponseSet23);
    }

    @Test
    public void test09264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09264");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.lang.String str5 = crawlerURL2.getHost();
        java.lang.String str6 = crawlerURL2.getReferer();
        java.lang.String str7 = crawlerURL2.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration12 = builder11.build();
        java.lang.String str13 = crawlerConfiguration12.getStartUrl();
        int int14 = crawlerConfiguration12.getMaxLevels();
        int int15 = crawlerConfiguration12.getMaxLevels();
        java.lang.String str16 = crawlerConfiguration12.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration12.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (short) 1, strMap17, "", "CrawlerURL url:1", (long) '4', "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain", (long) (byte) 100);
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse28 = new com.soulgalore.crawler.core.assets.AssetResponse("Response timed out", "CrawlerURL url:hi!", (int) 'a', (long) 10);
        java.lang.String str29 = assetResponse28.getUrl();
        java.lang.String str30 = assetResponse28.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder31.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = builder31.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = builder35.setStartUrl("-1");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration38 = builder37.build();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = crawlerConfiguration38.getRequestHeadersMap();
        java.lang.String str40 = crawlerConfiguration38.getStartUrl();
        boolean boolean41 = assetResponse28.equals((java.lang.Object) crawlerConfiguration38);
        java.lang.String str42 = crawlerConfiguration38.getStartUrl();
        int int43 = crawlerConfiguration38.getMaxLevels();
        java.lang.String str44 = crawlerConfiguration38.getNotOnPath();
        boolean boolean45 = hTMLPageResponse23.equals((java.lang.Object) str44);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL46 = hTMLPageResponse23.getPageUrl();
        java.lang.String str47 = hTMLPageResponse23.toString();
        java.lang.String str48 = hTMLPageResponse23.getEncoding();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "urls.txt" + "'", str6, "urls.txt");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "urls.txt" + "'", str7, "urls.txt");
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(crawlerConfiguration12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Response timed out" + "'", str29, "Response timed out");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "CrawlerURL url:hi!" + "'", str30, "CrawlerURL url:hi!");
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(crawlerConfiguration38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1" + "'", str40, "-1");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1" + "'", str42, "-1");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(crawlerURL46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:CrawlerURL url:1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain" + "'", str47, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:CrawlerURL url:1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "CrawlerURL url:1" + "'", str48, "CrawlerURL url:1");
    }

    @Test
    public void test09265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09265");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = hTMLPageResponse12.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        boolean boolean18 = crawlerURL17.isWrongSyntax();
        java.lang.String str19 = crawlerURL17.getUrl();
        java.lang.String str20 = crawlerURL17.getHost();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean25 = crawlerURL24.isWrongSyntax();
        java.lang.String str26 = crawlerURL24.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse34 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL24, (int) 'a', strMap28, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str35 = hTMLPageResponse34.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = hTMLPageResponse34.getResponseHeaders();
        java.lang.String str37 = hTMLPageResponse34.getEncoding();
        java.lang.String str38 = hTMLPageResponse34.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder41 = builder39.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder43 = builder39.setMaxLevels((int) (short) 0);
        boolean boolean44 = hTMLPageResponse34.equals((java.lang.Object) builder43);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder46 = builder43.setOnlyOnPath("10");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration47 = builder46.build();
        java.lang.String str48 = crawlerConfiguration47.getOnlyOnPath();
        java.lang.String str49 = crawlerConfiguration47.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = crawlerConfiguration47.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse56 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL17, (int) 'a', strMap50, "CrawlerURL url:-1", "AssetResponseCallable url:CrawlerURL url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads", (long) (short) -1, "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", 52L);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "com.soulgalore.crawler.auth" + "'", str19, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "urls.txt" + "'", str26, "urls.txt");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str35, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str37, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str38, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(crawlerConfiguration47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "10" + "'", str48, "10");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(strMap50);
    }

    @Test
    public void test09266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09266");
        com.soulgalore.crawler.util.StatusCode statusCode0 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT;
        int int1 = statusCode0.getCode();
        int int2 = statusCode0.getCode();
        java.lang.String str3 = statusCode0.getFriendlyName();
        int int4 = statusCode0.getCode();
        int int5 = statusCode0.getCode();
        java.lang.String str6 = statusCode0.getFriendlyName();
        java.lang.String str7 = statusCode0.getFriendlyName();
        org.junit.Assert.assertTrue("'" + statusCode0 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT + "'", statusCode0.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 580 + "'", int1 == 580);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 580 + "'", int2 == 580);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Response timed out" + "'", str3, "Response timed out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 580 + "'", int4 == 580);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 580 + "'", int5 == 580);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Response timed out" + "'", str6, "Response timed out");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Response timed out" + "'", str7, "Response timed out");
    }

    @Test
    public void test09267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09267");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.toString();
        java.lang.String str14 = hTMLPageResponse12.getResponseType();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        org.jsoup.nodes.Document document17 = hTMLPageResponse12.getBody();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str13, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNull(document17);
    }

    @Test
    public void test09268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09268");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider(97, 10, (int) ' ', "CrawlerURL url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads", "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"CrawlerURL url\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09269");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        boolean boolean22 = hTMLPageResponse12.equals((java.lang.Object) builder21);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder21.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder21.setMaxLevels((int) (short) 10);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration27 = builder21.build();
        int int28 = crawlerConfiguration27.getMaxLevels();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(crawlerConfiguration27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
    }

    @Test
    public void test09270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09270");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        java.lang.String str20 = hTMLPageResponse18.getHeaderValue("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder21.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder25.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setNotOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder27.setMaxLevels((int) (byte) -1);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration32 = builder31.build();
        boolean boolean33 = hTMLPageResponse18.equals((java.lang.Object) builder31);
        long long34 = hTMLPageResponse18.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL35 = hTMLPageResponse18.getPageUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(crawlerConfiguration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 580L + "'", long34 == 580L);
        org.junit.Assert.assertNotNull(crawlerURL35);
    }

    @Test
    public void test09271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09271");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "errorurls.txt", 97, (-1L));
        java.lang.String str5 = assetResponse4.getReferer();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        long long9 = assetResponse4.getFetchTime();
        java.lang.String str10 = assetResponse4.getReferer();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "errorurls.txt" + "'", str5, "errorurls.txt");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 97 + "'", int6 == 97);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "errorurls.txt" + "'", str10, "errorurls.txt");
    }

    @Test
    public void test09272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09272");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder3 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder3.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration6 = builder5.build();
        java.lang.String str7 = crawlerConfiguration6.getStartUrl();
        int int8 = crawlerConfiguration6.getMaxLevels();
        int int9 = crawlerConfiguration6.getMaxLevels();
        java.lang.String str10 = crawlerConfiguration6.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = crawlerConfiguration6.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse17 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 97, strMap11, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", "CrawlerURL url:com.soulgalore.crawler.proxy", (long) 0, "", (long) 583);
        java.lang.String str18 = hTMLPageResponse17.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = hTMLPageResponse17.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean23 = crawlerURL22.isWrongSyntax();
        java.lang.String str24 = crawlerURL22.getReferer();
        java.lang.String str25 = crawlerURL22.getHost();
        boolean boolean26 = crawlerURL22.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL30 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean31 = crawlerURL30.isWrongSyntax();
        java.lang.String str32 = crawlerURL30.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse40 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL30, (int) 'a', strMap34, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str41 = hTMLPageResponse40.getEncoding();
        java.lang.String str42 = hTMLPageResponse40.getResponseType();
        java.lang.String str43 = hTMLPageResponse40.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL44 = hTMLPageResponse40.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL48 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "com.soulgalore.crawler.auth");
        java.lang.String str49 = crawlerURL48.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder51 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder53 = builder51.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration54 = builder53.build();
        java.lang.String str55 = crawlerConfiguration54.getOnlyOnPath();
        boolean boolean56 = crawlerConfiguration54.isVerifyUrls();
        int int57 = crawlerConfiguration54.getMaxLevels();
        int int58 = crawlerConfiguration54.getMaxLevels();
        boolean boolean59 = crawlerConfiguration54.isVerifyUrls();
        boolean boolean60 = crawlerConfiguration54.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap61 = crawlerConfiguration54.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse67 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL48, 100, strMap61, "Unknown error", "com.soulgalore.crawler.http.socket.timeout", (long) 10, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", 0L);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse73 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL44, (int) '4', strMap61, "97", "100", (long) (byte) 1, "com.soulgalore.crawler.http.socket.timeout", (long) (byte) -1);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse79 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL22, (int) '4', strMap61, "1", "Redirected to new domain", (long) (short) -1, "1", (long) 100);
        boolean boolean80 = crawlerURL19.equals((java.lang.Object) hTMLPageResponse79);
        java.lang.String str81 = hTMLPageResponse79.toString();
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(crawlerConfiguration6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "CrawlerURL url:urls.txt" + "'", str18, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertNotNull(crawlerURL19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "urls.txt" + "'", str24, "urls.txt");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "urls.txt" + "'", str32, "urls.txt");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str41, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "com.soulgalore.crawler.auth" + "'", str43, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL44);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "CrawlerURL url:urls.txt" + "'", str49, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(crawlerConfiguration54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:Redirected to new domain type:1" + "'", str81, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:Redirected to new domain type:1");
    }

    @Test
    public void test09273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09273");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:urls.txt type:com.soulgalore.crawler.http.connection.timeout", "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (int) ' ', (long) '4');
        java.lang.String str5 = assetResponse4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:urls.txt type:com.soulgalore.crawler.http.connection.timeout" + "'", str5, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:urls.txt type:com.soulgalore.crawler.http.connection.timeout");
    }

    @Test
    public void test09274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09274");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        long long15 = hTMLPageResponse12.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        int int17 = hTMLPageResponse12.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 100L + "'", long15 == 100L);
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 97 + "'", int17 == 97);
        org.junit.Assert.assertNotNull(crawlerURL18);
    }

    @Test
    public void test09275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09275");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet12 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet14 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult11.getUrls();
        java.lang.String str16 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet18 = crawlerResult11.getNonWorkingUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet12);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet17);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet18);
    }

    @Test
    public void test09276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09276");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder6.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration8 = builder6.build();
        java.lang.String str9 = crawlerConfiguration8.getStartUrl();
        java.lang.String str10 = crawlerConfiguration8.getNotOnPath();
        java.lang.String str11 = crawlerConfiguration8.getRequestHeaders();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(crawlerConfiguration8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "urls.txt" + "'", str10, "urls.txt");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test09277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09277");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv", "AssetResponseCallable url:com.soulgalore.crawler.auth", (int) (short) 100, 100L);
        int int5 = assetResponse4.getResponseCode();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
    }

    @Test
    public void test09278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09278");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("CrawlerURL url:CrawlerURL url:CrawlerURL url:errorassets.csv", "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:", 0, 0L);
        int int5 = assetResponse4.getResponseCode();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test09279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09279");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("52");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setStartUrl("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
    }

    @Test
    public void test09280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09280");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("52");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder2.setOnlyOnPath("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setStartUrl("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder6.setMaxLevels(582);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder6.setRequestHeaders("CrawlerURL url:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder6.build();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
    }

    @Test
    public void test09281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09281");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout", "HTMLPageResponseurl:CrawlerURL url:com.soulgalore.crawler.authresponseCode:0encoding:CrawlerURL url:result.csv type:-1", 1, 0L);
        java.lang.String str5 = assetResponse4.getReferer();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "HTMLPageResponseurl:CrawlerURL url:com.soulgalore.crawler.authresponseCode:0encoding:CrawlerURL url:result.csv type:-1" + "'", str5, "HTMLPageResponseurl:CrawlerURL url:com.soulgalore.crawler.authresponseCode:0encoding:CrawlerURL url:result.csv type:-1");
    }

    @Test
    public void test09282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09282");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        int int6 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil7 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean8 = crawlerConfiguration5.equals((java.lang.Object) headerUtil7);
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil7.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil7.createHeadersFromString("CrawlerURL url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil7.createHeadersFromString("HTMLPageResponseurl:CrawlerURL url:com.soulgalore.crawler.authresponseCode:0encoding:CrawlerURL url:result.csv type:-1");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(headerUtil7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
    }

    @Test
    public void test09283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09283");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI4 = crawlerURL3.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration8 = builder7.build();
        java.lang.String str9 = crawlerConfiguration8.getStartUrl();
        int int10 = crawlerConfiguration8.getMaxLevels();
        int int11 = crawlerConfiguration8.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean15 = crawlerURL14.isWrongSyntax();
        java.lang.String str16 = crawlerURL14.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse24 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL14, (int) 'a', strMap18, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str25 = hTMLPageResponse24.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL26 = hTMLPageResponse24.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = hTMLPageResponse24.getResponseHeaders();
        java.lang.String str28 = hTMLPageResponse24.getUrl();
        org.jsoup.nodes.Document document29 = hTMLPageResponse24.getBody();
        boolean boolean30 = crawlerConfiguration8.equals((java.lang.Object) hTMLPageResponse24);
        boolean boolean31 = crawlerURL3.equals((java.lang.Object) hTMLPageResponse24);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = builder33.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration36 = builder35.build();
        java.lang.String str37 = crawlerConfiguration36.getStartUrl();
        int int38 = crawlerConfiguration36.getMaxLevels();
        int int39 = crawlerConfiguration36.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = crawlerConfiguration36.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse46 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL3, 582, strMap40, "urls.txt", "hi!", (long) (short) 0, "AssetResponseCallable url:result.csv", 10L);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable48 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("CrawlerURL url:urls.txt", assetFetcher1, strMap40, "Unknown error");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.assets.AssetResponse assetResponse49 = assetResponseCallable48.call();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(uRI4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(crawlerConfiguration8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "urls.txt" + "'", str16, "urls.txt");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str25, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "com.soulgalore.crawler.auth" + "'", str28, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(crawlerConfiguration36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(strMap40);
    }

    @Test
    public void test09284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09284");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        java.lang.String str20 = hTMLPageResponse18.getHeaderValue("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = hTMLPageResponse18.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = hTMLPageResponse18.getPageUrl();
        java.lang.String str23 = crawlerURL22.toString();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse28 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int29 = assetResponse28.getResponseCode();
        int int30 = assetResponse28.getResponseCode();
        int int31 = assetResponse28.getResponseCode();
        java.lang.String str32 = assetResponse28.getUrl();
        long long33 = assetResponse28.getFetchTime();
        long long34 = assetResponse28.getFetchTime();
        int int35 = assetResponse28.getResponseCode();
        boolean boolean36 = crawlerURL22.equals((java.lang.Object) assetResponse28);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(crawlerURL21);
        org.junit.Assert.assertNotNull(crawlerURL22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str23, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test09285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09285");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder4.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration6 = builder4.build();
        java.lang.String str7 = crawlerConfiguration6.getNotOnPath();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher9 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder10.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration17 = builder10.build();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = crawlerConfiguration17.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable20 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("com.soulgalore.crawler.auth", assetFetcher9, strMap18, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        boolean boolean21 = crawlerConfiguration6.equals((java.lang.Object) assetResponseCallable20);
        java.lang.String str22 = assetResponseCallable20.toString();
        java.lang.Class<?> wildcardClass23 = assetResponseCallable20.getClass();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertNotNull(crawlerConfiguration6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "errorassets.csv" + "'", str7, "errorassets.csv");
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(crawlerConfiguration17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AssetResponseCallable url:com.soulgalore.crawler.auth" + "'", str22, "AssetResponseCallable url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test09286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09286");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        org.jsoup.nodes.Document document13 = hTMLPageResponse12.getBody();
        org.jsoup.nodes.Document document14 = hTMLPageResponse12.getBody();
        com.soulgalore.crawler.util.StatusCode statusCode15 = com.soulgalore.crawler.util.StatusCode.SC_MALFORMED_URI;
        boolean boolean16 = hTMLPageResponse12.equals((java.lang.Object) statusCode15);
        int int17 = hTMLPageResponse12.getResponseCode();
        org.jsoup.nodes.Document document18 = hTMLPageResponse12.getBody();
        org.jsoup.nodes.Document document19 = hTMLPageResponse12.getBody();
        java.lang.String str20 = hTMLPageResponse12.toString();
        java.lang.String str21 = hTMLPageResponse12.getResponseType();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL23 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI24 = crawlerURL23.getUri();
        boolean boolean25 = crawlerURL23.isWrongSyntax();
        java.lang.String str26 = crawlerURL23.getHost();
        java.net.URI uRI27 = crawlerURL23.getUri();
        java.net.URI uRI28 = crawlerURL23.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL32 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI33 = crawlerURL32.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = builder35.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration38 = builder37.build();
        java.lang.String str39 = crawlerConfiguration38.getStartUrl();
        int int40 = crawlerConfiguration38.getMaxLevels();
        int int41 = crawlerConfiguration38.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = crawlerConfiguration38.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse48 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL32, (int) (short) 10, strMap42, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int49 = hTMLPageResponse48.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = hTMLPageResponse48.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse56 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL23, 0, strMap50, "CrawlerURL url:result.csv", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) 583, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (byte) 1);
        java.lang.String str57 = hTMLPageResponse56.getUrl();
        int int58 = hTMLPageResponse56.getResponseCode();
        int int59 = hTMLPageResponse56.getResponseCode();
        java.lang.String str60 = hTMLPageResponse56.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL61 = hTMLPageResponse56.getPageUrl();
        int int62 = hTMLPageResponse56.getResponseCode();
        int int63 = hTMLPageResponse56.getResponseCode();
        boolean boolean64 = hTMLPageResponse12.equals((java.lang.Object) hTMLPageResponse56);
        java.lang.String str65 = hTMLPageResponse12.toString();
        java.lang.String str66 = hTMLPageResponse12.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNull(document13);
        org.junit.Assert.assertNull(document14);
        org.junit.Assert.assertTrue("'" + statusCode15 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_MALFORMED_URI + "'", statusCode15.equals(com.soulgalore.crawler.util.StatusCode.SC_MALFORMED_URI));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 97 + "'", int17 == 97);
        org.junit.Assert.assertNull(document18);
        org.junit.Assert.assertNull(document19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str20, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(uRI24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(uRI27);
        org.junit.Assert.assertNull(uRI28);
        org.junit.Assert.assertNull(uRI33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(crawlerConfiguration38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 10 + "'", int49 == 10);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str57, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str60, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        org.junit.Assert.assertNotNull(crawlerURL61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str65, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str66, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
    }

    @Test
    public void test09287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09287");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        boolean boolean9 = assetResponse4.equals((java.lang.Object) 0.0d);
        java.lang.String str10 = assetResponse4.getReferer();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse15 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int16 = assetResponse15.getResponseCode();
        long long17 = assetResponse15.getFetchTime();
        java.lang.String str18 = assetResponse15.getUrl();
        java.lang.String str19 = assetResponse15.getReferer();
        boolean boolean20 = assetResponse4.equals((java.lang.Object) str19);
        long long21 = assetResponse4.getFetchTime();
        int int22 = assetResponse4.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL25 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean26 = crawlerURL25.isWrongSyntax();
        java.lang.String str27 = crawlerURL25.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse35 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL25, (int) 'a', strMap29, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int36 = hTMLPageResponse35.getResponseCode();
        java.lang.String str37 = hTMLPageResponse35.getResponseType();
        java.lang.String str38 = hTMLPageResponse35.toString();
        java.lang.String str39 = hTMLPageResponse35.getUrl();
        java.lang.String str40 = hTMLPageResponse35.toString();
        boolean boolean41 = assetResponse4.equals((java.lang.Object) str40);
        java.lang.String str42 = assetResponse4.getUrl();
        java.lang.String str43 = assetResponse4.getReferer();
        java.lang.String str44 = assetResponse4.getUrl();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "100" + "'", str10, "100");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "100" + "'", str19, "100");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "urls.txt" + "'", str27, "urls.txt");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 97 + "'", int36 == 97);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str38, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "com.soulgalore.crawler.auth" + "'", str39, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str40, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "100" + "'", str43, "100");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
    }

    @Test
    public void test09288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09288");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str7 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str8 = crawlerConfiguration5.getStartUrl();
        boolean boolean9 = crawlerConfiguration5.isVerifyUrls();
        int int10 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("errorassets.csv");
        boolean boolean13 = crawlerConfiguration5.equals((java.lang.Object) crawlerURL12);
        int int14 = crawlerConfiguration5.getMaxLevels();
        int int15 = crawlerConfiguration5.getMaxLevels();
        boolean boolean16 = crawlerConfiguration5.isVerifyUrls();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test09289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09289");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setMaxLevels(10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder8.setOnlyOnPath("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setOnlyOnPath("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder20.setMaxLevels(1);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test09290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09290");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.lang.String str30 = crawlerURL2.getUrl();
        java.lang.String str31 = crawlerURL2.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL34 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean35 = crawlerURL34.isWrongSyntax();
        java.lang.String str36 = crawlerURL34.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse44 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL34, (int) 'a', strMap38, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str45 = hTMLPageResponse44.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = hTMLPageResponse44.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL47 = hTMLPageResponse44.getPageUrl();
        org.jsoup.nodes.Document document48 = hTMLPageResponse44.getBody();
        java.lang.String str49 = hTMLPageResponse44.getUrl();
        java.lang.String str50 = hTMLPageResponse44.toString();
        long long51 = hTMLPageResponse44.getFetchTime();
        boolean boolean52 = crawlerURL2.equals((java.lang.Object) long51);
        java.lang.String str53 = crawlerURL2.getUrl();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "com.soulgalore.crawler.auth" + "'", str30, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str31, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "urls.txt" + "'", str36, "urls.txt");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str45, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(crawlerURL47);
        org.junit.Assert.assertNull(document48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "com.soulgalore.crawler.auth" + "'", str49, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str50, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 100L + "'", long51 == 100L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "com.soulgalore.crawler.auth" + "'", str53, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test09291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09291");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder4.setOnlyOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setOnlyOnPath("Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setOnlyOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration17 = builder12.build();
        java.lang.String str18 = crawlerConfiguration17.getOnlyOnPath();
        java.lang.String str19 = crawlerConfiguration17.getOnlyOnPath();
        java.lang.String str20 = crawlerConfiguration17.getStartUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(crawlerConfiguration17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test09292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09292");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:32encoding:hi! type:97", "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
    }

    @Test
    public void test09293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09293");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getNotOnPath();
        int int7 = crawlerConfiguration5.getMaxLevels();
        boolean boolean8 = crawlerConfiguration5.isVerifyUrls();
        java.lang.String str9 = crawlerConfiguration5.getRequestHeaders();
        int int10 = crawlerConfiguration5.getMaxLevels();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test09294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09294");
        com.soulgalore.crawler.util.HeaderUtil headerUtil0 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = headerUtil0.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap4 = headerUtil0.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil0.createHeadersFromString("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = headerUtil0.createHeadersFromString("AssetResponseCallable url:hi!");
        org.junit.Assert.assertNotNull(headerUtil0);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
    }

    @Test
    public void test09295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09295");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray20 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL19 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet21 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet21, crawlerURLArray20);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet23 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray24 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet25 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet25, hTMLPageResponseArray24);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult27 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet21, hTMLPageResponseSet23, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet25);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet28 = crawlerResult27.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet29 = crawlerResult27.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet30 = crawlerResult27.getUrls();
        java.lang.String str31 = crawlerResult27.getTheStartPoint();
        java.lang.String str32 = crawlerResult27.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet33 = crawlerResult27.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet34 = crawlerResult27.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray40 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL39 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, crawlerURLArray40);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray44 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet45 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45, hTMLPageResponseArray44);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult47 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, hTMLPageResponseSet43, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet48 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet49 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet50 = crawlerResult47.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet51 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet52 = crawlerResult47.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet53 = crawlerResult47.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL57 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray58 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL57 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet59 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet59, crawlerURLArray58);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet61 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray62 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet63 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet63, hTMLPageResponseArray62);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult65 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet59, hTMLPageResponseSet61, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet63);
        java.lang.String str66 = crawlerResult65.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet67 = crawlerResult65.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet68 = crawlerResult65.getNonWorkingUrls();
        java.lang.String str69 = crawlerResult65.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet70 = crawlerResult65.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL74 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray75 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL74 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet76 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet76, crawlerURLArray75);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet78 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray79 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet80 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet80, hTMLPageResponseArray79);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult82 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet76, hTMLPageResponseSet78, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet80);
        java.lang.String str83 = crawlerResult82.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet84 = crawlerResult82.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet85 = crawlerResult82.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult86 = new com.soulgalore.crawler.core.CrawlerResult("CrawlerURL url:urls.txt", crawlerURLSet53, hTMLPageResponseSet70, hTMLPageResponseSet85);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult87 = new com.soulgalore.crawler.core.CrawlerResult("32", crawlerURLSet15, hTMLPageResponseSet34, hTMLPageResponseSet70);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet88 = crawlerResult87.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet89 = crawlerResult87.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet90 = crawlerResult87.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet91 = crawlerResult87.getVerifiedURLResponses();
        java.lang.String str92 = crawlerResult87.getTheStartPoint();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(crawlerURLArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet28);
        org.junit.Assert.assertNotNull(crawlerURLSet29);
        org.junit.Assert.assertNotNull(crawlerURLSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet33);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet34);
        org.junit.Assert.assertNotNull(crawlerURLArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet48);
        org.junit.Assert.assertNotNull(crawlerURLSet49);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet50);
        org.junit.Assert.assertNotNull(crawlerURLSet51);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet52);
        org.junit.Assert.assertNotNull(crawlerURLSet53);
        org.junit.Assert.assertNotNull(crawlerURLArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet67);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet70);
        org.junit.Assert.assertNotNull(crawlerURLArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet84);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet85);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet88);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet89);
        org.junit.Assert.assertNotNull(crawlerURLSet90);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "32" + "'", str92, "32");
    }

    @Test
    public void test09296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09296");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean6 = crawlerURL5.isWrongSyntax();
        java.lang.String str7 = crawlerURL5.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse15 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) 'a', strMap9, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str16 = hTMLPageResponse15.getUrl();
        boolean boolean17 = crawlerURL1.equals((java.lang.Object) str16);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher20 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil21 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = headerUtil21.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable25 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher20, strMap23, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse31 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) 100, strMap23, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        org.jsoup.nodes.Document document32 = hTMLPageResponse31.getBody();
        int int33 = hTMLPageResponse31.getResponseCode();
        long long34 = hTMLPageResponse31.getFetchTime();
        java.lang.String str35 = hTMLPageResponse31.getResponseType();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "urls.txt" + "'", str7, "urls.txt");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(headerUtil21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(document32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 100L + "'", long34 == 100L);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "errorurls.txt" + "'", str35, "errorurls.txt");
    }

    @Test
    public void test09297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09297");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.util.Map<java.lang.String, java.lang.String> strMap30 = hTMLPageResponse29.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean34 = crawlerURL33.isWrongSyntax();
        java.lang.String str35 = crawlerURL33.getReferer();
        java.lang.String str36 = crawlerURL33.getHost();
        java.lang.String str37 = crawlerURL33.getUrl();
        boolean boolean38 = hTMLPageResponse29.equals((java.lang.Object) crawlerURL33);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = hTMLPageResponse29.getResponseHeaders();
        org.jsoup.nodes.Document document40 = hTMLPageResponse29.getBody();
        java.lang.String str41 = hTMLPageResponse29.getResponseType();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "urls.txt" + "'", str35, "urls.txt");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "com.soulgalore.crawler.auth" + "'", str37, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(document40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1" + "'", str41, "-1");
    }

    @Test
    public void test09298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09298");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder14.setMaxLevels((int) (byte) -1);
        java.lang.Class<?> wildcardClass18 = builder17.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test09299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09299");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher3 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder6.build();
        java.lang.String str8 = crawlerConfiguration7.getStartUrl();
        int int9 = crawlerConfiguration7.getMaxLevels();
        int int10 = crawlerConfiguration7.getMaxLevels();
        java.lang.String str11 = crawlerConfiguration7.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration7.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable14 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("-1", assetFetcher3, strMap12, "");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable16 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:AssetResponseCallable url:com.soulgalore.crawler.auth", assetFetcher1, strMap12, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:581encoding:AssetResponseCallable url:result.csv type:CrawlerURL url:CrawlerURL url:errorassets.csv");
        java.lang.String str17 = assetResponseCallable16.toString();
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:com.soulgalore.crawler.auth" + "'", str17, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:com.soulgalore.crawler.auth");
    }

    @Test
    public void test09300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09300");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str7 = crawlerConfiguration5.getRequestHeaders();
        boolean boolean9 = crawlerConfiguration5.equals((java.lang.Object) 0.0d);
        java.lang.String str10 = crawlerConfiguration5.getOnlyOnPath();
        int int11 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray12 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13, assetResponseArray12);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray15 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet16 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet16, assetResponseArray15);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult18 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet16);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet19 = assetsVerificationResult18.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = assetsVerificationResult18.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray21 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, assetResponseArray21);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray24 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25, assetResponseArray24);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult27 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult28 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet20, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray29 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet30 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30, assetResponseArray29);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray32 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet33 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33, assetResponseArray32);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult35 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet36 = assetsVerificationResult35.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult37 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet20, assetResponseSet36);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet38 = assetsVerificationResult37.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet39 = assetsVerificationResult37.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = assetsVerificationResult37.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet41 = assetsVerificationResult37.getNonWorkingAssets();
        boolean boolean42 = crawlerConfiguration5.equals((java.lang.Object) assetResponseSet41);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray43 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet44 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet44, assetResponseArray43);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray46 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet47 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet47, assetResponseArray46);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult49 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet44, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet47);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet50 = assetsVerificationResult49.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet51 = assetsVerificationResult49.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult52 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet41, assetResponseSet51);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet53 = assetsVerificationResult52.getNonWorkingAssets();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(assetResponseArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(assetResponseArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(assetResponseSet19);
        org.junit.Assert.assertNotNull(assetResponseSet20);
        org.junit.Assert.assertNotNull(assetResponseArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(assetResponseArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(assetResponseArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(assetResponseArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(assetResponseSet36);
        org.junit.Assert.assertNotNull(assetResponseSet38);
        org.junit.Assert.assertNotNull(assetResponseSet39);
        org.junit.Assert.assertNotNull(assetResponseSet40);
        org.junit.Assert.assertNotNull(assetResponseSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(assetResponseArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(assetResponseArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(assetResponseSet50);
        org.junit.Assert.assertNotNull(assetResponseSet51);
        org.junit.Assert.assertNotNull(assetResponseSet53);
    }

    @Test
    public void test09301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09301");
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet0 = null;
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray1 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet2 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet2, assetResponseArray1);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray4 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet5, assetResponseArray4);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult7 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet2, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet5);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult7.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray9 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, assetResponseArray9);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray12 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13, assetResponseArray12);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult15 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult16 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet8, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult17 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet0, assetResponseSet8);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = assetsVerificationResult17.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet19 = assetsVerificationResult17.getWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(assetResponseArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(assetResponseArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(assetResponseSet18);
        org.junit.Assert.assertNull(assetResponseSet19);
    }

    @Test
    public void test09302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09302");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = null;
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray11 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, assetResponseArray11);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray14 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet15 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15, assetResponseArray14);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult17 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = assetsVerificationResult17.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray19 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet20, assetResponseArray19);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray22 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet23 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23, assetResponseArray22);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult25 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet20, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult26 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet18, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult27 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet10, assetResponseSet18);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult28 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet9, assetResponseSet18);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = null;
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult30 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet18, assetResponseSet29);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray31 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet32 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32, assetResponseArray31);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray34 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet35 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet35, assetResponseArray34);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult37 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet35);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet38 = assetsVerificationResult37.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet39 = assetsVerificationResult37.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = assetsVerificationResult37.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult41 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet29, assetResponseSet40);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet42 = assetsVerificationResult41.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet43 = assetsVerificationResult41.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet44 = assetsVerificationResult41.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet45 = assetsVerificationResult41.getNonWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseSet9);
        org.junit.Assert.assertNotNull(assetResponseArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(assetResponseArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(assetResponseSet18);
        org.junit.Assert.assertNotNull(assetResponseArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(assetResponseArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(assetResponseArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(assetResponseArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(assetResponseSet38);
        org.junit.Assert.assertNotNull(assetResponseSet39);
        org.junit.Assert.assertNotNull(assetResponseSet40);
        org.junit.Assert.assertNotNull(assetResponseSet42);
        org.junit.Assert.assertNull(assetResponseSet43);
        org.junit.Assert.assertNull(assetResponseSet44);
        org.junit.Assert.assertNotNull(assetResponseSet45);
    }

    @Test
    public void test09303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09303");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean14 = assetResponse4.equals((java.lang.Object) 100L);
        java.lang.String str15 = assetResponse4.getReferer();
        java.lang.String str16 = assetResponse4.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder17.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder23.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder29.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder29.setVerifyUrls(false);
        boolean boolean34 = assetResponse4.equals((java.lang.Object) builder29);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder29.setStartUrl("HTMLPageResponseurl:CrawlerURL url:com.soulgalore.crawler.authresponseCode:0encoding:CrawlerURL url:result.csv type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder29.setOnlyOnPath("10");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder29.setMaxLevels((int) ' ');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder40.setNotOnPath("AssetResponseCallable url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100" + "'", str15, "100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "100" + "'", str16, "100");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
    }

    @Test
    public void test09304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09304");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        com.soulgalore.crawler.util.StatusCode statusCode6 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN;
        boolean boolean7 = crawlerConfiguration3.equals((java.lang.Object) statusCode6);
        int int8 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str9 = crawlerConfiguration3.getNotOnPath();
        boolean boolean10 = crawlerConfiguration3.isVerifyUrls();
        java.lang.String str11 = crawlerConfiguration3.getStartUrl();
        boolean boolean12 = crawlerConfiguration3.isVerifyUrls();
        int int13 = crawlerConfiguration3.getMaxLevels();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + statusCode6 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN + "'", statusCode6.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test09305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09305");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("CrawlerURL url:com.soulgalore.crawler.auth", "hi!", 0, (long) '#');
        java.lang.String str5 = assetResponse4.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("result.csv");
        java.lang.String str8 = crawlerURL7.getUrl();
        boolean boolean9 = assetResponse4.equals((java.lang.Object) crawlerURL7);
        java.lang.String str10 = crawlerURL7.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str5, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "result.csv" + "'", str8, "result.csv");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "CrawlerURL url:result.csv" + "'", str10, "CrawlerURL url:result.csv");
    }

    @Test
    public void test09306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09306");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url type:AssetResponseCallable url:CrawlerURL url:10", "35");
        java.lang.String str3 = crawlerURL2.getHost();
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test09307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09307");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setMaxLevels((int) '4');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setMaxLevels(583);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setMaxLevels((int) (byte) -1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
    }

    @Test
    public void test09308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09308");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean9 = crawlerURL8.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder11.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration16 = builder11.build();
        java.lang.String str17 = crawlerConfiguration16.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = crawlerConfiguration16.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse24 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, (-1), strMap18, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int25 = hTMLPageResponse24.getResponseCode();
        long long26 = hTMLPageResponse24.getFetchTime();
        long long27 = hTMLPageResponse24.getFetchTime();
        boolean boolean28 = crawlerConfiguration3.equals((java.lang.Object) hTMLPageResponse24);
        java.lang.String str29 = crawlerConfiguration3.getNotOnPath();
        boolean boolean30 = crawlerConfiguration3.isVerifyUrls();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(crawlerConfiguration16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 580L + "'", long26 == 580L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 580L + "'", long27 == 580L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test09309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09309");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setOnlyOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder0.setRequestHeaders("AssetResponseCallable url:AssetResponseCallable url:97");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder0.setOnlyOnPath("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder0.build();
        int int12 = crawlerConfiguration11.getMaxLevels();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test09310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09310");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray9 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, assetResponseArray9);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray12 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13, assetResponseArray12);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult15 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult16 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet8, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray17 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, assetResponseArray17);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray20 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet21 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21, assetResponseArray20);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult23 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet24 = assetsVerificationResult23.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult25 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet8, assetResponseSet24);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = assetsVerificationResult25.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet27 = assetsVerificationResult25.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray28 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, assetResponseArray28);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray31 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet32 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32, assetResponseArray31);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult34 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet35 = assetsVerificationResult34.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray36 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet37 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37, assetResponseArray36);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray39 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40, assetResponseArray39);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult42 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult43 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet35, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet44 = assetsVerificationResult43.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet45 = assetsVerificationResult43.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray46 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet47 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet47, assetResponseArray46);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray49 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet50 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet50, assetResponseArray49);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult52 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet47, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet50);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet53 = assetsVerificationResult52.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult54 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet45, assetResponseSet53);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult55 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet27, assetResponseSet45);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet56 = assetsVerificationResult55.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet57 = assetsVerificationResult55.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet58 = assetsVerificationResult55.getNonWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(assetResponseArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(assetResponseArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(assetResponseArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(assetResponseSet24);
        org.junit.Assert.assertNotNull(assetResponseSet26);
        org.junit.Assert.assertNotNull(assetResponseSet27);
        org.junit.Assert.assertNotNull(assetResponseArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(assetResponseArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(assetResponseSet35);
        org.junit.Assert.assertNotNull(assetResponseArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(assetResponseArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(assetResponseSet44);
        org.junit.Assert.assertNotNull(assetResponseSet45);
        org.junit.Assert.assertNotNull(assetResponseArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(assetResponseArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(assetResponseSet53);
        org.junit.Assert.assertNotNull(assetResponseSet56);
        org.junit.Assert.assertNotNull(assetResponseSet57);
        org.junit.Assert.assertNotNull(assetResponseSet58);
    }

    @Test
    public void test09311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09311");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration3.getRequestHeadersMap();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray12 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL11 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet13, crawlerURLArray12);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray16 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet17, hTMLPageResponseArray16);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult19 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet13, hTMLPageResponseSet15, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet17);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet20 = crawlerResult19.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet21 = crawlerResult19.getUrls();
        boolean boolean22 = crawlerConfiguration3.equals((java.lang.Object) crawlerURLSet21);
        java.lang.String str23 = crawlerConfiguration3.getRequestHeaders();
        int int24 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str25 = crawlerConfiguration3.getOnlyOnPath();
        java.lang.String str26 = crawlerConfiguration3.getStartUrl();
        java.lang.String str27 = crawlerConfiguration3.getStartUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(crawlerURLArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet20);
        org.junit.Assert.assertNotNull(crawlerURLSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test09312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09312");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        long long14 = hTMLPageResponse12.getFetchTime();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:hi!");
        boolean boolean19 = hTMLPageResponse12.equals((java.lang.Object) crawlerURL18);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder20.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder20.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder20.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder26.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder26.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder30.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder34.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder36.setMaxLevels((int) '#');
        boolean boolean39 = crawlerURL18.equals((java.lang.Object) builder38);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder41 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder43 = builder41.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder45 = builder41.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration46 = builder41.build();
        java.lang.String str47 = crawlerConfiguration46.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = crawlerConfiguration46.getRequestHeadersMap();
        java.lang.String str49 = crawlerConfiguration46.getNotOnPath();
        java.lang.String str50 = crawlerConfiguration46.getNotOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap51 = crawlerConfiguration46.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse57 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL18, 97, strMap51, "HTMLPageResponseurl:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:responseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth type:CrawlerURL url:Response timed out", "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 52, "HTMLPageResponseurl:hi!responseCode:10encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", 583L);
        java.lang.String str58 = hTMLPageResponse57.getUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 100L + "'", long14 == 100L);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(crawlerConfiguration46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "CrawlerURL url:hi!" + "'", str58, "CrawlerURL url:hi!");
    }

    @Test
    public void test09313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09313");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("CrawlerURL url:AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:", (int) (short) 10, (long) 583);
    }

    @Test
    public void test09314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09314");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setStartUrl("CrawlerURL url:urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setOnlyOnPath("HTMLPageResponseurl:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:responseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth type:CrawlerURL url:Response timed out");
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
    }

    @Test
    public void test09315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09315");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads type:-1");
        java.lang.Class<?> wildcardClass2 = crawlerURL1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test09316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09316");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        java.lang.String str15 = hTMLPageResponse12.toString();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        java.lang.String str17 = hTMLPageResponse12.getResponseType();
        org.jsoup.nodes.Document document18 = hTMLPageResponse12.getBody();
        org.jsoup.nodes.Document document19 = hTMLPageResponse12.getBody();
        org.jsoup.nodes.Document document20 = hTMLPageResponse12.getBody();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = hTMLPageResponse12.getHeaderValue("AssetResponseCallable url:com.soulgalore.crawler.auth");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str15, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(document18);
        org.junit.Assert.assertNull(document19);
        org.junit.Assert.assertNull(document20);
    }

    @Test
    public void test09317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09317");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("CrawlerURL url:100", "CrawlerURL url:Response timed out", 582, (long) (short) -1);
        java.lang.String str5 = assetResponse4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CrawlerURL url:100" + "'", str5, "CrawlerURL url:100");
    }

    @Test
    public void test09318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09318");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        long long15 = hTMLPageResponse12.getFetchTime();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        java.lang.String str17 = hTMLPageResponse12.getUrl();
        java.lang.String str18 = hTMLPageResponse12.getEncoding();
        long long19 = hTMLPageResponse12.getFetchTime();
        java.lang.String str20 = hTMLPageResponse12.toString();
        java.lang.String str21 = hTMLPageResponse12.toString();
        long long22 = hTMLPageResponse12.getFetchTime();
        org.jsoup.nodes.Document document23 = hTMLPageResponse12.getBody();
        java.lang.String str24 = hTMLPageResponse12.toString();
        java.lang.String str25 = hTMLPageResponse12.getResponseType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 100L + "'", long15 == 100L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "com.soulgalore.crawler.auth" + "'", str17, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str18, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 100L + "'", long19 == 100L);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str20, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str21, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 100L + "'", long22 == 100L);
        org.junit.Assert.assertNull(document23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str24, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test09319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09319");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = hTMLPageResponse12.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        java.lang.String str18 = crawlerURL17.getReferer();
        java.net.URI uRI19 = crawlerURL17.getUri();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "urls.txt" + "'", str18, "urls.txt");
        org.junit.Assert.assertNull(uRI19);
    }

    @Test
    public void test09320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09320");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.lang.String str5 = crawlerURL2.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder9.build();
        java.lang.String str11 = crawlerConfiguration10.getStartUrl();
        int int12 = crawlerConfiguration10.getMaxLevels();
        int int13 = crawlerConfiguration10.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse20 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) -1, strMap14, "100", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) (short) -1, "com.soulgalore.crawler.nrofhttpthreads", 0L);
        java.lang.String str22 = hTMLPageResponse20.getHeaderValue("-1");
        java.lang.String str24 = hTMLPageResponse20.getHeaderValue("");
        java.lang.String str25 = hTMLPageResponse20.getResponseType();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL26 = hTMLPageResponse20.getPageUrl();
        java.lang.String str27 = crawlerURL26.getHost();
        boolean boolean28 = crawlerURL26.isWrongSyntax();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "urls.txt" + "'", str5, "urls.txt");
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str25, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(crawlerURL26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test09321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09321");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", "Wrong content type", (int) '#', 583L);
        java.lang.String str5 = assetResponse4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str5, "AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
    }

    @Test
    public void test09322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09322");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:com.soulgalore.crawler.nrofhttpthreads", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
        java.lang.String str3 = crawlerURL2.getHost();
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test09323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09323");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setOnlyOnPath("result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setOnlyOnPath("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder8.build();
        java.lang.String str12 = crawlerConfiguration11.getRequestHeaders();
        java.lang.String str13 = crawlerConfiguration11.getRequestHeaders();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test09324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09324");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean6 = crawlerURL5.isWrongSyntax();
        java.lang.String str7 = crawlerURL5.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse15 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) 'a', strMap9, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str16 = hTMLPageResponse15.getUrl();
        boolean boolean17 = crawlerURL1.equals((java.lang.Object) str16);
        boolean boolean18 = crawlerURL1.isWrongSyntax();
        java.lang.String str19 = crawlerURL1.getHost();
        java.lang.String str20 = crawlerURL1.getReferer();
        boolean boolean21 = crawlerURL1.isWrongSyntax();
        java.lang.String str22 = crawlerURL1.getHost();
        java.lang.String str23 = crawlerURL1.toString();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "urls.txt" + "'", str7, "urls.txt");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str23, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
    }

    @Test
    public void test09325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09325");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str7 = crawlerConfiguration5.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = crawlerConfiguration5.getRequestHeadersMap();
        java.lang.String str9 = crawlerConfiguration5.getStartUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test09326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09326");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = assetsVerificationResult6.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray11 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, assetResponseArray11);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray14 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet15 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15, assetResponseArray14);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult17 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = assetsVerificationResult17.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult19 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet10, assetResponseSet18);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = assetsVerificationResult19.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet21 = assetsVerificationResult19.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = assetsVerificationResult19.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray23 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet24, assetResponseArray23);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray26 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet27 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet27, assetResponseArray26);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult29 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet24, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet27);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet30 = assetsVerificationResult29.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet31 = assetsVerificationResult29.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray32 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet33 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33, assetResponseArray32);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray35 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet36 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet36, assetResponseArray35);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult38 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet36);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult39 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet31, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray40 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet41, assetResponseArray40);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray43 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet44 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet44, assetResponseArray43);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult46 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet41, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet44);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet47 = assetsVerificationResult46.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult48 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet31, assetResponseSet47);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet49 = assetsVerificationResult48.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet50 = assetsVerificationResult48.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray51 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet52 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet52, assetResponseArray51);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray54 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet55 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet55, assetResponseArray54);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult57 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet52, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet55);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet58 = assetsVerificationResult57.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray59 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet60 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet60, assetResponseArray59);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray62 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet63 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet63, assetResponseArray62);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult65 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet60, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet63);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult66 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet58, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet63);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet67 = assetsVerificationResult66.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet68 = assetsVerificationResult66.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray69 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet70 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet70, assetResponseArray69);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray72 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet73 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet73, assetResponseArray72);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult75 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet70, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet73);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet76 = assetsVerificationResult75.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult77 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet68, assetResponseSet76);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult78 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet50, assetResponseSet68);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet79 = assetsVerificationResult78.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult80 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet22, assetResponseSet79);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet81 = assetsVerificationResult80.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet82 = assetsVerificationResult80.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet83 = assetsVerificationResult80.getNonWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseSet9);
        org.junit.Assert.assertNotNull(assetResponseSet10);
        org.junit.Assert.assertNotNull(assetResponseArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(assetResponseArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(assetResponseSet18);
        org.junit.Assert.assertNotNull(assetResponseSet20);
        org.junit.Assert.assertNotNull(assetResponseSet21);
        org.junit.Assert.assertNotNull(assetResponseSet22);
        org.junit.Assert.assertNotNull(assetResponseArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(assetResponseArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(assetResponseSet30);
        org.junit.Assert.assertNotNull(assetResponseSet31);
        org.junit.Assert.assertNotNull(assetResponseArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(assetResponseArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(assetResponseArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(assetResponseArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(assetResponseSet47);
        org.junit.Assert.assertNotNull(assetResponseSet49);
        org.junit.Assert.assertNotNull(assetResponseSet50);
        org.junit.Assert.assertNotNull(assetResponseArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(assetResponseArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(assetResponseSet58);
        org.junit.Assert.assertNotNull(assetResponseArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(assetResponseArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(assetResponseSet67);
        org.junit.Assert.assertNotNull(assetResponseSet68);
        org.junit.Assert.assertNotNull(assetResponseArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(assetResponseArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(assetResponseSet76);
        org.junit.Assert.assertNotNull(assetResponseSet79);
        org.junit.Assert.assertNotNull(assetResponseSet81);
        org.junit.Assert.assertNotNull(assetResponseSet82);
        org.junit.Assert.assertNotNull(assetResponseSet83);
    }

    @Test
    public void test09327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09327");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:com.soulgalore.crawler.auth", "com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher5 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI9 = crawlerURL8.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration14 = builder13.build();
        java.lang.String str15 = crawlerConfiguration14.getStartUrl();
        int int16 = crawlerConfiguration14.getMaxLevels();
        int int17 = crawlerConfiguration14.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = crawlerConfiguration14.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse24 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, (int) (short) 10, strMap18, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable26 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("100", assetFetcher5, strMap18, "errorassets.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse32 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) 0, strMap18, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout", "CrawlerURL url:result.csv", (long) (short) 10, "-1", (long) 97);
        java.lang.String str33 = crawlerURL2.getUrl();
        java.lang.String str34 = crawlerURL2.getUrl();
        java.lang.String str35 = crawlerURL2.getHost();
        boolean boolean36 = crawlerURL2.isWrongSyntax();
        org.junit.Assert.assertNull(uRI9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(crawlerConfiguration14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str33, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str34, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test09328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09328");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder13.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder13.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setVerifyUrls(false);
        boolean boolean26 = hTMLPageResponse12.equals((java.lang.Object) builder25);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder25.setOnlyOnPath("HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder28.setNotOnPath("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder28.setRequestHeaders("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setMaxLevels((int) (byte) 1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
    }

    @Test
    public void test09329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09329");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean9 = crawlerURL8.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder11.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration16 = builder11.build();
        java.lang.String str17 = crawlerConfiguration16.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = crawlerConfiguration16.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse24 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, (-1), strMap18, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int25 = hTMLPageResponse24.getResponseCode();
        long long26 = hTMLPageResponse24.getFetchTime();
        long long27 = hTMLPageResponse24.getFetchTime();
        boolean boolean28 = crawlerConfiguration3.equals((java.lang.Object) hTMLPageResponse24);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = hTMLPageResponse24.getPageUrl();
        java.lang.String str30 = crawlerURL29.getReferer();
        java.net.URI uRI31 = crawlerURL29.getUri();
        java.lang.String str32 = crawlerURL29.getUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(crawlerConfiguration16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 580L + "'", long26 == 580L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 580L + "'", long27 == 580L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(crawlerURL29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "urls.txt" + "'", str30, "urls.txt");
        org.junit.Assert.assertNull(uRI31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "com.soulgalore.crawler.auth" + "'", str32, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test09330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09330");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", "HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str4, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
    }

    @Test
    public void test09331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09331");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:AssetResponseCallable url:Unknown error", "");
        com.soulgalore.crawler.util.HeaderUtil headerUtil4 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil4.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = headerUtil4.createHeadersFromString("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil4.createHeadersFromString("CrawlerURL url:10");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil4.createHeadersFromString("AssetResponseCallable url:errorassets.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil4.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        java.util.Map<java.lang.String, java.lang.String> strMap16 = headerUtil4.createHeadersFromString("CrawlerURL url:Response timed out");
        java.util.Map<java.lang.String, java.lang.String> strMap18 = headerUtil4.createHeadersFromString("CrawlerURL url:100");
        java.util.Map<java.lang.String, java.lang.String> strMap20 = headerUtil4.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt");
        java.util.Map<java.lang.String, java.lang.String> strMap22 = headerUtil4.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Unknown error");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse28 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 582, strMap22, "AssetResponseCallable url:CrawlerURL url:-1", "AssetResponseCallable url:100", 52L, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth", (long) 52);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = hTMLPageResponse28.getResponseHeaders();
        org.junit.Assert.assertNotNull(headerUtil4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap29);
    }

    @Test
    public void test09332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09332");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL0 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher3 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration9 = builder4.build();
        int int10 = crawlerConfiguration9.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil11 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean12 = crawlerConfiguration9.equals((java.lang.Object) headerUtil11);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil11.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap16 = headerUtil11.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap18 = headerUtil11.createHeadersFromString("AssetResponseCallable url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap20 = headerUtil11.createHeadersFromString("CrawlerURL url:urls.txt");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable22 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", assetFetcher3, strMap20, "1");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse28 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL0, (int) (byte) 10, strMap20, "AssetResponseCallable url:52", "CrawlerURL url:CrawlerURL url:1", 580L, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:CrawlerURL url:1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain", (long) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(crawlerConfiguration9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(headerUtil11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test09333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09333");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        long long16 = hTMLPageResponse12.getFetchTime();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder17.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration24 = builder17.build();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = crawlerConfiguration24.getRequestHeadersMap();
        boolean boolean26 = hTMLPageResponse12.equals((java.lang.Object) crawlerConfiguration24);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL27 = hTMLPageResponse12.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = hTMLPageResponse12.getResponseHeaders();
        org.jsoup.nodes.Document document29 = hTMLPageResponse12.getBody();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = hTMLPageResponse12.getResponseHeaders();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = hTMLPageResponse12.getHeaderValue("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(crawlerConfiguration24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(crawlerURL27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(document29);
        org.junit.Assert.assertNull(strMap30);
    }

    @Test
    public void test09334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09334");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("Malformed url", "com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.util.HeaderUtil headerUtil6 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = headerUtil6.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse14 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL4, 583, strMap8, "Redirected to new domain", "result.csv", 0L, "result.csv", (long) (short) 100);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable16 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", assetFetcher1, strMap8, "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain");
        java.lang.String str17 = assetResponseCallable16.toString();
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.assets.AssetResponse assetResponse18 = assetResponseCallable16.call();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerUtil6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str17, "AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
    }

    @Test
    public void test09335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09335");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration5.getRequestHeadersMap();
        java.lang.String str8 = crawlerConfiguration5.getNotOnPath();
        int int9 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration13 = builder12.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder12.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder15.setMaxLevels((int) '4');
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration18 = builder17.build();
        boolean boolean19 = crawlerConfiguration5.equals((java.lang.Object) builder17);
        java.lang.String str20 = crawlerConfiguration5.getOnlyOnPath();
        java.lang.String str21 = crawlerConfiguration5.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = crawlerConfiguration5.getRequestHeadersMap();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(crawlerConfiguration13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(crawlerConfiguration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strMap22);
    }

    @Test
    public void test09336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09336");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        boolean boolean22 = hTMLPageResponse12.equals((java.lang.Object) builder21);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder21.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder21.setMaxLevels((int) (short) 10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder21.setOnlyOnPath("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder28.setStartUrl("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration31 = builder30.build();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(crawlerConfiguration31);
    }

    @Test
    public void test09337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09337");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setOnlyOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder12.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder20.setMaxLevels((int) ' ');
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration23 = builder22.build();
        com.soulgalore.crawler.util.StatusCode statusCode24 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT;
        int int25 = statusCode24.getCode();
        int int26 = statusCode24.getCode();
        int int27 = statusCode24.getCode();
        java.lang.String str28 = statusCode24.getFriendlyName();
        boolean boolean29 = crawlerConfiguration23.equals((java.lang.Object) statusCode24);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(crawlerConfiguration23);
        org.junit.Assert.assertTrue("'" + statusCode24 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT + "'", statusCode24.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 580 + "'", int25 == 580);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 580 + "'", int26 == 580);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 580 + "'", int27 == 580);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Response timed out" + "'", str28, "Response timed out");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test09338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09338");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.proxy type:AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
    }

    @Test
    public void test09339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09339");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", "AssetResponseCallable url:com.soulgalore.crawler.nrofhttpthreads");
        java.lang.String str3 = crawlerURL2.getHost();
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test09340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09340");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads", "100", (int) (byte) 10, (long) 580);
        java.lang.String str5 = assetResponse4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads" + "'", str5, "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
    }

    @Test
    public void test09341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09341");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", "AssetResponseCallable url:-1", (int) (byte) 10, (long) 308);
        int int5 = assetResponse4.getResponseCode();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
    }

    @Test
    public void test09342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09342");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.util.Map<java.lang.String, java.lang.String> strMap30 = hTMLPageResponse29.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean34 = crawlerURL33.isWrongSyntax();
        java.lang.String str35 = crawlerURL33.getReferer();
        java.lang.String str36 = crawlerURL33.getHost();
        java.lang.String str37 = crawlerURL33.getUrl();
        boolean boolean38 = hTMLPageResponse29.equals((java.lang.Object) crawlerURL33);
        java.lang.String str39 = hTMLPageResponse29.getUrl();
        java.lang.String str40 = hTMLPageResponse29.getUrl();
        org.jsoup.nodes.Document document41 = hTMLPageResponse29.getBody();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = hTMLPageResponse29.getResponseHeaders();
        org.jsoup.nodes.Document document43 = hTMLPageResponse29.getBody();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder44 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder46 = builder44.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration47 = builder46.build();
        java.lang.String str48 = crawlerConfiguration47.getStartUrl();
        java.lang.String str49 = crawlerConfiguration47.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = crawlerConfiguration47.getRequestHeadersMap();
        boolean boolean51 = hTMLPageResponse29.equals((java.lang.Object) strMap50);
        java.lang.String str52 = hTMLPageResponse29.getEncoding();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "urls.txt" + "'", str35, "urls.txt");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "com.soulgalore.crawler.auth" + "'", str37, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "com.soulgalore.crawler.auth" + "'", str39, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "com.soulgalore.crawler.auth" + "'", str40, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(document43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(crawlerConfiguration47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Malformed url" + "'", str52, "Malformed url");
    }

    @Test
    public void test09343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09343");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        java.lang.String str2 = crawlerURL1.getUrl();
        boolean boolean3 = crawlerURL1.isWrongSyntax();
        java.lang.String str4 = crawlerURL1.getUrl();
        java.lang.String str5 = crawlerURL1.getHost();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI8 = crawlerURL7.getUri();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse16 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (int) ' ', strMap10, "AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout", "hi!", (long) (short) 10, "97", (long) (short) 10);
        boolean boolean17 = crawlerURL1.equals((java.lang.Object) "AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "com.soulgalore.crawler.auth");
        java.lang.String str22 = crawlerURL21.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder24.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration27 = builder26.build();
        java.lang.String str28 = crawlerConfiguration27.getOnlyOnPath();
        boolean boolean29 = crawlerConfiguration27.isVerifyUrls();
        int int30 = crawlerConfiguration27.getMaxLevels();
        int int31 = crawlerConfiguration27.getMaxLevels();
        boolean boolean32 = crawlerConfiguration27.isVerifyUrls();
        boolean boolean33 = crawlerConfiguration27.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = crawlerConfiguration27.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse40 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL21, 100, strMap34, "Unknown error", "com.soulgalore.crawler.http.socket.timeout", (long) 10, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", 0L);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse46 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 97, strMap34, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url", "CrawlerURL url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 100, "", (long) (short) -1);
        java.lang.String str47 = crawlerURL1.getHost();
        java.lang.String str48 = crawlerURL1.getHost();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(uRI8);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "CrawlerURL url:urls.txt" + "'", str22, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(crawlerConfiguration27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
    }

    @Test
    public void test09344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09344");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration5.getRequestHeadersMap();
        java.lang.String str8 = crawlerConfiguration5.getNotOnPath();
        int int9 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray10 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet11 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet11, assetResponseArray10);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray13 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet14 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet14, assetResponseArray13);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult16 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet11, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet14);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet17 = assetsVerificationResult16.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = assetsVerificationResult16.getWorkingAssets();
        boolean boolean19 = crawlerConfiguration5.equals((java.lang.Object) assetResponseSet18);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL23 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray24 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL23 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet25 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet25, crawlerURLArray24);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet27 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray28 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet29 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet29, hTMLPageResponseArray28);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult31 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet25, hTMLPageResponseSet27, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet29);
        java.lang.String str32 = crawlerResult31.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet33 = crawlerResult31.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet34 = crawlerResult31.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet35 = crawlerResult31.getUrls();
        java.lang.String str36 = crawlerResult31.getTheStartPoint();
        java.lang.String str37 = crawlerResult31.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet38 = crawlerResult31.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet39 = crawlerResult31.getNonWorkingUrls();
        boolean boolean40 = crawlerConfiguration5.equals((java.lang.Object) hTMLPageResponseSet39);
        java.lang.String str41 = crawlerConfiguration5.getOnlyOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(assetResponseArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(assetResponseArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(assetResponseSet17);
        org.junit.Assert.assertNotNull(assetResponseSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet33);
        org.junit.Assert.assertNotNull(crawlerURLSet34);
        org.junit.Assert.assertNotNull(crawlerURLSet35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet38);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
    }

    @Test
    public void test09345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09345");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder8.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration19 = builder18.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration20 = builder18.build();
        boolean boolean21 = crawlerConfiguration3.equals((java.lang.Object) crawlerConfiguration20);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = crawlerConfiguration20.getRequestHeadersMap();
        int int23 = crawlerConfiguration20.getMaxLevels();
        java.lang.String str24 = crawlerConfiguration20.getNotOnPath();
        java.lang.String str25 = crawlerConfiguration20.getOnlyOnPath();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse30 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        long long31 = assetResponse30.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL34 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean35 = crawlerURL34.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = builder37.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder41 = builder37.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration42 = builder37.build();
        java.lang.String str43 = crawlerConfiguration42.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = crawlerConfiguration42.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse50 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL34, (-1), strMap44, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        boolean boolean51 = assetResponse30.equals((java.lang.Object) strMap44);
        java.lang.String str52 = assetResponse30.getReferer();
        java.lang.String str53 = assetResponse30.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder54 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder56 = builder54.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder58 = builder54.setStartUrl("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder60 = builder54.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder62 = builder54.setNotOnPath("AssetResponseCallable url:Malformed url");
        boolean boolean63 = assetResponse30.equals((java.lang.Object) builder54);
        int int64 = assetResponse30.getResponseCode();
        int int65 = assetResponse30.getResponseCode();
        java.lang.String str66 = assetResponse30.getUrl();
        boolean boolean67 = crawlerConfiguration20.equals((java.lang.Object) assetResponse30);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(crawlerConfiguration19);
        org.junit.Assert.assertNotNull(crawlerConfiguration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "urls.txt" + "'", str24, "urls.txt");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 100L + "'", long31 == 100L);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(crawlerConfiguration42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str52, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str53, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "com.soulgalore.crawler.auth" + "'", str66, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test09346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09346");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "Response timed out");
        com.soulgalore.crawler.util.HeaderUtil headerUtil4 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil4.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) '4', strMap6, "com.soulgalore.crawler.http.socket.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 580, "com.soulgalore.crawler.auth", (long) (short) 1);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL13 = hTMLPageResponse12.getPageUrl();
        org.junit.Assert.assertNotNull(headerUtil4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(crawlerURL13);
    }

    @Test
    public void test09347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09347");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder4.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration6 = builder4.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setRequestHeaders("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setRequestHeaders("AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder12.setRequestHeaders("35");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request headers wrongly configured, missing separator :35");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertNotNull(crawlerConfiguration6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test09348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09348");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.lang.String str5 = crawlerURL2.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder9.build();
        java.lang.String str11 = crawlerConfiguration10.getStartUrl();
        int int12 = crawlerConfiguration10.getMaxLevels();
        int int13 = crawlerConfiguration10.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse20 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) -1, strMap14, "100", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) (short) -1, "com.soulgalore.crawler.nrofhttpthreads", 0L);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL23 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI24 = crawlerURL23.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder25.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration28 = builder27.build();
        java.lang.String str29 = crawlerConfiguration28.getStartUrl();
        int int30 = crawlerConfiguration28.getMaxLevels();
        int int31 = crawlerConfiguration28.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL34 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean35 = crawlerURL34.isWrongSyntax();
        java.lang.String str36 = crawlerURL34.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse44 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL34, (int) 'a', strMap38, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str45 = hTMLPageResponse44.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL46 = hTMLPageResponse44.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = hTMLPageResponse44.getResponseHeaders();
        java.lang.String str48 = hTMLPageResponse44.getUrl();
        org.jsoup.nodes.Document document49 = hTMLPageResponse44.getBody();
        boolean boolean50 = crawlerConfiguration28.equals((java.lang.Object) hTMLPageResponse44);
        boolean boolean51 = crawlerURL23.equals((java.lang.Object) hTMLPageResponse44);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder53 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder55 = builder53.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration56 = builder55.build();
        java.lang.String str57 = crawlerConfiguration56.getStartUrl();
        int int58 = crawlerConfiguration56.getMaxLevels();
        int int59 = crawlerConfiguration56.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = crawlerConfiguration56.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse66 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL23, 582, strMap60, "urls.txt", "hi!", (long) (short) 0, "AssetResponseCallable url:result.csv", 10L);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL67 = hTMLPageResponse66.getPageUrl();
        com.soulgalore.crawler.util.HeaderUtil headerUtil68 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap70 = headerUtil68.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap72 = headerUtil68.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap74 = headerUtil68.createHeadersFromString("AssetResponseCallable url:100");
        boolean boolean75 = crawlerURL67.equals((java.lang.Object) strMap74);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse81 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 32, strMap74, "CrawlerURL url:CrawlerURL url:-1", "", 582L, "CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", 52L);
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "urls.txt" + "'", str5, "urls.txt");
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(uRI24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(crawlerConfiguration28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "urls.txt" + "'", str36, "urls.txt");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str45, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "com.soulgalore.crawler.auth" + "'", str48, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(crawlerConfiguration56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(crawlerURL67);
        org.junit.Assert.assertNotNull(headerUtil68);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test09349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09349");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        java.lang.String str20 = hTMLPageResponse18.getHeaderValue("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = hTMLPageResponse18.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = hTMLPageResponse18.getPageUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder23.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder23.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder29.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder29.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration34 = builder33.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration35 = builder33.build();
        boolean boolean36 = hTMLPageResponse18.equals((java.lang.Object) builder33);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder33.setOnlyOnPath("result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder38.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder38.setMaxLevels((-1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(crawlerURL21);
        org.junit.Assert.assertNotNull(crawlerURL22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(crawlerConfiguration34);
        org.junit.Assert.assertNotNull(crawlerConfiguration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
    }

    @Test
    public void test09350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09350");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        int int5 = crawlerConfiguration3.getMaxLevels();
        int int6 = crawlerConfiguration3.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str8 = crawlerConfiguration3.getStartUrl();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int14 = assetResponse13.getResponseCode();
        int int15 = assetResponse13.getResponseCode();
        long long16 = assetResponse13.getFetchTime();
        long long17 = assetResponse13.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse22 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean23 = assetResponse13.equals((java.lang.Object) 100L);
        java.lang.String str24 = assetResponse13.getReferer();
        java.lang.String str25 = assetResponse13.getReferer();
        long long26 = assetResponse13.getFetchTime();
        boolean boolean27 = crawlerConfiguration3.equals((java.lang.Object) assetResponse13);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL30 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean31 = crawlerURL30.isWrongSyntax();
        java.lang.String str32 = crawlerURL30.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse40 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL30, (int) 'a', strMap34, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str41 = hTMLPageResponse40.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL42 = hTMLPageResponse40.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = hTMLPageResponse40.getResponseHeaders();
        org.jsoup.nodes.Document document44 = hTMLPageResponse40.getBody();
        boolean boolean45 = assetResponse13.equals((java.lang.Object) document44);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL48 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "com.soulgalore.crawler.auth");
        java.lang.String str49 = crawlerURL48.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder51 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder53 = builder51.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration54 = builder53.build();
        java.lang.String str55 = crawlerConfiguration54.getOnlyOnPath();
        boolean boolean56 = crawlerConfiguration54.isVerifyUrls();
        int int57 = crawlerConfiguration54.getMaxLevels();
        int int58 = crawlerConfiguration54.getMaxLevels();
        boolean boolean59 = crawlerConfiguration54.isVerifyUrls();
        boolean boolean60 = crawlerConfiguration54.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap61 = crawlerConfiguration54.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse67 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL48, 100, strMap61, "Unknown error", "com.soulgalore.crawler.http.socket.timeout", (long) 10, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", 0L);
        boolean boolean68 = assetResponse13.equals((java.lang.Object) "Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder69 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder71 = builder69.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder73 = builder71.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder75 = builder73.setStartUrl("100");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder77 = builder73.setNotOnPath("AssetResponseCallable url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder79 = builder73.setOnlyOnPath("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        boolean boolean80 = assetResponse13.equals((java.lang.Object) builder73);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "100" + "'", str24, "100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "100" + "'", str25, "100");
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "urls.txt" + "'", str32, "urls.txt");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str41, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(document44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "CrawlerURL url:urls.txt" + "'", str49, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(crawlerConfiguration54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test09351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09351");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:hi!");
        java.lang.String str2 = crawlerURL1.getHost();
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test09352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09352");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.lang.String str30 = hTMLPageResponse29.getResponseType();
        long long31 = hTMLPageResponse29.getFetchTime();
        org.jsoup.nodes.Document document32 = hTMLPageResponse29.getBody();
        java.lang.String str33 = hTMLPageResponse29.getResponseType();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1" + "'", str30, "-1");
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNull(document32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1" + "'", str33, "-1");
    }

    @Test
    public void test09353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09353");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "Response timed out");
        com.soulgalore.crawler.util.HeaderUtil headerUtil4 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil4.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) '4', strMap6, "com.soulgalore.crawler.http.socket.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 580, "com.soulgalore.crawler.auth", (long) (short) 1);
        org.jsoup.nodes.Document document13 = hTMLPageResponse12.getBody();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getResponseType();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        java.lang.String str17 = hTMLPageResponse12.getUrl();
        org.jsoup.nodes.Document document18 = hTMLPageResponse12.getBody();
        org.jsoup.nodes.Document document19 = hTMLPageResponse12.getBody();
        org.junit.Assert.assertNotNull(headerUtil4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(document13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.auth" + "'", str15, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "urls.txt" + "'", str16, "urls.txt");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "urls.txt" + "'", str17, "urls.txt");
        org.junit.Assert.assertNull(document18);
        org.junit.Assert.assertNull(document19);
    }

    @Test
    public void test09354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09354");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        int int5 = crawlerConfiguration3.getMaxLevels();
        int int6 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray12 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL11 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet13, crawlerURLArray12);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray16 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet17, hTMLPageResponseArray16);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult19 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet13, hTMLPageResponseSet15, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet17);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet20 = crawlerResult19.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet21 = crawlerResult19.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet22 = crawlerResult19.getUrls();
        java.lang.String str23 = crawlerResult19.getTheStartPoint();
        java.lang.String str24 = crawlerResult19.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet25 = crawlerResult19.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet26 = crawlerResult19.getUrls();
        boolean boolean27 = crawlerConfiguration3.equals((java.lang.Object) crawlerURLSet26);
        java.lang.String str28 = crawlerConfiguration3.getStartUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(crawlerURLArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet20);
        org.junit.Assert.assertNotNull(crawlerURLSet21);
        org.junit.Assert.assertNotNull(crawlerURLSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet25);
        org.junit.Assert.assertNotNull(crawlerURLSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test09355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09355");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.lang.String str5 = crawlerURL2.getHost();
        java.lang.String str6 = crawlerURL2.getReferer();
        java.lang.String str7 = crawlerURL2.getReferer();
        java.lang.String str8 = crawlerURL2.getHost();
        java.lang.String str9 = crawlerURL2.getReferer();
        java.lang.String str10 = crawlerURL2.getReferer();
        boolean boolean11 = crawlerURL2.isWrongSyntax();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "urls.txt" + "'", str6, "urls.txt");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "urls.txt" + "'", str7, "urls.txt");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "urls.txt" + "'", str9, "urls.txt");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "urls.txt" + "'", str10, "urls.txt");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test09356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09356");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setStartUrl("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setMaxLevels(32);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("AssetResponseCallable url:CrawlerURL url:100");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setStartUrl("CrawlerURL url:AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test09357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09357");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "Response timed out");
        com.soulgalore.crawler.util.HeaderUtil headerUtil6 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = headerUtil6.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse14 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL4, (int) '4', strMap8, "com.soulgalore.crawler.http.socket.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 580, "com.soulgalore.crawler.auth", (long) (short) 1);
        java.lang.String str15 = hTMLPageResponse14.toString();
        java.lang.String str17 = hTMLPageResponse14.getHeaderValue("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap18 = hTMLPageResponse14.getResponseHeaders();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable20 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:32encoding:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", assetFetcher1, strMap18, "AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertNotNull(headerUtil6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth" + "'", str15, "HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test09358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09358");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int13 = hTMLPageResponse12.getResponseCode();
        java.lang.String str14 = hTMLPageResponse12.getResponseType();
        java.lang.String str15 = hTMLPageResponse12.toString();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        java.lang.String str17 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        org.jsoup.nodes.Document document19 = hTMLPageResponse12.getBody();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str15, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str17, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertNull(document19);
    }

    @Test
    public void test09359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09359");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        java.lang.String str6 = crawlerConfiguration3.getOnlyOnPath();
        java.lang.String str7 = crawlerConfiguration3.getRequestHeaders();
        int int8 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str9 = crawlerConfiguration3.getStartUrl();
        boolean boolean10 = crawlerConfiguration3.isVerifyUrls();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test09360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09360");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "Response timed out");
        com.soulgalore.crawler.util.HeaderUtil headerUtil4 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil4.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) '4', strMap6, "com.soulgalore.crawler.http.socket.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 580, "com.soulgalore.crawler.auth", (long) (short) 1);
        org.jsoup.nodes.Document document13 = hTMLPageResponse12.getBody();
        java.lang.String str15 = hTMLPageResponse12.getHeaderValue("com.soulgalore.crawler.proxy");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray17 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, assetResponseArray17);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray20 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet21 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21, assetResponseArray20);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult23 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet24 = assetsVerificationResult23.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = assetsVerificationResult23.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = assetsVerificationResult23.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet27 = null;
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray28 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, assetResponseArray28);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray31 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet32 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32, assetResponseArray31);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult34 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet35 = assetsVerificationResult34.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray36 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet37 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37, assetResponseArray36);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray39 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40, assetResponseArray39);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult42 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult43 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet35, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult44 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet27, assetResponseSet35);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult45 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet26, assetResponseSet35);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet46 = assetsVerificationResult45.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet47 = assetsVerificationResult45.getWorkingAssets();
        boolean boolean48 = hTMLPageResponse12.equals((java.lang.Object) assetResponseSet47);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray49 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet50 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet50, assetResponseArray49);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray52 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet53 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet53, assetResponseArray52);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult55 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet50, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet53);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet56 = assetsVerificationResult55.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet57 = assetsVerificationResult55.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet58 = assetsVerificationResult55.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult59 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet47, assetResponseSet58);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet60 = assetsVerificationResult59.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet61 = assetsVerificationResult59.getWorkingAssets();
        org.junit.Assert.assertNotNull(headerUtil4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(document13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertNotNull(assetResponseArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(assetResponseArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(assetResponseSet24);
        org.junit.Assert.assertNotNull(assetResponseSet25);
        org.junit.Assert.assertNotNull(assetResponseSet26);
        org.junit.Assert.assertNotNull(assetResponseArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(assetResponseArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(assetResponseSet35);
        org.junit.Assert.assertNotNull(assetResponseArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(assetResponseArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(assetResponseSet46);
        org.junit.Assert.assertNotNull(assetResponseSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(assetResponseArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(assetResponseArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(assetResponseSet56);
        org.junit.Assert.assertNotNull(assetResponseSet57);
        org.junit.Assert.assertNotNull(assetResponseSet58);
        org.junit.Assert.assertNotNull(assetResponseSet60);
        org.junit.Assert.assertNotNull(assetResponseSet61);
    }

    @Test
    public void test09361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09361");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setMaxLevels((int) '#');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder12.setMaxLevels((int) '4');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder12.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder12.setMaxLevels((int) (byte) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder12.setOnlyOnPath("CrawlerURL url:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test09362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09362");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int13 = hTMLPageResponse12.getResponseCode();
        int int14 = hTMLPageResponse12.getResponseCode();
        java.lang.String str15 = hTMLPageResponse12.getUrl();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        int int17 = hTMLPageResponse12.getResponseCode();
        java.lang.String str18 = hTMLPageResponse12.getUrl();
        java.lang.String str19 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.util.HeaderUtil headerUtil20 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = headerUtil20.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap24 = headerUtil20.createHeadersFromString("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap26 = headerUtil20.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
        boolean boolean27 = hTMLPageResponse12.equals((java.lang.Object) "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
        java.lang.String str28 = hTMLPageResponse12.getEncoding();
        long long29 = hTMLPageResponse12.getFetchTime();
        long long30 = hTMLPageResponse12.getFetchTime();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 97 + "'", int14 == 97);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.auth" + "'", str15, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 97 + "'", int17 == 97);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.auth" + "'", str18, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "com.soulgalore.crawler.auth" + "'", str19, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(headerUtil20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str28, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 100L + "'", long29 == 100L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 100L + "'", long30 == 100L);
    }

    @Test
    public void test09363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09363");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.lang.String str5 = crawlerURL2.getHost();
        java.lang.String str6 = crawlerURL2.getHost();
        java.net.URI uRI7 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration12 = builder11.build();
        java.lang.String str13 = crawlerConfiguration12.getStartUrl();
        int int14 = crawlerConfiguration12.getMaxLevels();
        int int15 = crawlerConfiguration12.getMaxLevels();
        java.lang.String str16 = crawlerConfiguration12.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration12.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) '4', strMap17, "com.soulgalore.crawler.http.socket.timeout", "Response timed out", (long) '#', "Malformed url", 1L);
        int int24 = hTMLPageResponse23.getResponseCode();
        java.lang.String str25 = hTMLPageResponse23.getResponseType();
        java.lang.String str27 = hTMLPageResponse23.getHeaderValue("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:");
        java.lang.String str28 = hTMLPageResponse23.getUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(uRI7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(crawlerConfiguration12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Malformed url" + "'", str25, "Malformed url");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "com.soulgalore.crawler.auth" + "'", str28, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test09364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09364");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable4 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:AssetResponseCallable url:Wrong content type", assetFetcher1, strMap2, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt");
        java.lang.String str5 = assetResponseCallable4.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Wrong content type" + "'", str5, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Wrong content type");
    }

    @Test
    public void test09365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09365");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean5 = crawlerURL4.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder7.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration12 = builder7.build();
        java.lang.String str13 = crawlerConfiguration12.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = crawlerConfiguration12.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse20 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL4, (-1), strMap14, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int21 = hTMLPageResponse20.getResponseCode();
        long long22 = hTMLPageResponse20.getFetchTime();
        java.lang.String str23 = hTMLPageResponse20.getUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = hTMLPageResponse20.getResponseHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = hTMLPageResponse20.getResponseHeaders();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable27 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("CrawlerURL url:AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", assetFetcher1, strMap25, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:Redirected to new domain type:1");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(crawlerConfiguration12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 580L + "'", long22 == 580L);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.auth" + "'", str23, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap25);
    }

    @Test
    public void test09366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09366");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder0.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder0.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder0.setRequestHeaders("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setNotOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder11.setNotOnPath("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:errorassets.csv");
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
    }

    @Test
    public void test09367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09367");
        com.soulgalore.crawler.util.StatusCode statusCode0 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT;
        int int1 = statusCode0.getCode();
        int int2 = statusCode0.getCode();
        java.lang.String str3 = statusCode0.getFriendlyName();
        java.lang.String str4 = statusCode0.getFriendlyName();
        java.lang.String str5 = statusCode0.getFriendlyName();
        int int6 = statusCode0.getCode();
        java.lang.String str7 = statusCode0.getFriendlyName();
        int int8 = statusCode0.getCode();
        int int9 = statusCode0.getCode();
        int int10 = statusCode0.getCode();
        java.lang.String str11 = statusCode0.getFriendlyName();
        int int12 = statusCode0.getCode();
        org.junit.Assert.assertTrue("'" + statusCode0 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT + "'", statusCode0.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 580 + "'", int1 == 580);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 580 + "'", int2 == 580);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Response timed out" + "'", str3, "Response timed out");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Response timed out" + "'", str4, "Response timed out");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Response timed out" + "'", str5, "Response timed out");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 580 + "'", int6 == 580);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Response timed out" + "'", str7, "Response timed out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 580 + "'", int8 == 580);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 580 + "'", int9 == 580);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 580 + "'", int10 == 580);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Response timed out" + "'", str11, "Response timed out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 580 + "'", int12 == 580);
    }

    @Test
    public void test09368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09368");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder10.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder10.setMaxLevels((-1));
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder10.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder10.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setStartUrl("CrawlerURL url:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
    }

    @Test
    public void test09369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09369");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet4 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet6 = authUtil0.createAuthsFromString("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet8 = authUtil0.createAuthsFromString("AssetResponseCallable url:CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:10");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"CrawlerURL url\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
        org.junit.Assert.assertNotNull(authSet2);
        org.junit.Assert.assertNotNull(authSet4);
        org.junit.Assert.assertNotNull(authSet6);
    }

    @Test
    public void test09370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09370");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setMaxLevels((int) ' ');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("AssetResponseCallable url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setVerifyUrls(false);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test09371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09371");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv", 583, (long) '#');
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse9 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int10 = assetResponse9.getResponseCode();
        long long11 = assetResponse9.getFetchTime();
        long long12 = assetResponse9.getFetchTime();
        long long13 = assetResponse9.getFetchTime();
        java.lang.String str14 = assetResponse9.getUrl();
        java.lang.String str15 = assetResponse9.getReferer();
        boolean boolean16 = assetResponse4.equals((java.lang.Object) assetResponse9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100" + "'", str15, "100");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test09372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09372");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:CrawlerURL url:10", "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", (int) (short) 0, 97L);
        java.lang.String str5 = assetResponse4.getReferer();
        long long6 = assetResponse4.getFetchTime();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url" + "'", str5, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 97L + "'", long6 == 97L);
    }

    @Test
    public void test09373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09373");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int13 = hTMLPageResponse12.getResponseCode();
        int int14 = hTMLPageResponse12.getResponseCode();
        java.lang.String str15 = hTMLPageResponse12.getUrl();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        int int17 = hTMLPageResponse12.getResponseCode();
        java.lang.String str18 = hTMLPageResponse12.getUrl();
        java.lang.String str19 = hTMLPageResponse12.toString();
        java.lang.String str20 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder21.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration26 = builder21.build();
        java.lang.String str27 = crawlerConfiguration26.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = crawlerConfiguration26.getRequestHeadersMap();
        java.lang.String str29 = crawlerConfiguration26.getNotOnPath();
        boolean boolean30 = crawlerConfiguration26.isVerifyUrls();
        boolean boolean31 = crawlerConfiguration26.isVerifyUrls();
        java.lang.String str32 = crawlerConfiguration26.getNotOnPath();
        boolean boolean33 = crawlerConfiguration26.isVerifyUrls();
        boolean boolean34 = hTMLPageResponse12.equals((java.lang.Object) crawlerConfiguration26);
        java.lang.String str35 = crawlerConfiguration26.getOnlyOnPath();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 97 + "'", int14 == 97);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.auth" + "'", str15, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 97 + "'", int17 == 97);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.auth" + "'", str18, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str19, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str20, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(crawlerConfiguration26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
    }

    @Test
    public void test09374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09374");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:HTMLPageResponseurl:hi!responseCode:-1encoding:errorurls.txt type:result.csv");
    }

    @Test
    public void test09375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09375");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        java.lang.String str18 = crawlerURL17.getUrl();
        java.lang.String str19 = crawlerURL17.getHost();
        java.lang.String str20 = crawlerURL17.getReferer();
        java.lang.String str21 = crawlerURL17.toString();
        boolean boolean22 = crawlerURL17.isWrongSyntax();
        java.lang.String str23 = crawlerURL17.getHost();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.auth" + "'", str18, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "urls.txt" + "'", str20, "urls.txt");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str21, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test09376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09376");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("35", "-1");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean7 = crawlerURL6.isWrongSyntax();
        java.lang.String str8 = crawlerURL6.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse16 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL6, (int) 'a', strMap10, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str17 = hTMLPageResponse16.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = hTMLPageResponse16.getResponseHeaders();
        java.lang.String str19 = hTMLPageResponse16.getEncoding();
        java.lang.String str20 = hTMLPageResponse16.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = hTMLPageResponse16.getPageUrl();
        java.lang.String str22 = crawlerURL21.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL25 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI26 = crawlerURL25.getUri();
        java.lang.String str27 = crawlerURL25.getUrl();
        java.lang.String str28 = crawlerURL25.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder30.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder30.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration35 = builder30.build();
        java.lang.String str36 = crawlerConfiguration35.getRequestHeaders();
        java.lang.String str37 = crawlerConfiguration35.getRequestHeaders();
        boolean boolean39 = crawlerConfiguration35.equals((java.lang.Object) 0.0d);
        boolean boolean40 = crawlerConfiguration35.isVerifyUrls();
        java.lang.String str41 = crawlerConfiguration35.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = crawlerConfiguration35.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse48 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL25, 0, strMap42, "10", "Unknown error", (long) (short) -1, "AssetResponseCallable url:Malformed url", (long) 97);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse54 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL21, 97, strMap42, "97", "com.soulgalore.crawler.proxy", (long) 10, "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (byte) 100);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse60 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 35, strMap42, "", "HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", 582L, "AssetResponseCallable url:Redirected to new domain", (long) (short) -1);
        int int61 = hTMLPageResponse60.getResponseCode();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "urls.txt" + "'", str8, "urls.txt");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str17, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str19, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str20, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "com.soulgalore.crawler.auth" + "'", str22, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(uRI26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str27, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str28, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(crawlerConfiguration35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 35 + "'", int61 == 35);
    }

    @Test
    public void test09377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09377");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("AssetResponseCallable url:errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setMaxLevels((int) (byte) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder8.build();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
    }

    @Test
    public void test09378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09378");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder0.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder0.setRequestHeaders("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder9.setNotOnPath("Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setOnlyOnPath("-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder15.setOnlyOnPath("Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setVerifyUrls(true);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
    }

    @Test
    public void test09379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09379");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        java.lang.String str9 = assetResponse4.getUrl();
        long long10 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setVerifyUrls(false);
        boolean boolean16 = assetResponse4.equals((java.lang.Object) builder13);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration17 = builder13.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder13.setRequestHeaders("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder13.setNotOnPath("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setNotOnPath("AssetResponseCallable url:CrawlerURL url:hi!");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(crawlerConfiguration17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
    }

    @Test
    public void test09380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09380");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        long long15 = hTMLPageResponse12.getFetchTime();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        long long17 = hTMLPageResponse12.getFetchTime();
        org.jsoup.nodes.Document document18 = hTMLPageResponse12.getBody();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 100L + "'", long15 == 100L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 100L + "'", long17 == 100L);
        org.junit.Assert.assertNull(document18);
    }

    @Test
    public void test09381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09381");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str7 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str8 = crawlerConfiguration5.getNotOnPath();
        java.lang.String str9 = crawlerConfiguration5.getNotOnPath();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray10 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet11 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet11, assetResponseArray10);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray13 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet14 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet14, assetResponseArray13);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult16 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet11, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet14);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet17 = assetsVerificationResult16.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = assetsVerificationResult16.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet19 = assetsVerificationResult16.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = null;
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray21 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, assetResponseArray21);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray24 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25, assetResponseArray24);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult27 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet28 = assetsVerificationResult27.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray29 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet30 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30, assetResponseArray29);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray32 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet33 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33, assetResponseArray32);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult35 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult36 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet28, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult37 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet20, assetResponseSet28);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult38 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet19, assetResponseSet28);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet39 = null;
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult40 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet28, assetResponseSet39);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet41 = assetsVerificationResult40.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet42 = assetsVerificationResult40.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet43 = assetsVerificationResult40.getWorkingAssets();
        boolean boolean44 = crawlerConfiguration5.equals((java.lang.Object) assetsVerificationResult40);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(assetResponseArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(assetResponseArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(assetResponseSet17);
        org.junit.Assert.assertNotNull(assetResponseSet18);
        org.junit.Assert.assertNotNull(assetResponseSet19);
        org.junit.Assert.assertNotNull(assetResponseArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(assetResponseArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(assetResponseSet28);
        org.junit.Assert.assertNotNull(assetResponseArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(assetResponseArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(assetResponseSet41);
        org.junit.Assert.assertNull(assetResponseSet42);
        org.junit.Assert.assertNotNull(assetResponseSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test09382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09382");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet12 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult11.getUrls();
        java.lang.String str14 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet16 = crawlerResult11.getNonWorkingUrls();
        java.lang.String str17 = crawlerResult11.getTheStartPoint();
        java.lang.String str18 = crawlerResult11.getTheStartPoint();
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet12);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test09383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09383");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
    }

    @Test
    public void test09384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09384");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setOnlyOnPath("com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setRequestHeaders("HTMLPageResponseurl:AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1responseCode:100encoding:AssetResponseCallable url:com.soulgalore.crawler.nrofhttpthreads type:");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test09385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09385");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder10.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder10.setNotOnPath("com.soulgalore.crawler.http.socket.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setOnlyOnPath("0");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder15.setNotOnPath("CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
    }

    @Test
    public void test09386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09386");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray21 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL20 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet22, crawlerURLArray21);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet24 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray25 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet26, hTMLPageResponseArray25);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult28 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet22, hTMLPageResponseSet24, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet26);
        java.lang.String str29 = crawlerResult28.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet30 = crawlerResult28.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet31 = crawlerResult28.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL35 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean36 = crawlerURL35.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean40 = crawlerURL39.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL43 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI44 = crawlerURL43.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray45 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL35, crawlerURL39, crawlerURL43 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet46 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet46, crawlerURLArray45);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray48 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet49 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet49, hTMLPageResponseArray48);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL54 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray55 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL54 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet56 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet56, crawlerURLArray55);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet58 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray59 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet60 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet60, hTMLPageResponseArray59);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult62 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet56, hTMLPageResponseSet58, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet60);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult63 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet46, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet49, hTMLPageResponseSet58);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet64 = crawlerResult63.getVerifiedURLResponses();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult65 = new com.soulgalore.crawler.core.CrawlerResult("errorurls.txt", crawlerURLSet16, hTMLPageResponseSet31, hTMLPageResponseSet64);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet66 = crawlerResult65.getUrls();
        java.lang.String str67 = crawlerResult65.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet68 = crawlerResult65.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet69 = crawlerResult65.getNonWorkingUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(crawlerURLArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet30);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(uRI44);
        org.junit.Assert.assertNotNull(crawlerURLArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet64);
        org.junit.Assert.assertNotNull(crawlerURLSet66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "errorurls.txt" + "'", str67, "errorurls.txt");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet68);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet69);
    }

    @Test
    public void test09387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09387");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        int int5 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str6 = crawlerConfiguration3.getStartUrl();
        java.lang.String str7 = crawlerConfiguration3.getStartUrl();
        java.lang.String str8 = crawlerConfiguration3.getOnlyOnPath();
        java.lang.Class<?> wildcardClass9 = crawlerConfiguration3.getClass();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test09388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09388");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.lang.String str30 = hTMLPageResponse29.getResponseType();
        long long31 = hTMLPageResponse29.getFetchTime();
        java.lang.String str32 = hTMLPageResponse29.getResponseType();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = hTMLPageResponse29.getResponseHeaders();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1" + "'", str30, "-1");
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1" + "'", str32, "-1");
        org.junit.Assert.assertNotNull(strMap33);
    }

    @Test
    public void test09389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09389");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:com.soulgalore.crawler.auth", "CrawlerURL url:AssetResponseCallable url:1", (int) (short) 10, 583L);
    }

    @Test
    public void test09390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09390");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray20 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL19 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet21 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet21, crawlerURLArray20);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet23 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray24 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet25 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet25, hTMLPageResponseArray24);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult27 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet21, hTMLPageResponseSet23, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet25);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet28 = crawlerResult27.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet29 = crawlerResult27.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet30 = crawlerResult27.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet31 = crawlerResult27.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL35 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray36 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL35 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet37 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet37, crawlerURLArray36);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet39 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray40 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet41, hTMLPageResponseArray40);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult43 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet37, hTMLPageResponseSet39, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet41);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet44 = crawlerResult43.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet45 = crawlerResult43.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet46 = crawlerResult43.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet47 = crawlerResult43.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet48 = crawlerResult43.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet49 = crawlerResult43.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult50 = new com.soulgalore.crawler.core.CrawlerResult("Malformed url", crawlerURLSet15, hTMLPageResponseSet31, hTMLPageResponseSet49);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet51 = crawlerResult50.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet52 = crawlerResult50.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet53 = crawlerResult50.getUrls();
        java.lang.String str54 = crawlerResult50.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet55 = crawlerResult50.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet56 = crawlerResult50.getNonWorkingUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(crawlerURLArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet28);
        org.junit.Assert.assertNotNull(crawlerURLSet29);
        org.junit.Assert.assertNotNull(crawlerURLSet30);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet31);
        org.junit.Assert.assertNotNull(crawlerURLArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet44);
        org.junit.Assert.assertNotNull(crawlerURLSet45);
        org.junit.Assert.assertNotNull(crawlerURLSet46);
        org.junit.Assert.assertNotNull(crawlerURLSet47);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet48);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet49);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet51);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet52);
        org.junit.Assert.assertNotNull(crawlerURLSet53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Malformed url" + "'", str54, "Malformed url");
        org.junit.Assert.assertNotNull(crawlerURLSet55);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet56);
    }

    @Test
    public void test09391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09391");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("urls.txt", "AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout", 10, (long) 581);
        java.lang.String str5 = assetResponse4.getReferer();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout" + "'", str5, "AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
    }

    @Test
    public void test09392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09392");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        long long15 = hTMLPageResponse12.getFetchTime();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        long long17 = hTMLPageResponse12.getFetchTime();
        long long18 = hTMLPageResponse12.getFetchTime();
        int int19 = hTMLPageResponse12.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = hTMLPageResponse12.getResponseHeaders();
        int int21 = hTMLPageResponse12.getResponseCode();
        java.lang.String str22 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL23 = hTMLPageResponse12.getPageUrl();
        long long24 = hTMLPageResponse12.getFetchTime();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 100L + "'", long15 == 100L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 100L + "'", long17 == 100L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 100L + "'", long18 == 100L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 97 + "'", int21 == 97);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str22, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 100L + "'", long24 == 100L);
    }

    @Test
    public void test09393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09393");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray20 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL19 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet21 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet21, crawlerURLArray20);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet23 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray24 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet25 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet25, hTMLPageResponseArray24);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult27 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet21, hTMLPageResponseSet23, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet25);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet28 = crawlerResult27.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet29 = crawlerResult27.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet30 = crawlerResult27.getUrls();
        java.lang.String str31 = crawlerResult27.getTheStartPoint();
        java.lang.String str32 = crawlerResult27.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet33 = crawlerResult27.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet34 = crawlerResult27.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray40 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL39 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, crawlerURLArray40);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray44 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet45 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45, hTMLPageResponseArray44);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult47 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, hTMLPageResponseSet43, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet48 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet49 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet50 = crawlerResult47.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet51 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet52 = crawlerResult47.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet53 = crawlerResult47.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL57 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray58 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL57 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet59 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet59, crawlerURLArray58);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet61 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray62 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet63 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet63, hTMLPageResponseArray62);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult65 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet59, hTMLPageResponseSet61, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet63);
        java.lang.String str66 = crawlerResult65.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet67 = crawlerResult65.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet68 = crawlerResult65.getNonWorkingUrls();
        java.lang.String str69 = crawlerResult65.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet70 = crawlerResult65.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL74 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray75 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL74 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet76 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet76, crawlerURLArray75);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet78 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray79 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet80 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet80, hTMLPageResponseArray79);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult82 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet76, hTMLPageResponseSet78, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet80);
        java.lang.String str83 = crawlerResult82.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet84 = crawlerResult82.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet85 = crawlerResult82.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult86 = new com.soulgalore.crawler.core.CrawlerResult("CrawlerURL url:urls.txt", crawlerURLSet53, hTMLPageResponseSet70, hTMLPageResponseSet85);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult87 = new com.soulgalore.crawler.core.CrawlerResult("32", crawlerURLSet15, hTMLPageResponseSet34, hTMLPageResponseSet70);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet88 = crawlerResult87.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet89 = crawlerResult87.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet90 = crawlerResult87.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet91 = crawlerResult87.getNonWorkingUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(crawlerURLArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet28);
        org.junit.Assert.assertNotNull(crawlerURLSet29);
        org.junit.Assert.assertNotNull(crawlerURLSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet33);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet34);
        org.junit.Assert.assertNotNull(crawlerURLArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet48);
        org.junit.Assert.assertNotNull(crawlerURLSet49);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet50);
        org.junit.Assert.assertNotNull(crawlerURLSet51);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet52);
        org.junit.Assert.assertNotNull(crawlerURLSet53);
        org.junit.Assert.assertNotNull(crawlerURLArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet67);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet70);
        org.junit.Assert.assertNotNull(crawlerURLArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet84);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet85);
        org.junit.Assert.assertNotNull(crawlerURLSet88);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet89);
        org.junit.Assert.assertNotNull(crawlerURLSet90);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet91);
    }

    @Test
    public void test09394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09394");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder13.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder13.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setVerifyUrls(false);
        boolean boolean26 = hTMLPageResponse12.equals((java.lang.Object) builder25);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder25.setOnlyOnPath("HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder25.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder25.setMaxLevels((int) ' ');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setMaxLevels(308);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder32.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder32.setMaxLevels(0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
    }

    @Test
    public void test09395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09395");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.util.Map<java.lang.String, java.lang.String> strMap30 = hTMLPageResponse29.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean34 = crawlerURL33.isWrongSyntax();
        java.lang.String str35 = crawlerURL33.getReferer();
        java.lang.String str36 = crawlerURL33.getHost();
        java.lang.String str37 = crawlerURL33.getUrl();
        boolean boolean38 = hTMLPageResponse29.equals((java.lang.Object) crawlerURL33);
        java.lang.String str39 = hTMLPageResponse29.getUrl();
        java.lang.String str40 = hTMLPageResponse29.getUrl();
        java.lang.String str42 = hTMLPageResponse29.getHeaderValue("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        int int43 = hTMLPageResponse29.getResponseCode();
        java.lang.String str45 = hTMLPageResponse29.getHeaderValue("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL46 = hTMLPageResponse29.getPageUrl();
        java.lang.String str47 = crawlerURL46.getUrl();
        java.lang.String str48 = crawlerURL46.getUrl();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "urls.txt" + "'", str35, "urls.txt");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "com.soulgalore.crawler.auth" + "'", str37, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "com.soulgalore.crawler.auth" + "'", str39, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "com.soulgalore.crawler.auth" + "'", str40, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(crawlerURL46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "com.soulgalore.crawler.auth" + "'", str47, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "com.soulgalore.crawler.auth" + "'", str48, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test09396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09396");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:errorassets.csv", "Response timed out");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CrawlerURL url:AssetResponseCallable url:errorassets.csv" + "'", str4, "CrawlerURL url:AssetResponseCallable url:errorassets.csv");
    }

    @Test
    public void test09397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09397");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "Response timed out");
        com.soulgalore.crawler.util.HeaderUtil headerUtil4 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil4.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) '4', strMap6, "com.soulgalore.crawler.http.socket.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 580, "com.soulgalore.crawler.auth", (long) (short) 1);
        org.jsoup.nodes.Document document13 = hTMLPageResponse12.getBody();
        org.jsoup.nodes.Document document14 = hTMLPageResponse12.getBody();
        java.lang.String str15 = hTMLPageResponse12.getUrl();
        org.junit.Assert.assertNotNull(headerUtil4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(document13);
        org.junit.Assert.assertNull(document14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "urls.txt" + "'", str15, "urls.txt");
    }

    @Test
    public void test09398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09398");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet14 = crawlerResult12.getNonWorkingUrls();
        java.lang.String str15 = crawlerResult12.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean21 = crawlerURL20.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean25 = crawlerURL24.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL28 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI29 = crawlerURL28.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray30 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL20, crawlerURL24, crawlerURL28 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet31 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet31, crawlerURLArray30);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray33 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet34 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet34, hTMLPageResponseArray33);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray40 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL39 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, crawlerURLArray40);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray44 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet45 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45, hTMLPageResponseArray44);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult47 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, hTMLPageResponseSet43, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult48 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet31, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet34, hTMLPageResponseSet43);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet49 = crawlerResult48.getVerifiedURLResponses();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL53 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray54 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL53 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet55 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet55, crawlerURLArray54);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet57 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray58 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet59 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet59, hTMLPageResponseArray58);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult61 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet55, hTMLPageResponseSet57, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet59);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet62 = crawlerResult61.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult63 = new com.soulgalore.crawler.core.CrawlerResult("hi!", crawlerURLSet16, hTMLPageResponseSet49, hTMLPageResponseSet62);
        java.lang.String str64 = crawlerResult63.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet65 = crawlerResult63.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet66 = crawlerResult63.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet67 = crawlerResult63.getNonWorkingUrls();
        java.lang.String str68 = crawlerResult63.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet69 = crawlerResult63.getNonWorkingUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(uRI29);
        org.junit.Assert.assertNotNull(crawlerURLArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet49);
        org.junit.Assert.assertNotNull(crawlerURLArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet65);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet66);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet69);
    }

    @Test
    public void test09399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09399");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider((int) (byte) 10, (int) ' ', 52, "AssetResponseCallable url:CrawlerURL url:10", "CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:AssetResponseCallable url:CrawlerURL url:10");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09400");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        java.net.URI uRI4 = crawlerURL2.getUri();
        boolean boolean5 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher8 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher10 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration14 = builder13.build();
        java.lang.String str15 = crawlerConfiguration14.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = crawlerConfiguration14.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable18 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("97", assetFetcher10, strMap16, "CrawlerURL url:result.csv");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable20 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Redirected to new domain", assetFetcher8, strMap16, "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse26 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) ' ', strMap16, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:-1encoding:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads type:AssetResponseCallable url:errorassets.csv", "CrawlerURL url:100", (long) (byte) 0, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", (long) (short) 1);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL30 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI31 = crawlerURL30.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL35 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean36 = crawlerURL35.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder38.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder38.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration43 = builder38.build();
        java.lang.String str44 = crawlerConfiguration43.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = crawlerConfiguration43.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse51 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL35, (-1), strMap45, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse57 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL30, 100, strMap45, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.util.Map<java.lang.String, java.lang.String> strMap58 = hTMLPageResponse57.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL61 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean62 = crawlerURL61.isWrongSyntax();
        java.lang.String str63 = crawlerURL61.getReferer();
        java.lang.String str64 = crawlerURL61.getHost();
        java.lang.String str65 = crawlerURL61.getUrl();
        boolean boolean66 = hTMLPageResponse57.equals((java.lang.Object) crawlerURL61);
        java.lang.String str67 = hTMLPageResponse57.getUrl();
        java.lang.String str68 = hTMLPageResponse57.getUrl();
        org.jsoup.nodes.Document document69 = hTMLPageResponse57.getBody();
        java.util.Map<java.lang.String, java.lang.String> strMap70 = hTMLPageResponse57.getResponseHeaders();
        java.lang.String str71 = hTMLPageResponse57.getResponseType();
        org.jsoup.nodes.Document document72 = hTMLPageResponse57.getBody();
        java.util.Map<java.lang.String, java.lang.String> strMap73 = hTMLPageResponse57.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse79 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap73, "CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:32encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url type:com.soulgalore.crawler.http.connection.timeout", (long) 'a', "AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", (long) 308);
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertNull(uRI4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(crawlerConfiguration14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(uRI31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(crawlerConfiguration43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "urls.txt" + "'", str63, "urls.txt");
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "com.soulgalore.crawler.auth" + "'", str65, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "com.soulgalore.crawler.auth" + "'", str67, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "com.soulgalore.crawler.auth" + "'", str68, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "-1" + "'", str71, "-1");
        org.junit.Assert.assertNull(document72);
        org.junit.Assert.assertNotNull(strMap73);
    }

    @Test
    public void test09401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09401");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray8 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet9, assetResponseArray8);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray11 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, assetResponseArray11);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult14 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet9, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet15 = assetsVerificationResult14.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet16 = assetsVerificationResult14.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray17 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, assetResponseArray17);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray20 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet21 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21, assetResponseArray20);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult23 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult24 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet16, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray25 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet26, assetResponseArray25);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray28 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, assetResponseArray28);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult31 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet26, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet32 = assetsVerificationResult31.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult33 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet16, assetResponseSet32);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet34 = assetsVerificationResult33.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet35 = assetsVerificationResult33.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray36 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet37 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37, assetResponseArray36);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray39 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40, assetResponseArray39);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult42 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet43 = assetsVerificationResult42.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray44 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet45 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet45, assetResponseArray44);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray47 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet48 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet48, assetResponseArray47);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult50 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet45, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet48);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult51 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet43, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet48);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet52 = assetsVerificationResult51.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet53 = assetsVerificationResult51.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray54 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet55 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet55, assetResponseArray54);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray57 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet58 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet58, assetResponseArray57);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult60 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet55, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet58);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet61 = assetsVerificationResult60.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult62 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet53, assetResponseSet61);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult63 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet35, assetResponseSet53);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet64 = assetsVerificationResult63.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult65 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet7, assetResponseSet64);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet66 = assetsVerificationResult65.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet67 = assetsVerificationResult65.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet68 = null;
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult69 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet67, assetResponseSet68);
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(assetResponseArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(assetResponseSet15);
        org.junit.Assert.assertNotNull(assetResponseSet16);
        org.junit.Assert.assertNotNull(assetResponseArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(assetResponseArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(assetResponseArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(assetResponseArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(assetResponseSet32);
        org.junit.Assert.assertNotNull(assetResponseSet34);
        org.junit.Assert.assertNotNull(assetResponseSet35);
        org.junit.Assert.assertNotNull(assetResponseArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(assetResponseArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(assetResponseSet43);
        org.junit.Assert.assertNotNull(assetResponseArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(assetResponseArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(assetResponseSet52);
        org.junit.Assert.assertNotNull(assetResponseSet53);
        org.junit.Assert.assertNotNull(assetResponseArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(assetResponseArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(assetResponseSet61);
        org.junit.Assert.assertNotNull(assetResponseSet64);
        org.junit.Assert.assertNotNull(assetResponseSet66);
        org.junit.Assert.assertNotNull(assetResponseSet67);
    }

    @Test
    public void test09402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09402");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean6 = crawlerURL5.isWrongSyntax();
        java.lang.String str7 = crawlerURL5.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse15 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) 'a', strMap9, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str16 = hTMLPageResponse15.getUrl();
        boolean boolean17 = crawlerURL1.equals((java.lang.Object) str16);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher20 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil21 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = headerUtil21.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable25 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher20, strMap23, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse31 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) 100, strMap23, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        org.jsoup.nodes.Document document32 = hTMLPageResponse31.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = hTMLPageResponse31.getPageUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder34.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration37 = builder36.build();
        int int38 = crawlerConfiguration37.getMaxLevels();
        boolean boolean39 = crawlerConfiguration37.isVerifyUrls();
        boolean boolean40 = crawlerURL33.equals((java.lang.Object) crawlerConfiguration37);
        java.lang.String str41 = crawlerConfiguration37.getRequestHeaders();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder44 = builder42.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration45 = builder44.build();
        java.lang.String str46 = crawlerConfiguration45.getStartUrl();
        boolean boolean47 = crawlerConfiguration45.isVerifyUrls();
        java.lang.String str48 = crawlerConfiguration45.getOnlyOnPath();
        java.lang.String str49 = crawlerConfiguration45.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = crawlerConfiguration45.getRequestHeadersMap();
        boolean boolean51 = crawlerConfiguration37.equals((java.lang.Object) crawlerConfiguration45);
        boolean boolean52 = crawlerConfiguration37.isVerifyUrls();
        java.lang.String str53 = crawlerConfiguration37.getStartUrl();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "urls.txt" + "'", str7, "urls.txt");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(headerUtil21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(document32);
        org.junit.Assert.assertNotNull(crawlerURL33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(crawlerConfiguration37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(crawlerConfiguration45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(str53);
    }

    @Test
    public void test09403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09403");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet18 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray23 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL22 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, crawlerURLArray23);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray27 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28, hTMLPageResponseArray27);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult30 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, hTMLPageResponseSet26, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet31 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet32 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet33 = crawlerResult30.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet34 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet35 = crawlerResult30.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet36 = crawlerResult30.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet37 = crawlerResult30.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL41 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean42 = crawlerURL41.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL45 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean46 = crawlerURL45.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL49 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI50 = crawlerURL49.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray51 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL41, crawlerURL45, crawlerURL49 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet52 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet52, crawlerURLArray51);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray54 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet55 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet55, hTMLPageResponseArray54);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL60 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray61 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL60 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet62 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet62, crawlerURLArray61);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet64 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray65 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet66 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet66, hTMLPageResponseArray65);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult68 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet62, hTMLPageResponseSet64, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet66);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult69 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet52, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet55, hTMLPageResponseSet64);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet70 = crawlerResult69.getUrls();
        java.lang.String str71 = crawlerResult69.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet72 = crawlerResult69.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet73 = crawlerResult69.getVerifiedURLResponses();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult74 = new com.soulgalore.crawler.core.CrawlerResult("0", crawlerURLSet18, hTMLPageResponseSet37, hTMLPageResponseSet73);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet75 = crawlerResult74.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet76 = crawlerResult74.getVerifiedURLResponses();
        java.lang.String str77 = crawlerResult74.getTheStartPoint();
        java.lang.String str78 = crawlerResult74.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet79 = crawlerResult74.getNonWorkingUrls();
        java.lang.String str80 = crawlerResult74.getTheStartPoint();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet17);
        org.junit.Assert.assertNotNull(crawlerURLSet18);
        org.junit.Assert.assertNotNull(crawlerURLArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet31);
        org.junit.Assert.assertNotNull(crawlerURLSet32);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet33);
        org.junit.Assert.assertNotNull(crawlerURLSet34);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet35);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet36);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(uRI50);
        org.junit.Assert.assertNotNull(crawlerURLArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "com.soulgalore.crawler.auth" + "'", str71, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURLSet72);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet73);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet75);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "0" + "'", str77, "0");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "0" + "'", str78, "0");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "0" + "'", str80, "0");
    }

    @Test
    public void test09404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09404");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str8 = crawlerConfiguration3.getStartUrl();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads", "CrawlerURL url:result.csv", (int) '#', (long) '4');
        boolean boolean14 = crawlerConfiguration3.equals((java.lang.Object) '#');
        java.lang.String str15 = crawlerConfiguration3.getRequestHeaders();
        boolean boolean16 = crawlerConfiguration3.isVerifyUrls();
        java.lang.String str17 = crawlerConfiguration3.getRequestHeaders();
        java.lang.String str18 = crawlerConfiguration3.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test09405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09405");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str6 = crawlerConfiguration3.getRequestHeaders();
        java.lang.String str7 = crawlerConfiguration3.getRequestHeaders();
        java.lang.String str8 = crawlerConfiguration3.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = crawlerConfiguration3.getRequestHeadersMap();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap9);
    }

    @Test
    public void test09406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09406");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        java.lang.String str3 = crawlerURL1.getUrl();
        java.lang.String str4 = crawlerURL1.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder6.build();
        java.lang.String str12 = crawlerConfiguration11.getRequestHeaders();
        java.lang.String str13 = crawlerConfiguration11.getRequestHeaders();
        boolean boolean15 = crawlerConfiguration11.equals((java.lang.Object) 0.0d);
        boolean boolean16 = crawlerConfiguration11.isVerifyUrls();
        java.lang.String str17 = crawlerConfiguration11.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = crawlerConfiguration11.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse24 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 0, strMap18, "10", "Unknown error", (long) (short) -1, "AssetResponseCallable url:Malformed url", (long) 97);
        java.net.URI uRI25 = crawlerURL1.getUri();
        java.net.URI uRI26 = crawlerURL1.getUri();
        java.lang.String str27 = crawlerURL1.getReferer();
        java.lang.String str28 = crawlerURL1.getHost();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str3, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str4, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(uRI25);
        org.junit.Assert.assertNull(uRI26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test09407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09407");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:CrawlerURL url:1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain", "com.soulgalore.crawler.auth");
        java.lang.String str3 = crawlerURL2.getUrl();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:CrawlerURL url:1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain" + "'", str3, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:CrawlerURL url:1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain");
    }

    @Test
    public void test09408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09408");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.lang.String str5 = crawlerURL2.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder9.build();
        java.lang.String str11 = crawlerConfiguration10.getStartUrl();
        int int12 = crawlerConfiguration10.getMaxLevels();
        int int13 = crawlerConfiguration10.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse20 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) -1, strMap14, "100", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) (short) -1, "com.soulgalore.crawler.nrofhttpthreads", 0L);
        org.jsoup.nodes.Document document21 = hTMLPageResponse20.getBody();
        int int22 = hTMLPageResponse20.getResponseCode();
        java.lang.String str23 = hTMLPageResponse20.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = hTMLPageResponse20.getPageUrl();
        int int25 = hTMLPageResponse20.getResponseCode();
        java.lang.String str26 = hTMLPageResponse20.getResponseType();
        org.jsoup.nodes.Document document27 = hTMLPageResponse20.getBody();
        java.lang.String str28 = hTMLPageResponse20.getResponseType();
        java.lang.String str29 = hTMLPageResponse20.getResponseType();
        org.jsoup.nodes.Document document30 = hTMLPageResponse20.getBody();
        java.lang.String str31 = hTMLPageResponse20.getResponseType();
        long long32 = hTMLPageResponse20.getFetchTime();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "urls.txt" + "'", str5, "urls.txt");
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(document21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.auth" + "'", str23, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str26, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNull(document27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str28, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str29, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNull(document30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str31, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
    }

    @Test
    public void test09409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09409");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet12 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult11.getUrls();
        java.lang.String str14 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult11.getUrls();
        java.lang.String str17 = crawlerResult11.getTheStartPoint();
        java.lang.String str18 = crawlerResult11.getTheStartPoint();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet19 = crawlerResult11.getVerifiedURLResponses();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet12);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test09410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09410");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.http.connection.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads", (int) '#', (long) 581);
        java.lang.String str5 = assetResponse4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str5, "com.soulgalore.crawler.http.connection.timeout");
    }

    @Test
    public void test09411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09411");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1responseCode:10encoding:AssetResponseCallable url:0 type:AssetResponseCallable url:com.soulgalore.crawler.auth", "CrawlerURL url:10");
    }

    @Test
    public void test09412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09412");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        boolean boolean3 = crawlerURL1.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean7 = crawlerURL6.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder9.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration14 = builder9.build();
        java.lang.String str15 = crawlerConfiguration14.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = crawlerConfiguration14.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse22 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL6, (-1), strMap16, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int23 = hTMLPageResponse22.getResponseCode();
        long long24 = hTMLPageResponse22.getFetchTime();
        long long25 = hTMLPageResponse22.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL28 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI29 = crawlerURL28.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean34 = crawlerURL33.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder36.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder36.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration41 = builder36.build();
        java.lang.String str42 = crawlerConfiguration41.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = crawlerConfiguration41.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse49 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL33, (-1), strMap43, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse55 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL28, 100, strMap43, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        boolean boolean56 = hTMLPageResponse22.equals((java.lang.Object) 100);
        org.jsoup.nodes.Document document57 = hTMLPageResponse22.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL60 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "com.soulgalore.crawler.auth");
        java.lang.String str61 = crawlerURL60.toString();
        boolean boolean62 = hTMLPageResponse22.equals((java.lang.Object) str61);
        boolean boolean63 = crawlerURL1.equals((java.lang.Object) hTMLPageResponse22);
        long long64 = hTMLPageResponse22.getFetchTime();
        java.util.Map<java.lang.String, java.lang.String> strMap65 = hTMLPageResponse22.getResponseHeaders();
        int int66 = hTMLPageResponse22.getResponseCode();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(crawlerConfiguration14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 580L + "'", long24 == 580L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 580L + "'", long25 == 580L);
        org.junit.Assert.assertNull(uRI29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(crawlerConfiguration41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(document57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "CrawlerURL url:urls.txt" + "'", str61, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 580L + "'", long64 == 580L);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
    }

    @Test
    public void test09413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09413");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet4 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet6 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet8 = authUtil0.createAuthsFromString("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet10 = authUtil0.createAuthsFromString("com.soulgalore.crawler.nrofhttpthreads");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:com.soulgalore.crawler.nrofhttpthreads");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
        org.junit.Assert.assertNotNull(authSet2);
        org.junit.Assert.assertNotNull(authSet4);
        org.junit.Assert.assertNotNull(authSet6);
        org.junit.Assert.assertNotNull(authSet8);
    }

    @Test
    public void test09414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09414");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("HTMLPageResponseurl:hi!responseCode:-1encoding:errorurls.txt type:result.csv");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"hi!responseCode\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
    }

    @Test
    public void test09415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09415");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", (int) ' ', 10L);
        java.lang.String str5 = assetResponse4.getUrl();
        java.lang.String str6 = assetResponse4.getUrl();
        int int7 = assetResponse4.getResponseCode();
        java.lang.String str8 = assetResponse4.getUrl();
        java.lang.String str9 = assetResponse4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 32 + "'", int7 == 32);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test09416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09416");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int19 = hTMLPageResponse18.getResponseCode();
        long long20 = hTMLPageResponse18.getFetchTime();
        long long21 = hTMLPageResponse18.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI25 = crawlerURL24.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean30 = crawlerURL29.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder32.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration37 = builder32.build();
        java.lang.String str38 = crawlerConfiguration37.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = crawlerConfiguration37.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, (-1), strMap39, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse51 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL24, 100, strMap39, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        boolean boolean52 = hTMLPageResponse18.equals((java.lang.Object) 100);
        org.jsoup.nodes.Document document53 = hTMLPageResponse18.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL54 = hTMLPageResponse18.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL55 = hTMLPageResponse18.getPageUrl();
        boolean boolean56 = crawlerURL55.isWrongSyntax();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse61 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int62 = assetResponse61.getResponseCode();
        int int63 = assetResponse61.getResponseCode();
        long long64 = assetResponse61.getFetchTime();
        long long65 = assetResponse61.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse70 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean71 = assetResponse61.equals((java.lang.Object) 100L);
        java.lang.String str72 = assetResponse61.getReferer();
        java.lang.String str73 = assetResponse61.getReferer();
        boolean boolean75 = assetResponse61.equals((java.lang.Object) "com.soulgalore.crawler.proxy");
        boolean boolean76 = crawlerURL55.equals((java.lang.Object) assetResponse61);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 580L + "'", long20 == 580L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 580L + "'", long21 == 580L);
        org.junit.Assert.assertNull(uRI25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(crawlerConfiguration37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(document53);
        org.junit.Assert.assertNotNull(crawlerURL54);
        org.junit.Assert.assertNotNull(crawlerURL55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "100" + "'", str72, "100");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "100" + "'", str73, "100");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test09417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09417");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse19 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.proxy", "", (int) (short) -1, (long) 583);
        boolean boolean20 = crawlerURL14.equals((java.lang.Object) assetResponse19);
        java.lang.String str21 = crawlerURL14.getReferer();
        java.lang.String str22 = crawlerURL14.getUrl();
        java.lang.String str23 = crawlerURL14.getReferer();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "urls.txt" + "'", str21, "urls.txt");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "com.soulgalore.crawler.auth" + "'", str22, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "urls.txt" + "'", str23, "urls.txt");
    }

    @Test
    public void test09418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09418");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder10.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration12 = builder10.build();
        boolean boolean13 = crawlerConfiguration12.isVerifyUrls();
        boolean boolean14 = crawlerConfiguration12.isVerifyUrls();
        java.lang.String str15 = crawlerConfiguration12.getOnlyOnPath();
        java.lang.String str16 = crawlerConfiguration12.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration12.getRequestHeadersMap();
        java.lang.String str18 = crawlerConfiguration12.getNotOnPath();
        java.lang.String str19 = crawlerConfiguration12.getStartUrl();
        int int20 = crawlerConfiguration12.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = crawlerConfiguration12.getRequestHeadersMap();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertNotNull(crawlerConfiguration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str16, "com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "urls.txt" + "'", str18, "urls.txt");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str19, "com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(strMap21);
    }

    @Test
    public void test09419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09419");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder2.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder2.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration13 = builder12.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration14 = builder12.build();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = crawlerConfiguration14.getRequestHeadersMap();
        java.lang.String str16 = crawlerConfiguration14.getStartUrl();
        java.lang.String str17 = crawlerConfiguration14.getNotOnPath();
        boolean boolean18 = crawlerConfiguration14.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = crawlerConfiguration14.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable21 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("errorurls.txt", assetFetcher1, strMap19, "CrawlerURL url:Response timed out");
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(crawlerConfiguration13);
        org.junit.Assert.assertNotNull(crawlerConfiguration14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str16, "com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "urls.txt" + "'", str17, "urls.txt");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test09420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09420");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray6 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL5 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet7 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet7, crawlerURLArray6);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray10 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet11 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet11, hTMLPageResponseArray10);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult13 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet7, hTMLPageResponseSet9, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet11);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult13.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult13.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult13.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray21 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL20 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet22, crawlerURLArray21);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet24 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray25 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet26, hTMLPageResponseArray25);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult28 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet22, hTMLPageResponseSet24, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet26);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet29 = crawlerResult28.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet30 = crawlerResult28.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet31 = crawlerResult28.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet32 = crawlerResult28.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL36 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray37 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL36 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet38 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet38, crawlerURLArray37);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet40 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray41 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet42 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet42, hTMLPageResponseArray41);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult44 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet38, hTMLPageResponseSet40, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet42);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet45 = crawlerResult44.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet46 = crawlerResult44.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet47 = crawlerResult44.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet48 = crawlerResult44.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet49 = crawlerResult44.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet50 = crawlerResult44.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult51 = new com.soulgalore.crawler.core.CrawlerResult("Malformed url", crawlerURLSet16, hTMLPageResponseSet32, hTMLPageResponseSet50);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet52 = crawlerResult51.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet53 = crawlerResult51.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet54 = crawlerResult51.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL58 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray59 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL58 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet60 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet60, crawlerURLArray59);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet62 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray63 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet64 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet64, hTMLPageResponseArray63);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult66 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet60, hTMLPageResponseSet62, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet64);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet67 = crawlerResult66.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet68 = crawlerResult66.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet69 = crawlerResult66.getUrls();
        java.lang.String str70 = crawlerResult66.getTheStartPoint();
        java.lang.String str71 = crawlerResult66.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet72 = crawlerResult66.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet73 = crawlerResult66.getNonWorkingUrls();
        java.lang.String str74 = crawlerResult66.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet75 = crawlerResult66.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL79 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray80 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL79 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet81 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet81, crawlerURLArray80);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet83 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray84 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet85 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet85, hTMLPageResponseArray84);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult87 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet81, hTMLPageResponseSet83, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet85);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet88 = crawlerResult87.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet89 = crawlerResult87.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet90 = crawlerResult87.getNonWorkingUrls();
        java.lang.String str91 = crawlerResult87.getTheStartPoint();
        java.lang.String str92 = crawlerResult87.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet93 = crawlerResult87.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult94 = new com.soulgalore.crawler.core.CrawlerResult("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv", crawlerURLSet54, hTMLPageResponseSet75, hTMLPageResponseSet93);
        java.lang.String str95 = crawlerResult94.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet96 = crawlerResult94.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet97 = crawlerResult94.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet98 = crawlerResult94.getNonWorkingUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(crawlerURLArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet29);
        org.junit.Assert.assertNotNull(crawlerURLSet30);
        org.junit.Assert.assertNotNull(crawlerURLSet31);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet32);
        org.junit.Assert.assertNotNull(crawlerURLArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet45);
        org.junit.Assert.assertNotNull(crawlerURLSet46);
        org.junit.Assert.assertNotNull(crawlerURLSet47);
        org.junit.Assert.assertNotNull(crawlerURLSet48);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet49);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet50);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet52);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet53);
        org.junit.Assert.assertNotNull(crawlerURLSet54);
        org.junit.Assert.assertNotNull(crawlerURLArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet67);
        org.junit.Assert.assertNotNull(crawlerURLSet68);
        org.junit.Assert.assertNotNull(crawlerURLSet69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet72);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet75);
        org.junit.Assert.assertNotNull(crawlerURLArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet88);
        org.junit.Assert.assertNotNull(crawlerURLSet89);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!" + "'", str91, "hi!");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "hi!" + "'", str92, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet93);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv" + "'", str95, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet96);
        org.junit.Assert.assertNotNull(crawlerURLSet97);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet98);
    }

    @Test
    public void test09421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09421");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder4.setOnlyOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("Wrong content type");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setNotOnPath("35");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setMaxLevels((int) '#');
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration19 = builder18.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder18.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration22 = builder21.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder21.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration25 = builder21.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder21.setRequestHeaders("CrawlerURL url:1");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(crawlerConfiguration19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(crawlerConfiguration22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(crawlerConfiguration25);
        org.junit.Assert.assertNotNull(builder27);
    }

    @Test
    public void test09422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09422");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        java.lang.String str15 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder16.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder20.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setOnlyOnPath("com.soulgalore.crawler.auth");
        boolean boolean25 = hTMLPageResponse12.equals((java.lang.Object) builder22);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder22.setStartUrl("CrawlerURL url:CrawlerURL url:errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder22.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration30 = builder29.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration31 = builder29.build();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str15, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(crawlerConfiguration30);
        org.junit.Assert.assertNotNull(crawlerConfiguration31);
    }

    @Test
    public void test09423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09423");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean9 = crawlerURL8.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder11.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration16 = builder11.build();
        java.lang.String str17 = crawlerConfiguration16.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = crawlerConfiguration16.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse24 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, (-1), strMap18, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int25 = hTMLPageResponse24.getResponseCode();
        long long26 = hTMLPageResponse24.getFetchTime();
        long long27 = hTMLPageResponse24.getFetchTime();
        boolean boolean28 = crawlerConfiguration3.equals((java.lang.Object) hTMLPageResponse24);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = hTMLPageResponse24.getPageUrl();
        java.lang.String str30 = crawlerURL29.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration35 = builder34.build();
        java.lang.String str36 = crawlerConfiguration35.getOnlyOnPath();
        boolean boolean37 = crawlerConfiguration35.isVerifyUrls();
        int int38 = crawlerConfiguration35.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = crawlerConfiguration35.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, 583, strMap39, "AssetResponseCallable url:AssetResponseCallable url:Unknown error", "CrawlerURL url:CrawlerURL url:CrawlerURL url:errorassets.csv", (long) (short) 10, "AssetResponseCallable url:100", 580L);
        java.lang.String str46 = crawlerURL29.getReferer();
        java.net.URI uRI47 = crawlerURL29.getUri();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(crawlerConfiguration16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 580L + "'", long26 == 580L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 580L + "'", long27 == 580L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(crawlerURL29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "com.soulgalore.crawler.auth" + "'", str30, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(crawlerConfiguration35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "urls.txt" + "'", str46, "urls.txt");
        org.junit.Assert.assertNull(uRI47);
    }

    @Test
    public void test09424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09424");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        org.jsoup.nodes.Document document13 = hTMLPageResponse12.getBody();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setMaxLevels((int) (short) 0);
        boolean boolean19 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = hTMLPageResponse12.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = hTMLPageResponse12.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = hTMLPageResponse12.getPageUrl();
        boolean boolean23 = crawlerURL22.isWrongSyntax();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNull(document13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(crawlerURL20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(crawlerURL22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test09425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09425");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getNotOnPath();
        java.lang.String str7 = crawlerConfiguration5.getRequestHeaders();
        boolean boolean8 = crawlerConfiguration5.isVerifyUrls();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test09426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09426");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration5.getRequestHeadersMap();
        java.lang.String str8 = crawlerConfiguration5.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = crawlerConfiguration5.getRequestHeadersMap();
        java.lang.String str10 = crawlerConfiguration5.getRequestHeaders();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test09427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09427");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration3.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = crawlerConfiguration3.getRequestHeadersMap();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean12 = crawlerURL11.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration19 = builder14.build();
        java.lang.String str20 = crawlerConfiguration19.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = crawlerConfiguration19.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse27 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL11, (-1), strMap21, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int28 = hTMLPageResponse27.getResponseCode();
        int int29 = hTMLPageResponse27.getResponseCode();
        boolean boolean30 = crawlerConfiguration3.equals((java.lang.Object) hTMLPageResponse27);
        long long31 = hTMLPageResponse27.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL32 = hTMLPageResponse27.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL34 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI35 = crawlerURL34.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder36.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration39 = builder38.build();
        java.lang.String str40 = crawlerConfiguration39.getStartUrl();
        int int41 = crawlerConfiguration39.getMaxLevels();
        int int42 = crawlerConfiguration39.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL45 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean46 = crawlerURL45.isWrongSyntax();
        java.lang.String str47 = crawlerURL45.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse55 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL45, (int) 'a', strMap49, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str56 = hTMLPageResponse55.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL57 = hTMLPageResponse55.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = hTMLPageResponse55.getResponseHeaders();
        java.lang.String str59 = hTMLPageResponse55.getUrl();
        org.jsoup.nodes.Document document60 = hTMLPageResponse55.getBody();
        boolean boolean61 = crawlerConfiguration39.equals((java.lang.Object) hTMLPageResponse55);
        boolean boolean62 = crawlerURL34.equals((java.lang.Object) hTMLPageResponse55);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder64 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder66 = builder64.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration67 = builder66.build();
        java.lang.String str68 = crawlerConfiguration67.getStartUrl();
        int int69 = crawlerConfiguration67.getMaxLevels();
        int int70 = crawlerConfiguration67.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap71 = crawlerConfiguration67.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse77 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL34, 582, strMap71, "urls.txt", "hi!", (long) (short) 0, "AssetResponseCallable url:result.csv", 10L);
        java.util.Map<java.lang.String, java.lang.String> strMap78 = hTMLPageResponse77.getResponseHeaders();
        java.lang.String str79 = hTMLPageResponse77.getUrl();
        boolean boolean80 = hTMLPageResponse27.equals((java.lang.Object) hTMLPageResponse77);
        java.lang.String str81 = hTMLPageResponse77.getEncoding();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(crawlerConfiguration19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 580L + "'", long31 == 580L);
        org.junit.Assert.assertNotNull(crawlerURL32);
        org.junit.Assert.assertNull(uRI35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(crawlerConfiguration39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "urls.txt" + "'", str47, "urls.txt");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str56, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "com.soulgalore.crawler.auth" + "'", str59, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(crawlerConfiguration67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str79, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
    }

    @Test
    public void test09428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09428");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder4.build();
        java.lang.String str6 = crawlerConfiguration5.getOnlyOnPath();
        boolean boolean7 = crawlerConfiguration5.isVerifyUrls();
        int int8 = crawlerConfiguration5.getMaxLevels();
        int int9 = crawlerConfiguration5.getMaxLevels();
        boolean boolean10 = crawlerConfiguration5.isVerifyUrls();
        boolean boolean11 = crawlerConfiguration5.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration5.getRequestHeadersMap();
        java.lang.String str13 = crawlerConfiguration5.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = crawlerConfiguration5.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable16 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:CrawlerURL url:10", assetFetcher1, strMap14, "Wrong content type");
        java.lang.String str17 = assetResponseCallable16.toString();
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.assets.AssetResponse assetResponse18 = assetResponseCallable16.call();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:10" + "'", str17, "AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:10");
    }

    @Test
    public void test09429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09429");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder13.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder13.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setVerifyUrls(false);
        boolean boolean26 = hTMLPageResponse12.equals((java.lang.Object) builder25);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = hTMLPageResponse12.getResponseHeaders();
        long long28 = hTMLPageResponse12.getFetchTime();
        java.lang.String str29 = hTMLPageResponse12.getEncoding();
        int int30 = hTMLPageResponse12.getResponseCode();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 100L + "'", long28 == 100L);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str29, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 97 + "'", int30 == 97);
    }

    @Test
    public void test09430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09430");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("100", "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.lang.String str3 = crawlerURL2.getReferer();
        java.lang.String str4 = crawlerURL2.toString();
        java.lang.String str5 = crawlerURL2.getHost();
        java.lang.String str6 = crawlerURL2.getHost();
        java.lang.String str7 = crawlerURL2.getReferer();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str3, "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CrawlerURL url:100" + "'", str4, "CrawlerURL url:100");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str7, "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
    }

    @Test
    public void test09431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09431");
        com.soulgalore.crawler.util.StatusCode statusCode0 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT;
        java.lang.String str1 = statusCode0.getFriendlyName();
        java.lang.String str2 = statusCode0.getFriendlyName();
        java.lang.String str3 = statusCode0.getFriendlyName();
        java.lang.String str4 = statusCode0.getFriendlyName();
        java.lang.String str5 = statusCode0.getFriendlyName();
        int int6 = statusCode0.getCode();
        java.lang.String str7 = statusCode0.getFriendlyName();
        org.junit.Assert.assertTrue("'" + statusCode0 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT + "'", statusCode0.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Response timed out" + "'", str1, "Response timed out");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Response timed out" + "'", str2, "Response timed out");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Response timed out" + "'", str3, "Response timed out");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Response timed out" + "'", str4, "Response timed out");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Response timed out" + "'", str5, "Response timed out");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 580 + "'", int6 == 580);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Response timed out" + "'", str7, "Response timed out");
    }

    @Test
    public void test09432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09432");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setNotOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setOnlyOnPath("AssetResponseCallable url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test09433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09433");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        java.lang.String str15 = hTMLPageResponse12.toString();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        java.lang.String str17 = hTMLPageResponse12.getResponseType();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder18.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder18.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder24.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder24.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder28.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder30.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder30.setOnlyOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder34.setOnlyOnPath("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder34.setStartUrl("52");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder34.setRequestHeaders("AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
        boolean boolean41 = hTMLPageResponse12.equals((java.lang.Object) "AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
        int int42 = hTMLPageResponse12.getResponseCode();
        java.lang.String str43 = hTMLPageResponse12.getUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str15, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 97 + "'", int42 == 97);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "com.soulgalore.crawler.auth" + "'", str43, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test09434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09434");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "com.soulgalore.crawler.auth");
        java.lang.String str3 = crawlerURL2.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration8 = builder7.build();
        java.lang.String str9 = crawlerConfiguration8.getOnlyOnPath();
        boolean boolean10 = crawlerConfiguration8.isVerifyUrls();
        int int11 = crawlerConfiguration8.getMaxLevels();
        int int12 = crawlerConfiguration8.getMaxLevels();
        boolean boolean13 = crawlerConfiguration8.isVerifyUrls();
        boolean boolean14 = crawlerConfiguration8.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = crawlerConfiguration8.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse21 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap15, "Unknown error", "com.soulgalore.crawler.http.socket.timeout", (long) 10, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", 0L);
        java.lang.String str22 = hTMLPageResponse21.getResponseType();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL25 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean26 = crawlerURL25.isWrongSyntax();
        java.lang.String str27 = crawlerURL25.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse35 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL25, (int) 'a', strMap29, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str36 = hTMLPageResponse35.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean38 = hTMLPageResponse35.equals((java.lang.Object) builder37);
        long long39 = hTMLPageResponse35.getFetchTime();
        org.jsoup.nodes.Document document40 = hTMLPageResponse35.getBody();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder41 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder43 = builder41.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder45 = builder41.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration46 = builder41.build();
        java.lang.String str47 = crawlerConfiguration46.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = crawlerConfiguration46.getRequestHeadersMap();
        boolean boolean49 = crawlerConfiguration46.isVerifyUrls();
        java.lang.String str50 = crawlerConfiguration46.getStartUrl();
        boolean boolean51 = crawlerConfiguration46.isVerifyUrls();
        com.soulgalore.crawler.util.StatusCode statusCode52 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT;
        int int53 = statusCode52.getCode();
        int int54 = statusCode52.getCode();
        java.lang.String str55 = statusCode52.getFriendlyName();
        java.lang.String str56 = statusCode52.getFriendlyName();
        java.lang.String str57 = statusCode52.getFriendlyName();
        boolean boolean58 = crawlerConfiguration46.equals((java.lang.Object) str57);
        java.lang.String str59 = crawlerConfiguration46.getRequestHeaders();
        boolean boolean60 = hTMLPageResponse35.equals((java.lang.Object) crawlerConfiguration46);
        int int61 = hTMLPageResponse35.getResponseCode();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder62 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder64 = builder62.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder66 = builder62.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder68 = builder62.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder70 = builder68.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder72 = builder70.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder74 = builder70.setMaxLevels(10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder76 = builder74.setNotOnPath("result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder78 = builder74.setOnlyOnPath("HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder80 = builder78.setRequestHeaders("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout");
        boolean boolean81 = hTMLPageResponse35.equals((java.lang.Object) builder80);
        boolean boolean82 = hTMLPageResponse21.equals((java.lang.Object) boolean81);
        org.jsoup.nodes.Document document83 = hTMLPageResponse21.getBody();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "CrawlerURL url:urls.txt" + "'", str3, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(crawlerConfiguration8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str22, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "urls.txt" + "'", str27, "urls.txt");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "com.soulgalore.crawler.auth" + "'", str36, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 100L + "'", long39 == 100L);
        org.junit.Assert.assertNull(document40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(crawlerConfiguration46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + statusCode52 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT + "'", statusCode52.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 580 + "'", int53 == 580);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 580 + "'", int54 == 580);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Response timed out" + "'", str55, "Response timed out");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Response timed out" + "'", str56, "Response timed out");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Response timed out" + "'", str57, "Response timed out");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 97 + "'", int61 == 97);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(document83);
    }

    @Test
    public void test09435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09435");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder4.setOnlyOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setMaxLevels((int) (byte) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder12.build();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = crawlerConfiguration15.getRequestHeadersMap();
        java.lang.String str17 = crawlerConfiguration15.getOnlyOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "errorassets.csv" + "'", str17, "errorassets.csv");
    }

    @Test
    public void test09436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09436");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", "AssetResponseCallable url:AssetResponseCallable url:errorassets.csv", (int) (byte) 1, (long) 308);
        java.lang.String str5 = assetResponse4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str5, "AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
    }

    @Test
    public void test09437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09437");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = assetsVerificationResult6.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray11 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, assetResponseArray11);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray14 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet15 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15, assetResponseArray14);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult17 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray18 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet19 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet19, assetResponseArray18);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray21 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, assetResponseArray21);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult24 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet19, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = assetsVerificationResult24.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult26 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15, assetResponseSet25);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet27 = assetsVerificationResult26.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet28 = assetsVerificationResult26.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = assetsVerificationResult26.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet30 = assetsVerificationResult26.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet31 = assetsVerificationResult26.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult32 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet10, assetResponseSet31);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet33 = assetsVerificationResult32.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet34 = assetsVerificationResult32.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet35 = assetsVerificationResult32.getWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseSet9);
        org.junit.Assert.assertNotNull(assetResponseSet10);
        org.junit.Assert.assertNotNull(assetResponseArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(assetResponseArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(assetResponseArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(assetResponseArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(assetResponseSet25);
        org.junit.Assert.assertNotNull(assetResponseSet27);
        org.junit.Assert.assertNotNull(assetResponseSet28);
        org.junit.Assert.assertNotNull(assetResponseSet29);
        org.junit.Assert.assertNotNull(assetResponseSet30);
        org.junit.Assert.assertNotNull(assetResponseSet31);
        org.junit.Assert.assertNotNull(assetResponseSet33);
        org.junit.Assert.assertNotNull(assetResponseSet34);
        org.junit.Assert.assertNotNull(assetResponseSet35);
    }

    @Test
    public void test09438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09438");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        com.soulgalore.crawler.util.StatusCode statusCode6 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN;
        boolean boolean7 = crawlerConfiguration3.equals((java.lang.Object) statusCode6);
        java.lang.String str8 = statusCode6.getFriendlyName();
        int int9 = statusCode6.getCode();
        java.lang.String str10 = statusCode6.getFriendlyName();
        java.lang.String str11 = statusCode6.getFriendlyName();
        int int12 = statusCode6.getCode();
        int int13 = statusCode6.getCode();
        java.lang.String str14 = statusCode6.getFriendlyName();
        java.lang.String str15 = statusCode6.getFriendlyName();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + statusCode6 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN + "'", statusCode6.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Unknown error" + "'", str8, "Unknown error");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 581 + "'", int9 == 581);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Unknown error" + "'", str10, "Unknown error");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Unknown error" + "'", str11, "Unknown error");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 581 + "'", int12 == 581);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 581 + "'", int13 == 581);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Unknown error" + "'", str14, "Unknown error");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Unknown error" + "'", str15, "Unknown error");
    }

    @Test
    public void test09439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09439");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder4.setOnlyOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder4.setNotOnPath("CrawlerURL url:AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder4.build();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
    }

    @Test
    public void test09440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09440");
        com.soulgalore.crawler.util.StatusCode statusCode0 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT;
        int int1 = statusCode0.getCode();
        java.lang.String str2 = statusCode0.getFriendlyName();
        int int3 = statusCode0.getCode();
        int int4 = statusCode0.getCode();
        java.lang.String str5 = statusCode0.getFriendlyName();
        org.junit.Assert.assertTrue("'" + statusCode0 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT + "'", statusCode0.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 580 + "'", int1 == 580);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Response timed out" + "'", str2, "Response timed out");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 580 + "'", int3 == 580);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 580 + "'", int4 == 580);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Response timed out" + "'", str5, "Response timed out");
    }

    @Test
    public void test09441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09441");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:-1encoding:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads type:AssetResponseCallable url:errorassets.csv", "CrawlerURL url:Wrong content type");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("52", "Redirected to new domain");
        java.lang.String str7 = crawlerURL6.getUrl();
        java.net.URI uRI8 = crawlerURL6.getUri();
        boolean boolean9 = crawlerURL2.equals((java.lang.Object) uRI8);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "52" + "'", str7, "52");
        org.junit.Assert.assertNull(uRI8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test09442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09442");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder3 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder3.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration6 = builder5.build();
        java.lang.String str7 = crawlerConfiguration6.getStartUrl();
        int int8 = crawlerConfiguration6.getMaxLevels();
        int int9 = crawlerConfiguration6.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean13 = crawlerURL12.isWrongSyntax();
        java.lang.String str14 = crawlerURL12.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse22 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL12, (int) 'a', strMap16, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str23 = hTMLPageResponse22.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = hTMLPageResponse22.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = hTMLPageResponse22.getResponseHeaders();
        java.lang.String str26 = hTMLPageResponse22.getUrl();
        org.jsoup.nodes.Document document27 = hTMLPageResponse22.getBody();
        boolean boolean28 = crawlerConfiguration6.equals((java.lang.Object) hTMLPageResponse22);
        boolean boolean29 = crawlerURL1.equals((java.lang.Object) hTMLPageResponse22);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder31.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration34 = builder33.build();
        java.lang.String str35 = crawlerConfiguration34.getStartUrl();
        int int36 = crawlerConfiguration34.getMaxLevels();
        int int37 = crawlerConfiguration34.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = crawlerConfiguration34.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse44 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 582, strMap38, "urls.txt", "hi!", (long) (short) 0, "AssetResponseCallable url:result.csv", 10L);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL45 = hTMLPageResponse44.getPageUrl();
        java.lang.String str47 = hTMLPageResponse44.getHeaderValue("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        org.jsoup.nodes.Document document48 = hTMLPageResponse44.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL49 = hTMLPageResponse44.getPageUrl();
        org.jsoup.nodes.Document document50 = hTMLPageResponse44.getBody();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(crawlerConfiguration6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "urls.txt" + "'", str14, "urls.txt");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str23, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "com.soulgalore.crawler.auth" + "'", str26, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(crawlerConfiguration34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(crawlerURL45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(document48);
        org.junit.Assert.assertNotNull(crawlerURL49);
        org.junit.Assert.assertNull(document50);
    }

    @Test
    public void test09443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09443");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setStartUrl("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setMaxLevels((int) (byte) 10);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test09444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09444");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher32 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = builder33.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = builder33.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = builder33.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration40 = builder33.build();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = crawlerConfiguration40.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable43 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("CrawlerURL url:hi!", assetFetcher32, strMap41, "com.soulgalore.crawler.proxy");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse49 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 580, strMap41, "CrawlerURL url:urls.txt", "97", (long) (byte) -1, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 0);
        boolean boolean50 = crawlerURL2.isWrongSyntax();
        java.lang.String str51 = crawlerURL2.getUrl();
        java.lang.String str52 = crawlerURL2.getUrl();
        java.lang.String str53 = crawlerURL2.getReferer();
        java.lang.String str54 = crawlerURL2.toString();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(crawlerConfiguration40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "com.soulgalore.crawler.auth" + "'", str51, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "com.soulgalore.crawler.auth" + "'", str52, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "urls.txt" + "'", str53, "urls.txt");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str54, "CrawlerURL url:com.soulgalore.crawler.auth");
    }

    @Test
    public void test09445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09445");
        com.soulgalore.crawler.util.StatusCode statusCode0 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT;
        int int1 = statusCode0.getCode();
        int int2 = statusCode0.getCode();
        java.lang.String str3 = statusCode0.getFriendlyName();
        int int4 = statusCode0.getCode();
        java.lang.String str5 = statusCode0.getFriendlyName();
        int int6 = statusCode0.getCode();
        java.lang.String str7 = statusCode0.getFriendlyName();
        int int8 = statusCode0.getCode();
        org.junit.Assert.assertTrue("'" + statusCode0 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT + "'", statusCode0.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 580 + "'", int1 == 580);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 580 + "'", int2 == 580);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Response timed out" + "'", str3, "Response timed out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 580 + "'", int4 == 580);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Response timed out" + "'", str5, "Response timed out");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 580 + "'", int6 == 580);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Response timed out" + "'", str7, "Response timed out");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 580 + "'", int8 == 580);
    }

    @Test
    public void test09446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09446");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean4 = crawlerURL3.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI12 = crawlerURL11.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray13 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3, crawlerURL7, crawlerURL11 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet14, crawlerURLArray13);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray16 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet17, hTMLPageResponseArray16);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray23 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL22 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, crawlerURLArray23);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray27 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28, hTMLPageResponseArray27);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult30 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, hTMLPageResponseSet26, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult31 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet14, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet17, hTMLPageResponseSet26);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet32 = crawlerResult31.getUrls();
        java.lang.String str33 = crawlerResult31.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet34 = crawlerResult31.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet35 = crawlerResult31.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet36 = crawlerResult31.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet37 = crawlerResult31.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet38 = crawlerResult31.getVerifiedURLResponses();
        java.lang.String str39 = crawlerResult31.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet40 = crawlerResult31.getUrls();
        java.lang.String str41 = crawlerResult31.getTheStartPoint();
        java.lang.String str42 = crawlerResult31.getTheStartPoint();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(uRI12);
        org.junit.Assert.assertNotNull(crawlerURLArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "com.soulgalore.crawler.auth" + "'", str33, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet34);
        org.junit.Assert.assertNotNull(crawlerURLSet35);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet36);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet37);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "com.soulgalore.crawler.auth" + "'", str39, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURLSet40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "com.soulgalore.crawler.auth" + "'", str41, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "com.soulgalore.crawler.auth" + "'", str42, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test09447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09447");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider((int) (byte) -1, (int) (byte) 100, (int) 'a', "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"HTMLPageResponseurl\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09448");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean6 = crawlerURL5.isWrongSyntax();
        java.lang.String str7 = crawlerURL5.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse15 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) 'a', strMap9, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str16 = hTMLPageResponse15.getUrl();
        boolean boolean17 = crawlerURL1.equals((java.lang.Object) str16);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher20 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil21 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = headerUtil21.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable25 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher20, strMap23, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse31 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) 100, strMap23, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        org.jsoup.nodes.Document document32 = hTMLPageResponse31.getBody();
        int int33 = hTMLPageResponse31.getResponseCode();
        long long34 = hTMLPageResponse31.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL35 = hTMLPageResponse31.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL36 = hTMLPageResponse31.getPageUrl();
        java.lang.String str37 = hTMLPageResponse31.getResponseType();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "urls.txt" + "'", str7, "urls.txt");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(headerUtil21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(document32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 100L + "'", long34 == 100L);
        org.junit.Assert.assertNotNull(crawlerURL35);
        org.junit.Assert.assertNotNull(crawlerURL36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "errorurls.txt" + "'", str37, "errorurls.txt");
    }

    @Test
    public void test09449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09449");
        com.soulgalore.crawler.util.StatusCode statusCode0 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN;
        java.lang.String str1 = statusCode0.getFriendlyName();
        int int2 = statusCode0.getCode();
        int int3 = statusCode0.getCode();
        int int4 = statusCode0.getCode();
        int int5 = statusCode0.getCode();
        int int6 = statusCode0.getCode();
        java.lang.String str7 = statusCode0.getFriendlyName();
        java.lang.String str8 = statusCode0.getFriendlyName();
        org.junit.Assert.assertTrue("'" + statusCode0 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN + "'", statusCode0.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Unknown error" + "'", str1, "Unknown error");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 581 + "'", int2 == 581);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 581 + "'", int3 == 581);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 581 + "'", int4 == 581);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 581 + "'", int5 == 581);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 581 + "'", int6 == 581);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Unknown error" + "'", str7, "Unknown error");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Unknown error" + "'", str8, "Unknown error");
    }

    @Test
    public void test09450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09450");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setMaxLevels(10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder8.setOnlyOnPath("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder8.build();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:result.csv");
        java.lang.String str18 = crawlerURL17.getHost();
        boolean boolean19 = crawlerConfiguration15.equals((java.lang.Object) str18);
        java.lang.String str20 = crawlerConfiguration15.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "urls.txt" + "'", str20, "urls.txt");
    }

    @Test
    public void test09451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09451");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet12 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult11.getUrls();
        java.lang.String str14 = crawlerResult11.getTheStartPoint();
        java.lang.String str15 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet16 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = crawlerResult11.getUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet12);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet16);
        org.junit.Assert.assertNotNull(crawlerURLSet17);
    }

    @Test
    public void test09452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09452");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.lang.String str14 = hTMLPageResponse12.getResponseType();
        java.lang.String str15 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean21 = crawlerURL20.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder23.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration28 = builder23.build();
        java.lang.String str29 = crawlerConfiguration28.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = crawlerConfiguration28.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse36 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, (-1), strMap30, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL40 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI41 = crawlerURL40.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL45 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean46 = crawlerURL45.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder48 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder50 = builder48.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder52 = builder48.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration53 = builder48.build();
        java.lang.String str54 = crawlerConfiguration53.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = crawlerConfiguration53.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse61 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL45, (-1), strMap55, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse67 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL40, 100, strMap55, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse73 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, (int) (byte) 10, strMap55, "100", "errorassets.csv", (long) (byte) 100, "", (long) (short) 100);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse79 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL16, 100, strMap55, "com.soulgalore.crawler.nrofhttpthreads", "errorassets.csv", (long) 97, "result.csv", (long) (byte) -1);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL80 = hTMLPageResponse79.getPageUrl();
        java.lang.String str82 = hTMLPageResponse79.getHeaderValue("0");
        java.lang.String str83 = hTMLPageResponse79.toString();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse88 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.proxy", "", (int) (short) -1, (long) 583);
        java.lang.String str89 = assetResponse88.getUrl();
        long long90 = assetResponse88.getFetchTime();
        java.lang.String str91 = assetResponse88.getReferer();
        long long92 = assetResponse88.getFetchTime();
        boolean boolean93 = hTMLPageResponse79.equals((java.lang.Object) long92);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.auth" + "'", str15, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(crawlerConfiguration28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(uRI41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(crawlerConfiguration53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(crawlerURL80);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:errorassets.csv type:result.csv" + "'", str83, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:errorassets.csv type:result.csv");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "com.soulgalore.crawler.proxy" + "'", str89, "com.soulgalore.crawler.proxy");
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 583L + "'", long90 == 583L);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "" + "'", str91, "");
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 583L + "'", long92 == 583L);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test09453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09453");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.lang.String str30 = hTMLPageResponse29.getUrl();
        org.jsoup.nodes.Document document31 = hTMLPageResponse29.getBody();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = hTMLPageResponse29.getResponseHeaders();
        java.lang.String str33 = hTMLPageResponse29.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL34 = hTMLPageResponse29.getPageUrl();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "com.soulgalore.crawler.auth" + "'", str30, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Malformed url" + "'", str33, "Malformed url");
        org.junit.Assert.assertNotNull(crawlerURL34);
    }

    @Test
    public void test09454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09454");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder10.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration12 = builder10.build();
        boolean boolean13 = crawlerConfiguration12.isVerifyUrls();
        boolean boolean14 = crawlerConfiguration12.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = crawlerConfiguration12.getRequestHeadersMap();
        java.lang.String str16 = crawlerConfiguration12.getOnlyOnPath();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse21 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int22 = assetResponse21.getResponseCode();
        int int23 = assetResponse21.getResponseCode();
        long long24 = assetResponse21.getFetchTime();
        long long25 = assetResponse21.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse30 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean31 = assetResponse21.equals((java.lang.Object) 100L);
        java.lang.String str32 = assetResponse21.getReferer();
        java.lang.String str33 = assetResponse21.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder34.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder34.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder34.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder40.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder44 = builder40.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder46 = builder44.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder48 = builder46.setVerifyUrls(false);
        boolean boolean49 = assetResponse21.equals((java.lang.Object) false);
        java.lang.String str50 = assetResponse21.getReferer();
        java.lang.String str51 = assetResponse21.getReferer();
        java.lang.String str52 = assetResponse21.getReferer();
        long long53 = assetResponse21.getFetchTime();
        java.lang.String str54 = assetResponse21.getUrl();
        boolean boolean55 = crawlerConfiguration12.equals((java.lang.Object) assetResponse21);
        java.lang.String str56 = crawlerConfiguration12.getRequestHeaders();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertNotNull(crawlerConfiguration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "100" + "'", str32, "100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "100" + "'", str33, "100");
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "100" + "'", str50, "100");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "100" + "'", str51, "100");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "100" + "'", str52, "100");
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
    }

    @Test
    public void test09455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09455");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("", "AssetResponseCallable url:result.csv");
        java.lang.String str3 = crawlerURL2.getReferer();
        java.net.URI uRI4 = crawlerURL2.getUri();
        java.lang.String str5 = crawlerURL2.getHost();
        boolean boolean6 = crawlerURL2.isWrongSyntax();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AssetResponseCallable url:result.csv" + "'", str3, "AssetResponseCallable url:result.csv");
        org.junit.Assert.assertNull(uRI4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test09456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09456");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:10", "10", 0, (long) 97);
        long long5 = assetResponse4.getFetchTime();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 97L + "'", long5 == 97L);
    }

    @Test
    public void test09457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09457");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("", "AssetResponseCallable url:HTMLPageResponseurl:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1responseCode:10encoding:hi! type:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
    }

    @Test
    public void test09458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09458");
        com.soulgalore.crawler.util.StatusCode statusCode0 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN;
        int int1 = statusCode0.getCode();
        int int2 = statusCode0.getCode();
        int int3 = statusCode0.getCode();
        java.lang.String str4 = statusCode0.getFriendlyName();
        java.lang.String str5 = statusCode0.getFriendlyName();
        int int6 = statusCode0.getCode();
        java.lang.String str7 = statusCode0.getFriendlyName();
        org.junit.Assert.assertTrue("'" + statusCode0 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN + "'", statusCode0.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 581 + "'", int1 == 581);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 581 + "'", int2 == 581);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 581 + "'", int3 == 581);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Unknown error" + "'", str4, "Unknown error");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Unknown error" + "'", str5, "Unknown error");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 581 + "'", int6 == 581);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Unknown error" + "'", str7, "Unknown error");
    }

    @Test
    public void test09459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09459");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int19 = hTMLPageResponse18.getResponseCode();
        long long20 = hTMLPageResponse18.getFetchTime();
        long long21 = hTMLPageResponse18.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI25 = crawlerURL24.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean30 = crawlerURL29.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder32.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration37 = builder32.build();
        java.lang.String str38 = crawlerConfiguration37.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = crawlerConfiguration37.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, (-1), strMap39, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse51 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL24, 100, strMap39, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        boolean boolean52 = hTMLPageResponse18.equals((java.lang.Object) 100);
        org.jsoup.nodes.Document document53 = hTMLPageResponse18.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL54 = hTMLPageResponse18.getPageUrl();
        java.lang.String str55 = crawlerURL54.getReferer();
        boolean boolean56 = crawlerURL54.isWrongSyntax();
        boolean boolean57 = crawlerURL54.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder58 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder60 = builder58.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration61 = builder60.build();
        java.lang.String str62 = crawlerConfiguration61.getStartUrl();
        java.lang.String str63 = crawlerConfiguration61.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap64 = crawlerConfiguration61.getRequestHeadersMap();
        java.lang.String str65 = crawlerConfiguration61.getNotOnPath();
        int int66 = crawlerConfiguration61.getMaxLevels();
        java.lang.String str67 = crawlerConfiguration61.getRequestHeaders();
        java.lang.String str68 = crawlerConfiguration61.getStartUrl();
        boolean boolean69 = crawlerConfiguration61.isVerifyUrls();
        java.lang.String str70 = crawlerConfiguration61.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap71 = crawlerConfiguration61.getRequestHeadersMap();
        boolean boolean72 = crawlerURL54.equals((java.lang.Object) strMap71);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 580L + "'", long20 == 580L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 580L + "'", long21 == 580L);
        org.junit.Assert.assertNull(uRI25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(crawlerConfiguration37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(document53);
        org.junit.Assert.assertNotNull(crawlerURL54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "urls.txt" + "'", str55, "urls.txt");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(crawlerConfiguration61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test09460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09460");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet18 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray23 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL22 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, crawlerURLArray23);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray27 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28, hTMLPageResponseArray27);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult30 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, hTMLPageResponseSet26, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28);
        java.lang.String str31 = crawlerResult30.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet32 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet33 = crawlerResult30.getNonWorkingUrls();
        java.lang.String str34 = crawlerResult30.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet35 = crawlerResult30.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray40 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL39 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, crawlerURLArray40);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray44 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet45 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45, hTMLPageResponseArray44);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult47 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, hTMLPageResponseSet43, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45);
        java.lang.String str48 = crawlerResult47.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet49 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet50 = crawlerResult47.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult51 = new com.soulgalore.crawler.core.CrawlerResult("CrawlerURL url:urls.txt", crawlerURLSet18, hTMLPageResponseSet35, hTMLPageResponseSet50);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet52 = crawlerResult51.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet53 = crawlerResult51.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet54 = crawlerResult51.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet55 = crawlerResult51.getVerifiedURLResponses();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet17);
        org.junit.Assert.assertNotNull(crawlerURLSet18);
        org.junit.Assert.assertNotNull(crawlerURLArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet32);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet35);
        org.junit.Assert.assertNotNull(crawlerURLArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet49);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet50);
        org.junit.Assert.assertNotNull(crawlerURLSet52);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet53);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet54);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet55);
    }

    @Test
    public void test09461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09461");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:HTMLPageResponseurl:hi!responseCode:-1encoding:errorurls.txt type:result.csv", "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:", 0, (long) 581);
    }

    @Test
    public void test09462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09462");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        long long17 = hTMLPageResponse12.getFetchTime();
        java.lang.String str18 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = hTMLPageResponse12.getPageUrl();
        org.jsoup.nodes.Document document20 = hTMLPageResponse12.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = hTMLPageResponse12.getPageUrl();
        java.lang.String str22 = hTMLPageResponse12.getUrl();
        java.lang.String str23 = hTMLPageResponse12.getResponseType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 100L + "'", long17 == 100L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str18, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL19);
        org.junit.Assert.assertNull(document20);
        org.junit.Assert.assertNotNull(crawlerURL21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "com.soulgalore.crawler.auth" + "'", str22, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
    }

    @Test
    public void test09463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09463");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet18 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray23 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL22 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, crawlerURLArray23);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray27 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28, hTMLPageResponseArray27);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult30 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, hTMLPageResponseSet26, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28);
        java.lang.String str31 = crawlerResult30.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet32 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet33 = crawlerResult30.getNonWorkingUrls();
        java.lang.String str34 = crawlerResult30.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet35 = crawlerResult30.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray40 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL39 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, crawlerURLArray40);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray44 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet45 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45, hTMLPageResponseArray44);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult47 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, hTMLPageResponseSet43, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45);
        java.lang.String str48 = crawlerResult47.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet49 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet50 = crawlerResult47.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult51 = new com.soulgalore.crawler.core.CrawlerResult("CrawlerURL url:urls.txt", crawlerURLSet18, hTMLPageResponseSet35, hTMLPageResponseSet50);
        java.lang.String str52 = crawlerResult51.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet53 = crawlerResult51.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet54 = crawlerResult51.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet55 = crawlerResult51.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet56 = crawlerResult51.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet57 = crawlerResult51.getUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet17);
        org.junit.Assert.assertNotNull(crawlerURLSet18);
        org.junit.Assert.assertNotNull(crawlerURLArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet32);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet35);
        org.junit.Assert.assertNotNull(crawlerURLArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet49);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "CrawlerURL url:urls.txt" + "'", str52, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertNotNull(crawlerURLSet53);
        org.junit.Assert.assertNotNull(crawlerURLSet54);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet55);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet56);
        org.junit.Assert.assertNotNull(crawlerURLSet57);
    }

    @Test
    public void test09464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09464");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray21 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL20 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet22, crawlerURLArray21);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet24 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray25 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet26, hTMLPageResponseArray25);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult28 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet22, hTMLPageResponseSet24, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet26);
        java.lang.String str29 = crawlerResult28.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet30 = crawlerResult28.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet31 = crawlerResult28.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL35 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean36 = crawlerURL35.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean40 = crawlerURL39.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL43 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI44 = crawlerURL43.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray45 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL35, crawlerURL39, crawlerURL43 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet46 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet46, crawlerURLArray45);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray48 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet49 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet49, hTMLPageResponseArray48);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL54 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray55 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL54 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet56 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet56, crawlerURLArray55);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet58 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray59 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet60 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet60, hTMLPageResponseArray59);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult62 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet56, hTMLPageResponseSet58, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet60);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult63 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet46, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet49, hTMLPageResponseSet58);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet64 = crawlerResult63.getVerifiedURLResponses();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult65 = new com.soulgalore.crawler.core.CrawlerResult("errorurls.txt", crawlerURLSet16, hTMLPageResponseSet31, hTMLPageResponseSet64);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet66 = crawlerResult65.getUrls();
        java.lang.String str67 = crawlerResult65.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet68 = crawlerResult65.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet69 = crawlerResult65.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet70 = crawlerResult65.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet71 = crawlerResult65.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet72 = crawlerResult65.getUrls();
        java.lang.String str73 = crawlerResult65.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet74 = crawlerResult65.getNonWorkingUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(crawlerURLArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet30);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(uRI44);
        org.junit.Assert.assertNotNull(crawlerURLArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet64);
        org.junit.Assert.assertNotNull(crawlerURLSet66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "errorurls.txt" + "'", str67, "errorurls.txt");
        org.junit.Assert.assertNotNull(crawlerURLSet68);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet69);
        org.junit.Assert.assertNotNull(crawlerURLSet70);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet71);
        org.junit.Assert.assertNotNull(crawlerURLSet72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "errorurls.txt" + "'", str73, "errorurls.txt");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet74);
    }

    @Test
    public void test09465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09465");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str7 = crawlerConfiguration5.getRequestHeaders();
        boolean boolean9 = crawlerConfiguration5.equals((java.lang.Object) 0.0d);
        java.lang.String str10 = crawlerConfiguration5.getNotOnPath();
        java.lang.String str11 = crawlerConfiguration5.getNotOnPath();
        java.lang.String str12 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str13 = crawlerConfiguration5.getStartUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test09466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09466");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("Unknown error", "CrawlerURL url:urls.txt", 583, (long) 10);
        com.soulgalore.crawler.util.StatusCode statusCode5 = com.soulgalore.crawler.util.StatusCode.SC_MALFORMED_URI;
        java.lang.String str6 = statusCode5.getFriendlyName();
        boolean boolean7 = assetResponse4.equals((java.lang.Object) statusCode5);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = null;
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray9 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, assetResponseArray9);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray12 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13, assetResponseArray12);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult15 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet16 = assetsVerificationResult15.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet17 = assetsVerificationResult15.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = assetsVerificationResult15.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet19 = null;
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray20 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet21 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21, assetResponseArray20);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray23 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet24, assetResponseArray23);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult26 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet24);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet27 = assetsVerificationResult26.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray28 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, assetResponseArray28);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray31 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet32 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32, assetResponseArray31);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult34 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult35 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet27, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult36 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet19, assetResponseSet27);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult37 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet18, assetResponseSet27);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet38 = assetsVerificationResult37.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet39 = assetsVerificationResult37.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = assetsVerificationResult37.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult41 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet8, assetResponseSet40);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet42 = assetsVerificationResult41.getWorkingAssets();
        boolean boolean43 = assetResponse4.equals((java.lang.Object) assetResponseSet42);
        org.junit.Assert.assertTrue("'" + statusCode5 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_MALFORMED_URI + "'", statusCode5.equals(com.soulgalore.crawler.util.StatusCode.SC_MALFORMED_URI));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Malformed url" + "'", str6, "Malformed url");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(assetResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(assetResponseArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(assetResponseSet16);
        org.junit.Assert.assertNotNull(assetResponseSet17);
        org.junit.Assert.assertNotNull(assetResponseSet18);
        org.junit.Assert.assertNotNull(assetResponseArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(assetResponseArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(assetResponseSet27);
        org.junit.Assert.assertNotNull(assetResponseArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(assetResponseArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(assetResponseSet38);
        org.junit.Assert.assertNotNull(assetResponseSet39);
        org.junit.Assert.assertNotNull(assetResponseSet40);
        org.junit.Assert.assertNull(assetResponseSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test09467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09467");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        java.lang.String str17 = hTMLPageResponse12.toString();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = hTMLPageResponse12.getResponseHeaders();
        org.jsoup.nodes.Document document19 = hTMLPageResponse12.getBody();
        java.lang.String str20 = hTMLPageResponse12.getResponseType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str17, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(document19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test09468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09468");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI6 = crawlerURL5.getUri();
        boolean boolean7 = crawlerURL5.isWrongSyntax();
        java.lang.String str8 = crawlerURL5.getHost();
        java.net.URI uRI9 = crawlerURL5.getUri();
        java.net.URI uRI10 = crawlerURL5.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI15 = crawlerURL14.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration20 = builder19.build();
        java.lang.String str21 = crawlerConfiguration20.getStartUrl();
        int int22 = crawlerConfiguration20.getMaxLevels();
        int int23 = crawlerConfiguration20.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = crawlerConfiguration20.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse30 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL14, (int) (short) 10, strMap24, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int31 = hTMLPageResponse30.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = hTMLPageResponse30.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse38 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, 0, strMap32, "CrawlerURL url:result.csv", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) 583, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (byte) 1);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse44 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) 'a', strMap32, "AssetResponseCallable url:com.soulgalore.crawler.auth", "AssetResponseCallable url:errorassets.csv", (long) 100, "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", 35L);
        java.lang.String str45 = crawlerURL1.getUrl();
        java.net.URI uRI46 = crawlerURL1.getUri();
        java.net.URI uRI47 = crawlerURL1.getUri();
        java.lang.Object obj48 = null;
        boolean boolean49 = crawlerURL1.equals(obj48);
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertNull(uRI6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(uRI9);
        org.junit.Assert.assertNull(uRI10);
        org.junit.Assert.assertNull(uRI15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(crawlerConfiguration20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str45, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNull(uRI46);
        org.junit.Assert.assertNull(uRI47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test09469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09469");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL15 = hTMLPageResponse12.getPageUrl();
        boolean boolean16 = crawlerURL15.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration22 = builder17.build();
        java.lang.String str23 = crawlerConfiguration22.getRequestHeaders();
        java.lang.String str24 = crawlerConfiguration22.getRequestHeaders();
        java.lang.String str25 = crawlerConfiguration22.getStartUrl();
        boolean boolean26 = crawlerConfiguration22.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = crawlerConfiguration22.getRequestHeadersMap();
        java.lang.String str28 = crawlerConfiguration22.getNotOnPath();
        boolean boolean29 = crawlerURL15.equals((java.lang.Object) crawlerConfiguration22);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = crawlerConfiguration22.getRequestHeadersMap();
        java.lang.String str31 = crawlerConfiguration22.getRequestHeaders();
        java.lang.String str32 = crawlerConfiguration22.getRequestHeaders();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(crawlerURL15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(crawlerConfiguration22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
    }

    @Test
    public void test09470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09470");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        java.net.URI uRI4 = crawlerURL2.getUri();
        java.lang.String str5 = crawlerURL2.getHost();
        java.lang.String str6 = crawlerURL2.toString();
        boolean boolean7 = crawlerURL2.isWrongSyntax();
        boolean boolean8 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:", "HTMLPageResponseurl:CrawlerURL url:com.soulgalore.crawler.authresponseCode:0encoding:CrawlerURL url:result.csv type:-1");
        java.lang.String str12 = crawlerURL11.getReferer();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher15 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher17 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil18 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = headerUtil18.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable22 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher17, strMap20, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable24 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("com.soulgalore.crawler.auth", assetFetcher15, strMap20, "urls.txt");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse30 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL11, 0, strMap20, "CrawlerURL url:Response timed out", "CrawlerURL url:HTMLPageResponseurl:CrawlerURL url:com.soulgalore.crawler.authresponseCode:0encoding:CrawlerURL url:result.csv type:-1", 1L, "HTMLPageResponseurl:hi!responseCode:10encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", (long) '4');
        boolean boolean31 = crawlerURL2.equals((java.lang.Object) hTMLPageResponse30);
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertNull(uRI4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str6, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "HTMLPageResponseurl:CrawlerURL url:com.soulgalore.crawler.authresponseCode:0encoding:CrawlerURL url:result.csv type:-1" + "'", str12, "HTMLPageResponseurl:CrawlerURL url:com.soulgalore.crawler.authresponseCode:0encoding:CrawlerURL url:result.csv type:-1");
        org.junit.Assert.assertNotNull(headerUtil18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test09471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09471");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setOnlyOnPath("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder6.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setNotOnPath("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setVerifyUrls(false);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test09472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09472");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        int int5 = crawlerConfiguration3.getMaxLevels();
        int int6 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        int int8 = crawlerConfiguration3.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder9.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration14 = builder9.build();
        int int15 = crawlerConfiguration14.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil16 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean17 = crawlerConfiguration14.equals((java.lang.Object) headerUtil16);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = headerUtil16.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap21 = headerUtil16.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap23 = headerUtil16.createHeadersFromString("AssetResponseCallable url:result.csv");
        boolean boolean24 = crawlerConfiguration3.equals((java.lang.Object) strMap23);
        java.lang.String str25 = crawlerConfiguration3.getNotOnPath();
        boolean boolean26 = crawlerConfiguration3.isVerifyUrls();
        boolean boolean27 = crawlerConfiguration3.isVerifyUrls();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder28.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder28.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setStartUrl("-1");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration35 = builder34.build();
        java.lang.String str36 = crawlerConfiguration35.getNotOnPath();
        boolean boolean37 = crawlerConfiguration35.isVerifyUrls();
        java.lang.String str38 = crawlerConfiguration35.getStartUrl();
        boolean boolean39 = crawlerConfiguration3.equals((java.lang.Object) crawlerConfiguration35);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(crawlerConfiguration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(headerUtil16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(crawlerConfiguration35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1" + "'", str38, "-1");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test09473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09473");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setRequestHeaders("CrawlerURL url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setMaxLevels((int) 'a');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setNotOnPath("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:97encoding:52 type:CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test09474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09474");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        int int6 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil7 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean8 = crawlerConfiguration5.equals((java.lang.Object) headerUtil7);
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil7.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil7.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil7.createHeadersFromString("AssetResponseCallable url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap16 = headerUtil7.createHeadersFromString("AssetResponseCallable url:Unknown error");
        java.util.Map<java.lang.String, java.lang.String> strMap18 = headerUtil7.createHeadersFromString("AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
        java.util.Map<java.lang.String, java.lang.String> strMap20 = headerUtil7.createHeadersFromString("CrawlerURL url:Wrong content type");
        java.util.Map<java.lang.String, java.lang.String> strMap22 = headerUtil7.createHeadersFromString("HTMLPageResponseurl:Wrong content typeresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads type:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(headerUtil7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap22);
    }

    @Test
    public void test09475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09475");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        boolean boolean6 = crawlerConfiguration3.equals((java.lang.Object) true);
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL10 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean11 = crawlerURL10.isWrongSyntax();
        java.lang.String str12 = crawlerURL10.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse20 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL10, (int) 'a', strMap14, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str21 = hTMLPageResponse20.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = hTMLPageResponse20.getPageUrl();
        boolean boolean23 = crawlerConfiguration3.equals((java.lang.Object) crawlerURL22);
        java.lang.String str24 = crawlerConfiguration3.getOnlyOnPath();
        java.lang.String str25 = crawlerConfiguration3.getStartUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "urls.txt" + "'", str12, "urls.txt");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str21, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test09476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09476");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        java.lang.String str20 = hTMLPageResponse18.getHeaderValue("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = hTMLPageResponse18.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = hTMLPageResponse18.getPageUrl();
        java.lang.String str23 = hTMLPageResponse18.getEncoding();
        long long24 = hTMLPageResponse18.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL25 = hTMLPageResponse18.getPageUrl();
        java.lang.String str26 = hTMLPageResponse18.getUrl();
        java.lang.String str27 = hTMLPageResponse18.getResponseType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(crawlerURL21);
        org.junit.Assert.assertNotNull(crawlerURL22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "errorurls.txt" + "'", str23, "errorurls.txt");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 580L + "'", long24 == 580L);
        org.junit.Assert.assertNotNull(crawlerURL25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "com.soulgalore.crawler.auth" + "'", str26, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "com.soulgalore.crawler.auth" + "'", str27, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test09477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09477");
        com.soulgalore.crawler.util.StatusCode statusCode0 = com.soulgalore.crawler.util.StatusCode.SC_WRONG_CONTENT_TYPE;
        int int1 = statusCode0.getCode();
        java.lang.String str2 = statusCode0.getFriendlyName();
        java.lang.String str3 = statusCode0.getFriendlyName();
        int int4 = statusCode0.getCode();
        java.lang.String str5 = statusCode0.getFriendlyName();
        int int6 = statusCode0.getCode();
        int int7 = statusCode0.getCode();
        java.lang.String str8 = statusCode0.getFriendlyName();
        int int9 = statusCode0.getCode();
        org.junit.Assert.assertTrue("'" + statusCode0 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_WRONG_CONTENT_TYPE + "'", statusCode0.equals(com.soulgalore.crawler.util.StatusCode.SC_WRONG_CONTENT_TYPE));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 583 + "'", int1 == 583);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Wrong content type" + "'", str2, "Wrong content type");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Wrong content type" + "'", str3, "Wrong content type");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 583 + "'", int4 == 583);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Wrong content type" + "'", str5, "Wrong content type");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 583 + "'", int6 == 583);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 583 + "'", int7 == 583);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Wrong content type" + "'", str8, "Wrong content type");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 583 + "'", int9 == 583);
    }

    @Test
    public void test09478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09478");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        boolean boolean15 = crawlerURL14.isWrongSyntax();
        java.net.URI uRI16 = crawlerURL14.getUri();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher19 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI25 = crawlerURL24.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL28 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean29 = crawlerURL28.isWrongSyntax();
        java.lang.String str30 = crawlerURL28.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse38 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL28, (int) 'a', strMap32, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str39 = hTMLPageResponse38.getUrl();
        boolean boolean40 = crawlerURL24.equals((java.lang.Object) str39);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher43 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil44 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = headerUtil44.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable48 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher43, strMap46, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse54 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL24, (int) (short) 100, strMap46, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse60 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL21, (int) (short) -1, strMap46, "com.soulgalore.crawler.http.socket.timeout", "errorurls.txt", (long) 100, "result.csv", (long) (short) 0);
        java.util.Map<java.lang.String, java.lang.String> strMap61 = hTMLPageResponse60.getResponseHeaders();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable63 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("com.soulgalore.crawler.nrofhttpthreads", assetFetcher19, strMap61, "HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse69 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL14, 580, strMap61, "AssetResponseCallable url:com.soulgalore.crawler.auth", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:100 type:com.soulgalore.crawler.http.socket.timeout", 0L, "Malformed url", (long) 580);
        java.util.Map<java.lang.String, java.lang.String> strMap70 = hTMLPageResponse69.getResponseHeaders();
        java.lang.String str71 = hTMLPageResponse69.getResponseType();
        java.util.Map<java.lang.String, java.lang.String> strMap72 = hTMLPageResponse69.getResponseHeaders();
        java.lang.String str74 = hTMLPageResponse69.getHeaderValue("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(uRI16);
        org.junit.Assert.assertNull(uRI25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "urls.txt" + "'", str30, "urls.txt");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "com.soulgalore.crawler.auth" + "'", str39, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(headerUtil44);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Malformed url" + "'", str71, "Malformed url");
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNull(str74);
    }

    @Test
    public void test09479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09479");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:urls.txt");
        java.lang.String str2 = crawlerURL1.getReferer();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray7 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL6 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet8 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet8, crawlerURLArray7);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray11 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet12 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet12, hTMLPageResponseArray11);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult14 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet8, hTMLPageResponseSet10, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet12);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult14.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult14.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = crawlerResult14.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet18 = crawlerResult14.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet19 = crawlerResult14.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet20 = crawlerResult14.getNonWorkingUrls();
        java.lang.String str21 = crawlerResult14.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet22 = crawlerResult14.getUrls();
        boolean boolean23 = crawlerURL1.equals((java.lang.Object) crawlerResult14);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet24 = crawlerResult14.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet25 = crawlerResult14.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet26 = crawlerResult14.getUrls();
        java.lang.String str27 = crawlerResult14.getTheStartPoint();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(crawlerURLArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(crawlerURLSet17);
        org.junit.Assert.assertNotNull(crawlerURLSet18);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet19);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet24);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet25);
        org.junit.Assert.assertNotNull(crawlerURLSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
    }

    @Test
    public void test09480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09480");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider((int) (byte) 100, (int) (byte) 10, (int) (short) 1, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:urls.txt type:", "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"com.soulgalore.crawler.authresponseCode\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09481");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray5 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet6, assetResponseArray5);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray8 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet9, assetResponseArray8);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult11 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet6, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = assetsVerificationResult11.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = assetsVerificationResult11.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet14 = assetsVerificationResult11.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet15 = assetsVerificationResult11.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray16 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet17 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet17, assetResponseArray16);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray19 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet20, assetResponseArray19);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult22 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet17, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet20);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet23 = assetsVerificationResult22.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult24 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet15, assetResponseSet23);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = assetsVerificationResult24.getNonWorkingAssets();
        boolean boolean26 = crawlerURL2.equals((java.lang.Object) assetsVerificationResult24);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet27 = assetsVerificationResult24.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray28 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, assetResponseArray28);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray31 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet32 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32, assetResponseArray31);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult34 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet35 = assetsVerificationResult34.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet36 = assetsVerificationResult34.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet37 = assetsVerificationResult34.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult38 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet27, assetResponseSet37);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet39 = assetsVerificationResult38.getWorkingAssets();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNotNull(assetResponseArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(assetResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(assetResponseSet12);
        org.junit.Assert.assertNotNull(assetResponseSet13);
        org.junit.Assert.assertNotNull(assetResponseSet14);
        org.junit.Assert.assertNotNull(assetResponseSet15);
        org.junit.Assert.assertNotNull(assetResponseArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(assetResponseArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(assetResponseSet23);
        org.junit.Assert.assertNotNull(assetResponseSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(assetResponseSet27);
        org.junit.Assert.assertNotNull(assetResponseArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(assetResponseArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(assetResponseSet35);
        org.junit.Assert.assertNotNull(assetResponseSet36);
        org.junit.Assert.assertNotNull(assetResponseSet37);
        org.junit.Assert.assertNotNull(assetResponseSet39);
    }

    @Test
    public void test09482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09482");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet18 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray23 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL22 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, crawlerURLArray23);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray27 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28, hTMLPageResponseArray27);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult30 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, hTMLPageResponseSet26, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28);
        java.lang.String str31 = crawlerResult30.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet32 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet33 = crawlerResult30.getNonWorkingUrls();
        java.lang.String str34 = crawlerResult30.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet35 = crawlerResult30.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray40 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL39 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, crawlerURLArray40);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray44 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet45 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45, hTMLPageResponseArray44);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult47 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, hTMLPageResponseSet43, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45);
        java.lang.String str48 = crawlerResult47.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet49 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet50 = crawlerResult47.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult51 = new com.soulgalore.crawler.core.CrawlerResult("CrawlerURL url:urls.txt", crawlerURLSet18, hTMLPageResponseSet35, hTMLPageResponseSet50);
        java.lang.String str52 = crawlerResult51.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet53 = crawlerResult51.getUrls();
        java.lang.String str54 = crawlerResult51.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet55 = crawlerResult51.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet56 = crawlerResult51.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet57 = crawlerResult51.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet58 = crawlerResult51.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet59 = crawlerResult51.getNonWorkingUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet17);
        org.junit.Assert.assertNotNull(crawlerURLSet18);
        org.junit.Assert.assertNotNull(crawlerURLArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet32);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet35);
        org.junit.Assert.assertNotNull(crawlerURLArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet49);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "CrawlerURL url:urls.txt" + "'", str52, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertNotNull(crawlerURLSet53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "CrawlerURL url:urls.txt" + "'", str54, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet55);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet56);
        org.junit.Assert.assertNotNull(crawlerURLSet57);
        org.junit.Assert.assertNotNull(crawlerURLSet58);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet59);
    }

    @Test
    public void test09483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09483");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setNotOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setMaxLevels((int) (byte) -1);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder10.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder10.setStartUrl("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setRequestHeaders("CrawlerURL url:AssetResponseCallable url:100");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration16 = builder13.build();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(crawlerConfiguration16);
    }

    @Test
    public void test09484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09484");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.lang.String str12 = crawlerResult11.getTheStartPoint();
        java.lang.String str13 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet14 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet16 = crawlerResult11.getNonWorkingUrls();
        java.lang.String str17 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet18 = crawlerResult11.getUrls();
        java.lang.String str19 = crawlerResult11.getTheStartPoint();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet20 = crawlerResult11.getVerifiedURLResponses();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet14);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet15);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
    }

    @Test
    public void test09485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09485");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:");
    }

    @Test
    public void test09486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09486");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        int int6 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil7 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean8 = crawlerConfiguration5.equals((java.lang.Object) headerUtil7);
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil7.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil7.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil7.createHeadersFromString("AssetResponseCallable url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap16 = headerUtil7.createHeadersFromString("AssetResponseCallable url:com.soulgalore.crawler.auth");
        java.util.Map<java.lang.String, java.lang.String> strMap18 = headerUtil7.createHeadersFromString("CrawlerURL url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(headerUtil7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test09487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09487");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet4 = authUtil0.createAuthsFromString("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet6 = authUtil0.createAuthsFromString("CrawlerURL url:AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"AssetResponseCallable url\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
        org.junit.Assert.assertNotNull(authSet2);
        org.junit.Assert.assertNotNull(authSet4);
    }

    @Test
    public void test09488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09488");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder8.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration19 = builder18.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration20 = builder18.build();
        boolean boolean21 = crawlerConfiguration3.equals((java.lang.Object) crawlerConfiguration20);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = crawlerConfiguration20.getRequestHeadersMap();
        int int23 = crawlerConfiguration20.getMaxLevels();
        java.lang.String str24 = crawlerConfiguration20.getNotOnPath();
        java.lang.String str25 = crawlerConfiguration20.getOnlyOnPath();
        java.lang.String str26 = crawlerConfiguration20.getStartUrl();
        java.lang.String str27 = crawlerConfiguration20.getRequestHeaders();
        java.lang.String str28 = crawlerConfiguration20.getOnlyOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(crawlerConfiguration19);
        org.junit.Assert.assertNotNull(crawlerConfiguration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "urls.txt" + "'", str24, "urls.txt");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str26, "com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
    }

    @Test
    public void test09489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09489");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet4 = authUtil0.createAuthsFromString("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet6 = authUtil0.createAuthsFromString("AssetResponseCallable url:CrawlerURL url:CrawlerURL url:CrawlerURL url:errorassets.csv");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"CrawlerURL url\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
        org.junit.Assert.assertNotNull(authSet2);
        org.junit.Assert.assertNotNull(authSet4);
    }

    @Test
    public void test09490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09490");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder2.setMaxLevels((int) (short) -1);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder2.setOnlyOnPath("AssetResponseCallable url:100");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setMaxLevels((int) (short) 10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder8.setMaxLevels(100);
        java.lang.Class<?> wildcardClass15 = builder14.getClass();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test09491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09491");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:AssetResponseCallable url:Malformed url", "com.soulgalore.crawler.nrofhttpthreads", (int) (byte) 0, (long) (short) -1);
        int int5 = assetResponse4.getResponseCode();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder6.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration17 = builder16.build();
        java.lang.String str18 = crawlerConfiguration17.getStartUrl();
        boolean boolean19 = assetResponse4.equals((java.lang.Object) str18);
        java.lang.String str20 = assetResponse4.getUrl();
        java.lang.String str21 = assetResponse4.getReferer();
        long long22 = assetResponse4.getFetchTime();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(crawlerConfiguration17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str18, "com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AssetResponseCallable url:AssetResponseCallable url:Malformed url" + "'", str20, "AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str21, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
    }

    @Test
    public void test09492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09492");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        int int4 = crawlerConfiguration3.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = crawlerConfiguration3.getRequestHeadersMap();
        boolean boolean6 = crawlerConfiguration3.isVerifyUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL9 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean10 = crawlerURL9.isWrongSyntax();
        java.lang.String str11 = crawlerURL9.getReferer();
        java.lang.String str12 = crawlerURL9.getHost();
        boolean boolean13 = crawlerURL9.isWrongSyntax();
        java.net.URI uRI14 = crawlerURL9.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder15.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder15.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder15.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder23.setOnlyOnPath("AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration30 = builder27.build();
        boolean boolean31 = crawlerURL9.equals((java.lang.Object) crawlerConfiguration30);
        boolean boolean32 = crawlerConfiguration3.equals((java.lang.Object) crawlerURL9);
        int int33 = crawlerConfiguration3.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder34.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder34.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder38.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder40.setOnlyOnPath("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder44 = builder40.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration45 = builder40.build();
        int int46 = crawlerConfiguration45.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL49 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean50 = crawlerURL49.isWrongSyntax();
        java.lang.String str51 = crawlerURL49.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse59 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL49, (int) 'a', strMap53, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str60 = hTMLPageResponse59.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap61 = hTMLPageResponse59.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL62 = hTMLPageResponse59.getPageUrl();
        boolean boolean63 = crawlerConfiguration45.equals((java.lang.Object) hTMLPageResponse59);
        java.lang.String str64 = hTMLPageResponse59.toString();
        boolean boolean65 = crawlerConfiguration3.equals((java.lang.Object) hTMLPageResponse59);
        java.lang.String str66 = hTMLPageResponse59.toString();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "urls.txt" + "'", str11, "urls.txt");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(uRI14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(crawlerConfiguration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(crawlerConfiguration45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "urls.txt" + "'", str51, "urls.txt");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str60, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(crawlerURL62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str64, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str66, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
    }

    @Test
    public void test09493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09493");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        int int8 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str9 = crawlerConfiguration3.getRequestHeaders();
        java.lang.String str10 = crawlerConfiguration3.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = crawlerConfiguration3.getRequestHeadersMap();
        int int12 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str13 = crawlerConfiguration3.getStartUrl();
        java.lang.String str14 = crawlerConfiguration3.getStartUrl();
        java.lang.String str15 = crawlerConfiguration3.getNotOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str17 = crawlerConfiguration3.getRequestHeaders();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test09494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09494");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        long long14 = hTMLPageResponse12.getFetchTime();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:hi!");
        boolean boolean19 = hTMLPageResponse12.equals((java.lang.Object) crawlerURL18);
        java.lang.String str20 = hTMLPageResponse12.getResponseType();
        java.lang.String str21 = hTMLPageResponse12.getUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 100L + "'", long14 == 100L);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "com.soulgalore.crawler.auth" + "'", str21, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test09495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09495");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.util.Map<java.lang.String, java.lang.String> strMap30 = hTMLPageResponse29.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean34 = crawlerURL33.isWrongSyntax();
        java.lang.String str35 = crawlerURL33.getReferer();
        java.lang.String str36 = crawlerURL33.getHost();
        java.lang.String str37 = crawlerURL33.getUrl();
        boolean boolean38 = hTMLPageResponse29.equals((java.lang.Object) crawlerURL33);
        java.lang.String str39 = hTMLPageResponse29.getUrl();
        java.lang.String str40 = hTMLPageResponse29.getUrl();
        java.lang.String str41 = hTMLPageResponse29.getResponseType();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL42 = hTMLPageResponse29.getPageUrl();
        java.lang.String str43 = crawlerURL42.getUrl();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "urls.txt" + "'", str35, "urls.txt");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "com.soulgalore.crawler.auth" + "'", str37, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "com.soulgalore.crawler.auth" + "'", str39, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "com.soulgalore.crawler.auth" + "'", str40, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1" + "'", str41, "-1");
        org.junit.Assert.assertNotNull(crawlerURL42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "com.soulgalore.crawler.auth" + "'", str43, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test09496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09496");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        long long16 = hTMLPageResponse12.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean20 = crawlerURL19.isWrongSyntax();
        java.lang.String str21 = crawlerURL19.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL19, (int) 'a', strMap23, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str30 = hTMLPageResponse29.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean32 = hTMLPageResponse29.equals((java.lang.Object) builder31);
        long long33 = hTMLPageResponse29.getFetchTime();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder34.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder34.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder34.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration41 = builder34.build();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = crawlerConfiguration41.getRequestHeadersMap();
        boolean boolean43 = hTMLPageResponse29.equals((java.lang.Object) crawlerConfiguration41);
        boolean boolean44 = hTMLPageResponse12.equals((java.lang.Object) boolean43);
        java.lang.String str45 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL49 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray50 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL49 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet51 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet51, crawlerURLArray50);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet53 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray54 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet55 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet55, hTMLPageResponseArray54);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult57 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet51, hTMLPageResponseSet53, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet55);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet58 = crawlerResult57.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet59 = crawlerResult57.getUrls();
        java.lang.String str60 = crawlerResult57.getTheStartPoint();
        boolean boolean61 = hTMLPageResponse12.equals((java.lang.Object) crawlerResult57);
        long long62 = hTMLPageResponse12.getFetchTime();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "urls.txt" + "'", str21, "urls.txt");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "com.soulgalore.crawler.auth" + "'", str30, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 100L + "'", long33 == 100L);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(crawlerConfiguration41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str45, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURLArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet58);
        org.junit.Assert.assertNotNull(crawlerURLSet59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 100L + "'", long62 == 100L);
    }

    @Test
    public void test09497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09497");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean14 = assetResponse4.equals((java.lang.Object) 100L);
        java.lang.String str15 = assetResponse4.getReferer();
        long long16 = assetResponse4.getFetchTime();
        java.lang.String str17 = assetResponse4.getReferer();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI21 = crawlerURL20.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL25 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean26 = crawlerURL25.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder28.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder28.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration33 = builder28.build();
        java.lang.String str34 = crawlerConfiguration33.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = crawlerConfiguration33.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse41 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL25, (-1), strMap35, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse47 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, 100, strMap35, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.util.Map<java.lang.String, java.lang.String> strMap48 = hTMLPageResponse47.getResponseHeaders();
        org.jsoup.nodes.Document document49 = hTMLPageResponse47.getBody();
        org.jsoup.nodes.Document document50 = hTMLPageResponse47.getBody();
        java.lang.String str52 = hTMLPageResponse47.getHeaderValue("errorurls.txt");
        boolean boolean53 = assetResponse4.equals((java.lang.Object) hTMLPageResponse47);
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse58 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int59 = assetResponse58.getResponseCode();
        int int60 = assetResponse58.getResponseCode();
        long long61 = assetResponse58.getFetchTime();
        long long62 = assetResponse58.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse67 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean68 = assetResponse58.equals((java.lang.Object) 100L);
        java.lang.String str69 = assetResponse58.getReferer();
        java.lang.String str70 = assetResponse58.getReferer();
        long long71 = assetResponse58.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL75 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray76 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL75 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet77 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet77, crawlerURLArray76);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet79 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray80 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet81 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet81, hTMLPageResponseArray80);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult83 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet77, hTMLPageResponseSet79, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet81);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet84 = crawlerResult83.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet85 = crawlerResult83.getUrls();
        java.lang.String str86 = crawlerResult83.getTheStartPoint();
        boolean boolean87 = assetResponse58.equals((java.lang.Object) crawlerResult83);
        int int88 = assetResponse58.getResponseCode();
        boolean boolean89 = assetResponse4.equals((java.lang.Object) assetResponse58);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100" + "'", str15, "100");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "100" + "'", str17, "100");
        org.junit.Assert.assertNull(uRI21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(crawlerConfiguration33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(document49);
        org.junit.Assert.assertNull(document50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "100" + "'", str69, "100");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "100" + "'", str70, "100");
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 0L + "'", long71 == 0L);
        org.junit.Assert.assertNotNull(crawlerURLArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet84);
        org.junit.Assert.assertNotNull(crawlerURLSet85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!" + "'", str86, "hi!");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test09498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09498");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean14 = assetResponse4.equals((java.lang.Object) 100L);
        java.lang.String str15 = assetResponse4.getReferer();
        long long16 = assetResponse4.getFetchTime();
        java.lang.String str17 = assetResponse4.getReferer();
        long long18 = assetResponse4.getFetchTime();
        java.lang.String str19 = assetResponse4.getUrl();
        boolean boolean21 = assetResponse4.equals((java.lang.Object) 100.0d);
        long long22 = assetResponse4.getFetchTime();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100" + "'", str15, "100");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "100" + "'", str17, "100");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
    }

    @Test
    public void test09499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09499");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setStartUrl("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setMaxLevels(32);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setNotOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:32encoding:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder8.setMaxLevels(97);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder8.setNotOnPath("HTMLPageResponseurl:Wrong content typeresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads type:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test09500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09500");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        java.lang.String str15 = hTMLPageResponse12.toString();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        java.lang.String str17 = hTMLPageResponse12.getResponseType();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse22 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int23 = assetResponse22.getResponseCode();
        int int24 = assetResponse22.getResponseCode();
        long long25 = assetResponse22.getFetchTime();
        long long26 = assetResponse22.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse31 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean32 = assetResponse22.equals((java.lang.Object) 100L);
        java.lang.String str33 = assetResponse22.getReferer();
        java.lang.String str34 = assetResponse22.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = builder35.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = builder35.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder41 = builder35.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder43 = builder41.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder45 = builder41.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder47 = builder45.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder49 = builder47.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder51 = builder47.setVerifyUrls(false);
        boolean boolean52 = assetResponse22.equals((java.lang.Object) builder47);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder54 = builder47.setRequestHeaders("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder56 = builder47.setVerifyUrls(true);
        boolean boolean57 = hTMLPageResponse12.equals((java.lang.Object) builder47);
        org.jsoup.nodes.Document document58 = hTMLPageResponse12.getBody();
        int int59 = hTMLPageResponse12.getResponseCode();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder60 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder62 = builder60.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration63 = builder62.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder65 = builder62.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration66 = builder65.build();
        java.lang.String str67 = crawlerConfiguration66.getOnlyOnPath();
        java.lang.String str68 = crawlerConfiguration66.getOnlyOnPath();
        boolean boolean69 = crawlerConfiguration66.isVerifyUrls();
        boolean boolean70 = hTMLPageResponse12.equals((java.lang.Object) crawlerConfiguration66);
        java.util.Map<java.lang.String, java.lang.String> strMap71 = crawlerConfiguration66.getRequestHeadersMap();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str15, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "100" + "'", str33, "100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "100" + "'", str34, "100");
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(document58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 97 + "'", int59 == 97);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(crawlerConfiguration63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(crawlerConfiguration66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strMap71);
    }
}

