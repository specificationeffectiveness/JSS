package com.soulgalore.crawler;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest16 {

    public static boolean debug = false;

    @Test
    public void test08001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08001");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration8 = builder7.build();
        java.lang.String str9 = crawlerConfiguration8.getStartUrl();
        int int10 = crawlerConfiguration8.getMaxLevels();
        int int11 = crawlerConfiguration8.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration8.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (short) 10, strMap12, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int19 = hTMLPageResponse18.getResponseCode();
        java.lang.String str20 = hTMLPageResponse18.getUrl();
        long long21 = hTMLPageResponse18.getFetchTime();
        java.lang.String str23 = hTMLPageResponse18.getHeaderValue("HTMLPageResponseurl:CrawlerURL url:com.soulgalore.crawler.authresponseCode:0encoding:CrawlerURL url:result.csv type:-1");
        java.util.Map<java.lang.String, java.lang.String> strMap24 = hTMLPageResponse18.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL25 = hTMLPageResponse18.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL30 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray31 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL30 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet32 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet32, crawlerURLArray31);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet34 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray35 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet36 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet36, hTMLPageResponseArray35);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult38 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet32, hTMLPageResponseSet34, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet36);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet39 = crawlerResult38.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet40 = crawlerResult38.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet41 = crawlerResult38.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet42 = crawlerResult38.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = crawlerResult38.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet44 = crawlerResult38.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL48 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray49 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL48 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet50 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet50, crawlerURLArray49);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet52 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray53 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet54 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet54, hTMLPageResponseArray53);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult56 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet50, hTMLPageResponseSet52, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet54);
        java.lang.String str57 = crawlerResult56.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet58 = crawlerResult56.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet59 = crawlerResult56.getNonWorkingUrls();
        java.lang.String str60 = crawlerResult56.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet61 = crawlerResult56.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL65 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray66 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL65 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet67 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet67, crawlerURLArray66);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet69 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray70 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet71 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet71, hTMLPageResponseArray70);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult73 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet67, hTMLPageResponseSet69, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet71);
        java.lang.String str74 = crawlerResult73.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet75 = crawlerResult73.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet76 = crawlerResult73.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult77 = new com.soulgalore.crawler.core.CrawlerResult("CrawlerURL url:urls.txt", crawlerURLSet44, hTMLPageResponseSet61, hTMLPageResponseSet76);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet78 = crawlerResult77.getVerifiedURLResponses();
        boolean boolean79 = crawlerURL25.equals((java.lang.Object) hTMLPageResponseSet78);
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(crawlerConfiguration8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "com.soulgalore.crawler.auth" + "'", str20, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 580L + "'", long21 == 580L);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(crawlerURL25);
        org.junit.Assert.assertNotNull(crawlerURLArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet39);
        org.junit.Assert.assertNotNull(crawlerURLSet40);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet41);
        org.junit.Assert.assertNotNull(crawlerURLSet42);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet43);
        org.junit.Assert.assertNotNull(crawlerURLSet44);
        org.junit.Assert.assertNotNull(crawlerURLArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet58);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet61);
        org.junit.Assert.assertNotNull(crawlerURLArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet75);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet76);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test08002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08002");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        long long6 = assetResponse4.getFetchTime();
        java.lang.String str7 = assetResponse4.getUrl();
        java.lang.String str8 = assetResponse4.getReferer();
        java.lang.String str9 = assetResponse4.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL13 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray14 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL13 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet15, crawlerURLArray14);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray18 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet19 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet19, hTMLPageResponseArray18);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult21 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet15, hTMLPageResponseSet17, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet19);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet22 = crawlerResult21.getUrls();
        java.lang.String str23 = crawlerResult21.getTheStartPoint();
        boolean boolean24 = assetResponse4.equals((java.lang.Object) str23);
        int int25 = assetResponse4.getResponseCode();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "100" + "'", str8, "100");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(crawlerURLArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
    }

    @Test
    public void test08003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08003");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setStartUrl("CrawlerURL url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setNotOnPath("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setMaxLevels((int) (byte) 0);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test08004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08004");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration5.getRequestHeadersMap();
        boolean boolean8 = crawlerConfiguration5.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = crawlerConfiguration5.getRequestHeadersMap();
        boolean boolean10 = crawlerConfiguration5.isVerifyUrls();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder11.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder11.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration24 = builder23.build();
        boolean boolean25 = crawlerConfiguration5.equals((java.lang.Object) builder23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = crawlerConfiguration5.getRequestHeadersMap();
        java.lang.String str27 = crawlerConfiguration5.getOnlyOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(crawlerConfiguration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
    }

    @Test
    public void test08005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08005");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setStartUrl("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setStartUrl("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder18.setStartUrl("AssetResponseCallable url:urls.txt");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test08006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08006");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setVerifyUrls(false);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test08007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08007");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        boolean boolean3 = crawlerURL1.isWrongSyntax();
        java.lang.String str4 = crawlerURL1.getHost();
        boolean boolean5 = crawlerURL1.isWrongSyntax();
        java.net.URI uRI6 = crawlerURL1.getUri();
        boolean boolean7 = crawlerURL1.isWrongSyntax();
        java.lang.String str8 = crawlerURL1.getReferer();
        java.net.URI uRI9 = crawlerURL1.getUri();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(uRI6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(uRI9);
    }

    @Test
    public void test08008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08008");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        int int19 = hTMLPageResponse12.getResponseCode();
        org.jsoup.nodes.Document document20 = hTMLPageResponse12.getBody();
        java.lang.String str21 = hTMLPageResponse12.getEncoding();
        org.jsoup.nodes.Document document22 = hTMLPageResponse12.getBody();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = hTMLPageResponse12.getHeaderValue("CrawlerURL url:CrawlerURL url:HTMLPageResponseurl:CrawlerURL url:com.soulgalore.crawler.authresponseCode:0encoding:CrawlerURL url:result.csv type:-1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
        org.junit.Assert.assertNull(document20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str21, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(document22);
    }

    @Test
    public void test08009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08009");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str7 = crawlerConfiguration5.getRequestHeaders();
        boolean boolean9 = crawlerConfiguration5.equals((java.lang.Object) 0.0d);
        java.lang.String str10 = crawlerConfiguration5.getNotOnPath();
        java.lang.String str11 = crawlerConfiguration5.getNotOnPath();
        int int12 = crawlerConfiguration5.getMaxLevels();
        java.lang.String str13 = crawlerConfiguration5.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = crawlerConfiguration5.getRequestHeadersMap();
        java.lang.String str15 = crawlerConfiguration5.getNotOnPath();
        boolean boolean16 = crawlerConfiguration5.isVerifyUrls();
        java.lang.String str17 = crawlerConfiguration5.getOnlyOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test08010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08010");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean6 = crawlerURL5.isWrongSyntax();
        java.lang.String str7 = crawlerURL5.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse15 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) 'a', strMap9, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str16 = hTMLPageResponse15.getUrl();
        boolean boolean17 = crawlerURL1.equals((java.lang.Object) str16);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher20 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil21 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = headerUtil21.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable25 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher20, strMap23, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse31 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) 100, strMap23, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        org.jsoup.nodes.Document document32 = hTMLPageResponse31.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = hTMLPageResponse31.getPageUrl();
        java.lang.String str34 = crawlerURL33.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL38 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean39 = crawlerURL38.isWrongSyntax();
        java.lang.String str40 = crawlerURL38.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse48 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL38, (int) 'a', strMap42, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str49 = hTMLPageResponse48.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = hTMLPageResponse48.getResponseHeaders();
        java.lang.String str51 = hTMLPageResponse48.getEncoding();
        java.lang.String str52 = hTMLPageResponse48.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL53 = hTMLPageResponse48.getPageUrl();
        java.lang.String str54 = crawlerURL53.getUrl();
        java.lang.String str55 = crawlerURL53.getUrl();
        java.lang.String str56 = crawlerURL53.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL60 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean61 = crawlerURL60.isWrongSyntax();
        java.lang.String str62 = crawlerURL60.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap64 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse70 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL60, (int) 'a', strMap64, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str71 = crawlerURL60.getUrl();
        com.soulgalore.crawler.util.HeaderUtil headerUtil73 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = headerUtil73.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse81 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL60, (int) (short) 0, strMap75, "com.soulgalore.crawler.http.socket.timeout", "Malformed url", (long) '4', "Unknown error", (long) (byte) 100);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse87 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL53, 100, strMap75, "AssetResponseCallable url:Malformed url", "", (-1L), "Redirected to new domain", 0L);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse93 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL33, (int) (byte) 100, strMap75, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", "CrawlerURL url:1", (long) 580, "AssetResponseCallable url:CrawlerURL url:10", 0L);
        int int94 = hTMLPageResponse93.getResponseCode();
        long long95 = hTMLPageResponse93.getFetchTime();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "urls.txt" + "'", str7, "urls.txt");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(headerUtil21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(document32);
        org.junit.Assert.assertNotNull(crawlerURL33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str34, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "urls.txt" + "'", str40, "urls.txt");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str49, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str51, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str52, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "com.soulgalore.crawler.auth" + "'", str54, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "com.soulgalore.crawler.auth" + "'", str55, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "com.soulgalore.crawler.auth" + "'", str56, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "urls.txt" + "'", str62, "urls.txt");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "com.soulgalore.crawler.auth" + "'", str71, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(headerUtil73);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 100 + "'", int94 == 100);
        org.junit.Assert.assertTrue("'" + long95 + "' != '" + 0L + "'", long95 == 0L);
    }

    @Test
    public void test08011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08011");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        long long14 = hTMLPageResponse12.getFetchTime();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = hTMLPageResponse12.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean21 = crawlerURL20.isWrongSyntax();
        java.lang.String str22 = crawlerURL20.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse30 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, (int) 'a', strMap24, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str31 = hTMLPageResponse30.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = hTMLPageResponse30.getResponseHeaders();
        java.lang.String str33 = hTMLPageResponse30.getEncoding();
        java.lang.String str34 = hTMLPageResponse30.toString();
        long long35 = hTMLPageResponse30.getFetchTime();
        java.lang.String str36 = hTMLPageResponse30.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL37 = hTMLPageResponse30.getPageUrl();
        java.lang.String str38 = hTMLPageResponse30.getResponseType();
        boolean boolean39 = hTMLPageResponse12.equals((java.lang.Object) hTMLPageResponse30);
        int int40 = hTMLPageResponse12.getResponseCode();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 100L + "'", long14 == 100L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "urls.txt" + "'", str22, "urls.txt");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str31, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str33, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str34, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 100L + "'", long35 == 100L);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str36, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 97 + "'", int40 == 97);
    }

    @Test
    public void test08012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08012");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        long long14 = hTMLPageResponse12.getFetchTime();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration20 = builder19.build();
        java.lang.String str21 = crawlerConfiguration20.getOnlyOnPath();
        boolean boolean22 = crawlerConfiguration20.isVerifyUrls();
        int int23 = crawlerConfiguration20.getMaxLevels();
        int int24 = crawlerConfiguration20.getMaxLevels();
        boolean boolean25 = hTMLPageResponse12.equals((java.lang.Object) int24);
        java.lang.String str26 = hTMLPageResponse12.getResponseType();
        java.lang.String str27 = hTMLPageResponse12.getUrl();
        int int28 = hTMLPageResponse12.getResponseCode();
        int int29 = hTMLPageResponse12.getResponseCode();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 100L + "'", long14 == 100L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(crawlerConfiguration20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "com.soulgalore.crawler.auth" + "'", str27, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 97 + "'", int28 == 97);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 97 + "'", int29 == 97);
    }

    @Test
    public void test08013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08013");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet12 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult11.getUrls();
        java.lang.String str17 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet18 = crawlerResult11.getUrls();
        java.lang.String str19 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet20 = crawlerResult11.getUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet12);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet20);
    }

    @Test
    public void test08014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08014");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.nrofhttpthreads", "AssetResponseCallable url:AssetResponseCallable url:Redirected to new domain", 0, 52L);
        java.lang.String str5 = assetResponse4.getReferer();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AssetResponseCallable url:AssetResponseCallable url:Redirected to new domain" + "'", str5, "AssetResponseCallable url:AssetResponseCallable url:Redirected to new domain");
    }

    @Test
    public void test08015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08015");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean14 = assetResponse4.equals((java.lang.Object) 100L);
        java.lang.String str15 = assetResponse4.getReferer();
        long long16 = assetResponse4.getFetchTime();
        java.lang.String str17 = assetResponse4.getReferer();
        java.lang.String str18 = assetResponse4.getUrl();
        long long19 = assetResponse4.getFetchTime();
        long long20 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL23 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean24 = crawlerURL23.isWrongSyntax();
        java.lang.String str25 = crawlerURL23.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse33 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL23, (int) 'a', strMap27, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str34 = hTMLPageResponse33.getUrl();
        boolean boolean36 = hTMLPageResponse33.equals((java.lang.Object) "CrawlerURL url:com.soulgalore.crawler.auth");
        boolean boolean37 = assetResponse4.equals((java.lang.Object) hTMLPageResponse33);
        com.soulgalore.crawler.util.StatusCode statusCode38 = com.soulgalore.crawler.util.StatusCode.SC_WRONG_CONTENT_TYPE;
        java.lang.String str39 = statusCode38.getFriendlyName();
        int int40 = statusCode38.getCode();
        int int41 = statusCode38.getCode();
        java.lang.String str42 = statusCode38.getFriendlyName();
        boolean boolean43 = assetResponse4.equals((java.lang.Object) str42);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100" + "'", str15, "100");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "100" + "'", str17, "100");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "urls.txt" + "'", str25, "urls.txt");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "com.soulgalore.crawler.auth" + "'", str34, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + statusCode38 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_WRONG_CONTENT_TYPE + "'", statusCode38.equals(com.soulgalore.crawler.util.StatusCode.SC_WRONG_CONTENT_TYPE));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Wrong content type" + "'", str39, "Wrong content type");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 583 + "'", int40 == 583);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 583 + "'", int41 == 583);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Wrong content type" + "'", str42, "Wrong content type");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test08016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08016");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean4 = crawlerURL3.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI12 = crawlerURL11.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray13 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3, crawlerURL7, crawlerURL11 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet14, crawlerURLArray13);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray16 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet17, hTMLPageResponseArray16);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray23 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL22 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, crawlerURLArray23);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray27 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28, hTMLPageResponseArray27);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult30 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, hTMLPageResponseSet26, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult31 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet14, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet17, hTMLPageResponseSet26);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet32 = crawlerResult31.getUrls();
        java.lang.String str33 = crawlerResult31.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet34 = crawlerResult31.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet35 = crawlerResult31.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet36 = crawlerResult31.getVerifiedURLResponses();
        java.lang.String str37 = crawlerResult31.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet38 = crawlerResult31.getUrls();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(uRI12);
        org.junit.Assert.assertNotNull(crawlerURLArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "com.soulgalore.crawler.auth" + "'", str33, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURLSet34);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet35);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "com.soulgalore.crawler.auth" + "'", str37, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURLSet38);
    }

    @Test
    public void test08017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08017");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", "CrawlerURL url:CrawlerURL url:errorassets.csv");
        java.lang.String str3 = crawlerURL2.getUrl();
        java.net.URI uRI4 = crawlerURL2.getUri();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url" + "'", str3, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertNull(uRI4);
    }

    @Test
    public void test08018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08018");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("35", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:");
    }

    @Test
    public void test08019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08019");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        long long5 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean9 = crawlerURL8.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder11.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration16 = builder11.build();
        java.lang.String str17 = crawlerConfiguration16.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = crawlerConfiguration16.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse24 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, (-1), strMap18, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        boolean boolean25 = assetResponse4.equals((java.lang.Object) strMap18);
        java.lang.String str26 = assetResponse4.getReferer();
        java.lang.String str27 = assetResponse4.getReferer();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI30 = crawlerURL29.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean34 = crawlerURL33.isWrongSyntax();
        java.lang.String str35 = crawlerURL33.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse43 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL33, (int) 'a', strMap37, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str44 = hTMLPageResponse43.getUrl();
        boolean boolean45 = crawlerURL29.equals((java.lang.Object) str44);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher48 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil49 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap51 = headerUtil49.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable53 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher48, strMap51, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse59 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, (int) (short) 100, strMap51, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        org.jsoup.nodes.Document document60 = hTMLPageResponse59.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL61 = hTMLPageResponse59.getPageUrl();
        org.jsoup.nodes.Document document62 = hTMLPageResponse59.getBody();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder63 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder65 = builder63.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration66 = builder65.build();
        java.lang.String str67 = crawlerConfiguration66.getStartUrl();
        int int68 = crawlerConfiguration66.getMaxLevels();
        int int69 = crawlerConfiguration66.getMaxLevels();
        java.lang.String str70 = crawlerConfiguration66.getNotOnPath();
        int int71 = crawlerConfiguration66.getMaxLevels();
        java.lang.String str72 = crawlerConfiguration66.getOnlyOnPath();
        boolean boolean73 = hTMLPageResponse59.equals((java.lang.Object) crawlerConfiguration66);
        java.lang.String str74 = crawlerConfiguration66.getRequestHeaders();
        java.lang.String str75 = crawlerConfiguration66.getNotOnPath();
        boolean boolean76 = assetResponse4.equals((java.lang.Object) crawlerConfiguration66);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 100L + "'", long5 == 100L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(crawlerConfiguration16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str26, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str27, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(uRI30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "urls.txt" + "'", str35, "urls.txt");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "com.soulgalore.crawler.auth" + "'", str44, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(headerUtil49);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(document60);
        org.junit.Assert.assertNotNull(crawlerURL61);
        org.junit.Assert.assertNull(document62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(crawlerConfiguration66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test08020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08020");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        java.lang.String str15 = hTMLPageResponse12.getResponseType();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        java.lang.String str17 = crawlerURL16.getHost();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test08021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08021");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        int int6 = crawlerConfiguration3.getMaxLevels();
        int int7 = crawlerConfiguration3.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL10 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean11 = crawlerURL10.isWrongSyntax();
        java.lang.String str12 = crawlerURL10.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse20 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL10, (int) 'a', strMap14, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str21 = hTMLPageResponse20.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean23 = hTMLPageResponse20.equals((java.lang.Object) builder22);
        boolean boolean24 = crawlerConfiguration3.equals((java.lang.Object) builder22);
        java.lang.String str25 = crawlerConfiguration3.getStartUrl();
        int int26 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str27 = crawlerConfiguration3.getOnlyOnPath();
        java.lang.String str28 = crawlerConfiguration3.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "urls.txt" + "'", str12, "urls.txt");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "com.soulgalore.crawler.auth" + "'", str21, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
    }

    @Test
    public void test08022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08022");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("35", "AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.auth", 583, (long) (byte) 0);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI8 = crawlerURL7.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean13 = crawlerURL12.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder15.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder15.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration20 = builder15.build();
        java.lang.String str21 = crawlerConfiguration20.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = crawlerConfiguration20.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse28 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL12, (-1), strMap22, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse34 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, 100, strMap22, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.lang.String str35 = hTMLPageResponse34.getResponseType();
        int int36 = hTMLPageResponse34.getResponseCode();
        boolean boolean37 = assetResponse4.equals((java.lang.Object) hTMLPageResponse34);
        java.lang.String str38 = hTMLPageResponse34.getEncoding();
        org.junit.Assert.assertNull(uRI8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(crawlerConfiguration20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "-1" + "'", str35, "-1");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Malformed url" + "'", str38, "Malformed url");
    }

    @Test
    public void test08023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08023");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setStartUrl("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder0.setNotOnPath("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setStartUrl("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setNotOnPath("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder12.setMaxLevels((int) (byte) 1);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test08024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08024");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder0.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder0.setRequestHeaders("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder9.setNotOnPath("Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder9.setNotOnPath("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder15.setMaxLevels((int) '#');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder15.setVerifyUrls(false);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
    }

    @Test
    public void test08025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08025");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("HTMLPageResponseurl:AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1responseCode:100encoding:AssetResponseCallable url:com.soulgalore.crawler.nrofhttpthreads type:", "AssetResponseCallable url:AssetResponseCallable url:Redirected to new domain", (int) '4', (long) 581);
    }

    @Test
    public void test08026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08026");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder0.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration9 = builder8.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder8.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder8.build();
        boolean boolean12 = crawlerConfiguration3.equals((java.lang.Object) builder8);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI15 = crawlerURL14.getUri();
        boolean boolean16 = crawlerURL14.isWrongSyntax();
        java.lang.String str17 = crawlerURL14.getHost();
        boolean boolean18 = crawlerURL14.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder20.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration23 = builder22.build();
        java.lang.String str24 = crawlerConfiguration23.getStartUrl();
        int int25 = crawlerConfiguration23.getMaxLevels();
        java.lang.String str26 = crawlerConfiguration23.getNotOnPath();
        java.lang.String str27 = crawlerConfiguration23.getNotOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = crawlerConfiguration23.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse34 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL14, (int) (byte) 100, strMap28, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain", "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url", (long) (short) 100, "AssetResponseCallable url:CrawlerURL url:10", 0L);
        boolean boolean35 = crawlerConfiguration3.equals((java.lang.Object) hTMLPageResponse34);
        java.lang.String str36 = crawlerConfiguration3.getOnlyOnPath();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(crawlerConfiguration9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(uRI15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(crawlerConfiguration23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
    }

    @Test
    public void test08027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08027");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.http.socket.timeout", "com.soulgalore.crawler.nrofhttpthreads", (-1), 583L);
        java.lang.String str5 = assetResponse4.getReferer();
        int int6 = assetResponse4.getResponseCode();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str5, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test08028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08028");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = hTMLPageResponse12.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI21 = crawlerURL20.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration26 = builder25.build();
        java.lang.String str27 = crawlerConfiguration26.getStartUrl();
        int int28 = crawlerConfiguration26.getMaxLevels();
        int int29 = crawlerConfiguration26.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = crawlerConfiguration26.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse36 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, (int) (short) 10, strMap30, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse42 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL16, 581, strMap30, "CrawlerURL url:com.soulgalore.crawler.auth", "errorassets.csv", 100L, "Wrong content type", (long) (byte) 100);
        java.lang.String str43 = hTMLPageResponse42.getResponseType();
        org.jsoup.nodes.Document document44 = hTMLPageResponse42.getBody();
        int int45 = hTMLPageResponse42.getResponseCode();
        java.lang.String str46 = hTMLPageResponse42.getUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertNull(uRI21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(crawlerConfiguration26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Wrong content type" + "'", str43, "Wrong content type");
        org.junit.Assert.assertNull(document44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 581 + "'", int45 == 581);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "com.soulgalore.crawler.auth" + "'", str46, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test08029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08029");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.util.Map<java.lang.String, java.lang.String> strMap30 = hTMLPageResponse29.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean34 = crawlerURL33.isWrongSyntax();
        java.lang.String str35 = crawlerURL33.getReferer();
        java.lang.String str36 = crawlerURL33.getHost();
        java.lang.String str37 = crawlerURL33.getUrl();
        boolean boolean38 = hTMLPageResponse29.equals((java.lang.Object) crawlerURL33);
        java.lang.String str39 = hTMLPageResponse29.getUrl();
        long long40 = hTMLPageResponse29.getFetchTime();
        long long41 = hTMLPageResponse29.getFetchTime();
        java.lang.String str42 = hTMLPageResponse29.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = hTMLPageResponse29.getResponseHeaders();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "urls.txt" + "'", str35, "urls.txt");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "com.soulgalore.crawler.auth" + "'", str37, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "com.soulgalore.crawler.auth" + "'", str39, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Malformed url" + "'", str42, "Malformed url");
        org.junit.Assert.assertNotNull(strMap43);
    }

    @Test
    public void test08030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08030");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet12 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult11.getUrls();
        java.lang.String str15 = crawlerResult11.getTheStartPoint();
        java.lang.String str16 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet18 = crawlerResult11.getUrls();
        java.lang.String str19 = crawlerResult11.getTheStartPoint();
        java.lang.String str20 = crawlerResult11.getTheStartPoint();
        java.lang.String str21 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet22 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet23 = crawlerResult11.getNonWorkingUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet12);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet17);
        org.junit.Assert.assertNotNull(crawlerURLSet18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet22);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet23);
    }

    @Test
    public void test08031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08031");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.util.Map<java.lang.String, java.lang.String> strMap30 = hTMLPageResponse29.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean34 = crawlerURL33.isWrongSyntax();
        java.lang.String str35 = crawlerURL33.getReferer();
        java.lang.String str36 = crawlerURL33.getHost();
        java.lang.String str37 = crawlerURL33.getUrl();
        boolean boolean38 = hTMLPageResponse29.equals((java.lang.Object) crawlerURL33);
        java.lang.String str39 = hTMLPageResponse29.getUrl();
        java.lang.String str40 = hTMLPageResponse29.getUrl();
        org.jsoup.nodes.Document document41 = hTMLPageResponse29.getBody();
        java.lang.String str42 = hTMLPageResponse29.getEncoding();
        long long43 = hTMLPageResponse29.getFetchTime();
        long long44 = hTMLPageResponse29.getFetchTime();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "urls.txt" + "'", str35, "urls.txt");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "com.soulgalore.crawler.auth" + "'", str37, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "com.soulgalore.crawler.auth" + "'", str39, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "com.soulgalore.crawler.auth" + "'", str40, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Malformed url" + "'", str42, "Malformed url");
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
    }

    @Test
    public void test08032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08032");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean14 = assetResponse4.equals((java.lang.Object) 100L);
        java.lang.String str15 = assetResponse4.getReferer();
        long long16 = assetResponse4.getFetchTime();
        java.lang.String str17 = assetResponse4.getReferer();
        java.lang.String str18 = assetResponse4.getUrl();
        java.lang.String str19 = assetResponse4.getReferer();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.auth", "AssetResponseCallable url:Redirected to new domain");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher25 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil26 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = headerUtil26.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap30 = headerUtil26.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap32 = headerUtil26.createHeadersFromString("AssetResponseCallable url:100");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable34 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("hi!", assetFetcher25, strMap32, "35");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse40 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL22, (-1), strMap32, "CrawlerURL url:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout", "", 582L, "result.csv", (long) (byte) 1);
        boolean boolean41 = assetResponse4.equals((java.lang.Object) (byte) 1);
        java.lang.String str42 = assetResponse4.getUrl();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100" + "'", str15, "100");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "100" + "'", str17, "100");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "100" + "'", str19, "100");
        org.junit.Assert.assertNotNull(headerUtil26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
    }

    @Test
    public void test08033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08033");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("10");
        java.lang.String str2 = crawlerURL1.getUrl();
        boolean boolean3 = crawlerURL1.isWrongSyntax();
        java.lang.String str4 = crawlerURL1.getHost();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean9 = crawlerURL8.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder11.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration16 = builder11.build();
        java.lang.String str17 = crawlerConfiguration16.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = crawlerConfiguration16.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse24 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, (-1), strMap18, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int25 = hTMLPageResponse24.getResponseCode();
        long long26 = hTMLPageResponse24.getFetchTime();
        long long27 = hTMLPageResponse24.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL30 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI31 = crawlerURL30.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL35 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean36 = crawlerURL35.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder38.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder38.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration43 = builder38.build();
        java.lang.String str44 = crawlerConfiguration43.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = crawlerConfiguration43.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse51 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL35, (-1), strMap45, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse57 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL30, 100, strMap45, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        boolean boolean58 = hTMLPageResponse24.equals((java.lang.Object) 100);
        org.jsoup.nodes.Document document59 = hTMLPageResponse24.getBody();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = hTMLPageResponse24.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse66 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) -1, strMap60, "com.soulgalore.crawler.http.socket.timeout", "CrawlerURL url:urls.txt", (long) 581, "", (long) (byte) 0);
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse71 = new com.soulgalore.crawler.core.assets.AssetResponse("errorurls.txt", "CrawlerURL url:AssetResponseCallable url:100", 0, (long) 581);
        boolean boolean72 = hTMLPageResponse66.equals((java.lang.Object) "errorurls.txt");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "10" + "'", str2, "10");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(crawlerConfiguration16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 580L + "'", long26 == 580L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 580L + "'", long27 == 580L);
        org.junit.Assert.assertNull(uRI31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(crawlerConfiguration43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(document59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test08034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08034");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder2.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setMaxLevels((int) '4');
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration8 = builder7.build();
        int int9 = crawlerConfiguration8.getMaxLevels();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(crawlerConfiguration8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
    }

    @Test
    public void test08035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08035");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = crawlerURL2.getUrl();
        com.soulgalore.crawler.util.HeaderUtil headerUtil15 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = headerUtil15.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (short) 0, strMap17, "com.soulgalore.crawler.http.socket.timeout", "Malformed url", (long) '4', "Unknown error", (long) (byte) 100);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder24.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration27 = builder26.build();
        java.lang.String str28 = crawlerConfiguration27.getStartUrl();
        java.lang.String str29 = crawlerConfiguration27.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = crawlerConfiguration27.getRequestHeadersMap();
        java.lang.String str31 = crawlerConfiguration27.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder32.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder32.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder38.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder38.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration43 = builder42.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration44 = builder42.build();
        boolean boolean45 = crawlerConfiguration27.equals((java.lang.Object) crawlerConfiguration44);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = crawlerConfiguration44.getRequestHeadersMap();
        java.lang.String str47 = crawlerConfiguration44.getRequestHeaders();
        java.lang.String str48 = crawlerConfiguration44.getStartUrl();
        java.lang.String str49 = crawlerConfiguration44.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder50 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder52 = builder50.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder54 = builder50.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder56 = builder54.setStartUrl("-1");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration57 = builder56.build();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = crawlerConfiguration57.getRequestHeadersMap();
        java.lang.String str59 = crawlerConfiguration57.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder60 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder62 = builder60.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder64 = builder60.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration65 = builder60.build();
        java.lang.String str66 = crawlerConfiguration65.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder67 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder69 = builder67.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration70 = builder69.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder72 = builder69.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder74 = builder72.setMaxLevels((int) '4');
        boolean boolean75 = crawlerConfiguration65.equals((java.lang.Object) builder74);
        java.util.Map<java.lang.String, java.lang.String> strMap76 = crawlerConfiguration65.getRequestHeadersMap();
        boolean boolean77 = crawlerConfiguration57.equals((java.lang.Object) strMap76);
        boolean boolean78 = crawlerConfiguration44.equals((java.lang.Object) strMap76);
        boolean boolean79 = crawlerURL2.equals((java.lang.Object) crawlerConfiguration44);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(headerUtil15);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(crawlerConfiguration27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(crawlerConfiguration43);
        org.junit.Assert.assertNotNull(crawlerConfiguration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str48, "com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "urls.txt" + "'", str49, "urls.txt");
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(crawlerConfiguration57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(crawlerConfiguration65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(crawlerConfiguration70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test08036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08036");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder2.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder2.build();
        java.lang.String str8 = crawlerConfiguration7.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = crawlerConfiguration7.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable11 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Redirected to new domain", assetFetcher1, strMap9, "com.soulgalore.crawler.auth");
        java.lang.String str12 = assetResponseCallable11.toString();
        java.lang.String str13 = assetResponseCallable11.toString();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AssetResponseCallable url:Redirected to new domain" + "'", str12, "AssetResponseCallable url:Redirected to new domain");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AssetResponseCallable url:Redirected to new domain" + "'", str13, "AssetResponseCallable url:Redirected to new domain");
    }

    @Test
    public void test08037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08037");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setStartUrl("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder0.setRequestHeaders("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setNotOnPath("AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test08038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08038");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable4 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:CrawlerURL url:10", assetFetcher1, strMap2, "CrawlerURL url:CrawlerURL url:CrawlerURL url:errorassets.csv");
        java.lang.String str5 = assetResponseCallable4.toString();
        java.lang.String str6 = assetResponseCallable4.toString();
        java.lang.String str7 = assetResponseCallable4.toString();
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.assets.AssetResponse assetResponse8 = assetResponseCallable4.call();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:10" + "'", str5, "AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:10");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:10" + "'", str6, "AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:10");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:10" + "'", str7, "AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:10");
    }

    @Test
    public void test08039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08039");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("-1", "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:-1encoding:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads type:AssetResponseCallable url:errorassets.csv");
        java.lang.String str3 = crawlerURL2.getUrl();
        java.lang.String str4 = crawlerURL2.getUrl();
        boolean boolean5 = crawlerURL2.isWrongSyntax();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1" + "'", str3, "-1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1" + "'", str4, "-1");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test08040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08040");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setOnlyOnPath("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setRequestHeaders("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder8.setNotOnPath("CrawlerURL url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder8.setMaxLevels((int) (byte) 100);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test08041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08041");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean6 = crawlerURL5.isWrongSyntax();
        java.lang.String str7 = crawlerURL5.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse15 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) 'a', strMap9, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str16 = hTMLPageResponse15.getUrl();
        boolean boolean17 = crawlerURL1.equals((java.lang.Object) str16);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher20 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil21 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = headerUtil21.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable25 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher20, strMap23, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse31 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) 100, strMap23, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        long long32 = hTMLPageResponse31.getFetchTime();
        int int33 = hTMLPageResponse31.getResponseCode();
        java.lang.String str34 = hTMLPageResponse31.getUrl();
        java.lang.String str35 = hTMLPageResponse31.getUrl();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "urls.txt" + "'", str7, "urls.txt");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(headerUtil21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 100L + "'", long32 == 100L);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str34, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str35, "com.soulgalore.crawler.nrofhttpthreads");
    }

    @Test
    public void test08042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08042");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean4 = crawlerURL3.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI12 = crawlerURL11.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray13 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3, crawlerURL7, crawlerURL11 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet14, crawlerURLArray13);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray16 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet17, hTMLPageResponseArray16);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray23 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL22 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, crawlerURLArray23);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray27 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28, hTMLPageResponseArray27);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult30 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, hTMLPageResponseSet26, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult31 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet14, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet17, hTMLPageResponseSet26);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet32 = crawlerResult31.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet33 = crawlerResult31.getUrls();
        java.lang.String str34 = crawlerResult31.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet35 = crawlerResult31.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet36 = crawlerResult31.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet37 = crawlerResult31.getVerifiedURLResponses();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet38 = crawlerResult31.getNonWorkingUrls();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(uRI12);
        org.junit.Assert.assertNotNull(crawlerURLArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet32);
        org.junit.Assert.assertNotNull(crawlerURLSet33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "com.soulgalore.crawler.auth" + "'", str34, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURLSet35);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet36);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet37);
    }

    @Test
    public void test08043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08043");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider(580, 10, 308, "35", "HTMLPageResponseurl:CrawlerURL url:com.soulgalore.crawler.authresponseCode:0encoding:CrawlerURL url:result.csv type:-1");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:35");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08044");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        org.jsoup.nodes.Document document13 = hTMLPageResponse12.getBody();
        java.lang.String str14 = hTMLPageResponse12.getResponseType();
        java.lang.String str15 = hTMLPageResponse12.toString();
        long long16 = hTMLPageResponse12.getFetchTime();
        java.lang.String str17 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = hTMLPageResponse12.getResponseHeaders();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNull(document13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str15, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str17, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap18);
    }

    @Test
    public void test08045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08045");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:hi!responseCode:10encoding:result.csv type:hi!", "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:AssetResponseCallable url:Unknown error type:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
    }

    @Test
    public void test08046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08046");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider(10, (int) (byte) 1, 97, "AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt", "CrawlerURL url:10");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"AssetResponseCallable url\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08047");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        long long14 = hTMLPageResponse12.getFetchTime();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration22 = builder21.build();
        java.lang.String str23 = crawlerConfiguration22.getStartUrl();
        int int24 = crawlerConfiguration22.getMaxLevels();
        int int25 = crawlerConfiguration22.getMaxLevels();
        java.lang.String str26 = crawlerConfiguration22.getNotOnPath();
        int int27 = crawlerConfiguration22.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder28.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder28.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration33 = builder28.build();
        int int34 = crawlerConfiguration33.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil35 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean36 = crawlerConfiguration33.equals((java.lang.Object) headerUtil35);
        java.util.Map<java.lang.String, java.lang.String> strMap38 = headerUtil35.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap40 = headerUtil35.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap42 = headerUtil35.createHeadersFromString("AssetResponseCallable url:result.csv");
        boolean boolean43 = crawlerConfiguration22.equals((java.lang.Object) strMap42);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = crawlerConfiguration22.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = crawlerConfiguration22.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse51 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL17, (int) (byte) 1, strMap45, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads", "52", (long) 583, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 0);
        java.lang.String str52 = crawlerURL17.getReferer();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 100L + "'", long14 == 100L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(crawlerConfiguration22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(crawlerConfiguration33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(headerUtil35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "urls.txt" + "'", str52, "urls.txt");
    }

    @Test
    public void test08048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08048");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher3 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration9 = builder4.build();
        int int10 = crawlerConfiguration9.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil11 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean12 = crawlerConfiguration9.equals((java.lang.Object) headerUtil11);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil11.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap16 = headerUtil11.createHeadersFromString("CrawlerURL url:result.csv");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable18 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("result.csv", assetFetcher3, strMap16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable20 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:1", assetFetcher1, strMap16, "AssetResponseCallable url:HTMLPageResponseurl:hi!responseCode:52encoding:urls.txt type:CrawlerURL url:com.soulgalore.crawler.auth");
        java.lang.String str21 = assetResponseCallable20.toString();
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(crawlerConfiguration9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(headerUtil11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AssetResponseCallable url:AssetResponseCallable url:1" + "'", str21, "AssetResponseCallable url:AssetResponseCallable url:1");
    }

    @Test
    public void test08049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08049");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("1", "urls.txt");
        java.lang.String str3 = crawlerURL2.toString();
        java.net.URI uRI4 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.lang.String str12 = crawlerConfiguration10.getRequestHeaders();
        java.lang.String str13 = crawlerConfiguration10.getStartUrl();
        boolean boolean14 = crawlerConfiguration10.isVerifyUrls();
        int int15 = crawlerConfiguration10.getMaxLevels();
        boolean boolean17 = crawlerConfiguration10.equals((java.lang.Object) (byte) 1);
        boolean boolean18 = crawlerConfiguration10.isVerifyUrls();
        boolean boolean19 = crawlerURL2.equals((java.lang.Object) crawlerConfiguration10);
        int int20 = crawlerConfiguration10.getMaxLevels();
        java.lang.String str21 = crawlerConfiguration10.getRequestHeaders();
        java.lang.String str22 = crawlerConfiguration10.getStartUrl();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "CrawlerURL url:1" + "'", str3, "CrawlerURL url:1");
        org.junit.Assert.assertNull(uRI4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test08050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08050");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.lang.String str2 = crawlerURL1.getHost();
        boolean boolean3 = crawlerURL1.isWrongSyntax();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test08051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08051");
        com.soulgalore.crawler.util.StatusCode statusCode0 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN;
        java.lang.String str1 = statusCode0.getFriendlyName();
        int int2 = statusCode0.getCode();
        int int3 = statusCode0.getCode();
        java.lang.String str4 = statusCode0.getFriendlyName();
        int int5 = statusCode0.getCode();
        int int6 = statusCode0.getCode();
        org.junit.Assert.assertTrue("'" + statusCode0 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN + "'", statusCode0.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Unknown error" + "'", str1, "Unknown error");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 581 + "'", int2 == 581);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 581 + "'", int3 == 581);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Unknown error" + "'", str4, "Unknown error");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 581 + "'", int5 == 581);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 581 + "'", int6 == 581);
    }

    @Test
    public void test08052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08052");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider((int) (byte) 0, (int) (byte) -1, (int) (short) -1, "HTMLPageResponseurl:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1responseCode:10encoding:hi! type:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", "CrawlerURL url:result.csv");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"HTMLPageResponseurl\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08053");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet4 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet6 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet8 = authUtil0.createAuthsFromString("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet10 = authUtil0.createAuthsFromString("CrawlerURL url:CrawlerURL url:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"CrawlerURL url\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
        org.junit.Assert.assertNotNull(authSet2);
        org.junit.Assert.assertNotNull(authSet4);
        org.junit.Assert.assertNotNull(authSet6);
        org.junit.Assert.assertNotNull(authSet8);
    }

    @Test
    public void test08054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08054");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setMaxLevels(10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder8.setOnlyOnPath("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setOnlyOnPath("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration21 = builder20.build();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = crawlerConfiguration21.getRequestHeadersMap();
        java.lang.String str23 = crawlerConfiguration21.getOnlyOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(crawlerConfiguration21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str23, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
    }

    @Test
    public void test08055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08055");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder0.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder0.setMaxLevels(52);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder0.setStartUrl("CrawlerURL url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setVerifyUrls(true);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
    }

    @Test
    public void test08056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08056");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", "CrawlerURL url:100", (int) 'a', 32L);
        long long5 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setOnlyOnPath("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration17 = builder12.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder12.setOnlyOnPath("CrawlerURL url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder12.setStartUrl("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setOnlyOnPath("Wrong content type");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setVerifyUrls(false);
        boolean boolean26 = assetResponse4.equals((java.lang.Object) builder23);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 32L + "'", long5 == 32L);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(crawlerConfiguration17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test08057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08057");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil2 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = headerUtil2.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable6 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("100", assetFetcher1, strMap4, "CrawlerURL url:com.soulgalore.crawler.auth");
        java.lang.String str7 = assetResponseCallable6.toString();
        java.lang.String str8 = assetResponseCallable6.toString();
        java.lang.String str9 = assetResponseCallable6.toString();
        java.lang.String str10 = assetResponseCallable6.toString();
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.assets.AssetResponse assetResponse11 = assetResponseCallable6.call();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerUtil2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AssetResponseCallable url:100" + "'", str7, "AssetResponseCallable url:100");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AssetResponseCallable url:100" + "'", str8, "AssetResponseCallable url:100");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AssetResponseCallable url:100" + "'", str9, "AssetResponseCallable url:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AssetResponseCallable url:100" + "'", str10, "AssetResponseCallable url:100");
    }

    @Test
    public void test08058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08058");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("CrawlerURL url:result.csv", "AssetResponseCallable url:result.csv", 32, (long) 582);
        java.lang.String str5 = assetResponse4.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setNotOnPath("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setStartUrl("AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setMaxLevels(582);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setVerifyUrls(true);
        boolean boolean21 = assetResponse4.equals((java.lang.Object) builder20);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CrawlerURL url:result.csv" + "'", str5, "CrawlerURL url:result.csv");
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test08059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08059");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.lang.String str5 = crawlerURL2.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder9.build();
        java.lang.String str11 = crawlerConfiguration10.getStartUrl();
        int int12 = crawlerConfiguration10.getMaxLevels();
        int int13 = crawlerConfiguration10.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse20 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) -1, strMap14, "100", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) (short) -1, "com.soulgalore.crawler.nrofhttpthreads", 0L);
        java.lang.String str22 = hTMLPageResponse20.getHeaderValue("-1");
        java.lang.String str23 = hTMLPageResponse20.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = hTMLPageResponse20.getPageUrl();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "urls.txt" + "'", str5, "urls.txt");
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.auth" + "'", str23, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL24);
    }

    @Test
    public void test08060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08060");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setOnlyOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setOnlyOnPath("AssetResponseCallable url:result.csv");
        java.lang.Class<?> wildcardClass19 = builder16.getClass();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test08061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08061");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.lang.String str14 = hTMLPageResponse12.getResponseType();
        java.lang.String str15 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "com.soulgalore.crawler.auth");
        java.lang.String str21 = crawlerURL20.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration26 = builder25.build();
        java.lang.String str27 = crawlerConfiguration26.getOnlyOnPath();
        boolean boolean28 = crawlerConfiguration26.isVerifyUrls();
        int int29 = crawlerConfiguration26.getMaxLevels();
        int int30 = crawlerConfiguration26.getMaxLevels();
        boolean boolean31 = crawlerConfiguration26.isVerifyUrls();
        boolean boolean32 = crawlerConfiguration26.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = crawlerConfiguration26.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse39 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, 100, strMap33, "Unknown error", "com.soulgalore.crawler.http.socket.timeout", (long) 10, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", 0L);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL16, (int) '4', strMap33, "97", "100", (long) (byte) 1, "com.soulgalore.crawler.http.socket.timeout", (long) (byte) -1);
        java.lang.String str46 = hTMLPageResponse45.toString();
        java.lang.Object obj47 = null;
        boolean boolean48 = hTMLPageResponse45.equals(obj47);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder49 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder51 = builder49.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder53 = builder49.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration54 = builder49.build();
        java.lang.String str55 = crawlerConfiguration54.getRequestHeaders();
        java.lang.String str56 = crawlerConfiguration54.getRequestHeaders();
        boolean boolean58 = crawlerConfiguration54.equals((java.lang.Object) 0.0d);
        boolean boolean59 = crawlerConfiguration54.isVerifyUrls();
        java.lang.String str60 = crawlerConfiguration54.getStartUrl();
        java.lang.String str61 = crawlerConfiguration54.getStartUrl();
        java.lang.String str62 = crawlerConfiguration54.getRequestHeaders();
        boolean boolean63 = hTMLPageResponse45.equals((java.lang.Object) str62);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.auth" + "'", str15, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "CrawlerURL url:urls.txt" + "'", str21, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(crawlerConfiguration26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:100 type:com.soulgalore.crawler.http.socket.timeout" + "'", str46, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:100 type:com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(crawlerConfiguration54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test08062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08062");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray9 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, assetResponseArray9);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray12 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13, assetResponseArray12);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult15 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult16 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet8, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray17 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, assetResponseArray17);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray20 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet21 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21, assetResponseArray20);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult23 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet24 = assetsVerificationResult23.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = assetsVerificationResult23.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = assetsVerificationResult23.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet27 = assetsVerificationResult23.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray28 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, assetResponseArray28);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray31 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet32 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32, assetResponseArray31);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult34 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet35 = assetsVerificationResult34.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet36 = assetsVerificationResult34.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray37 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet38 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet38, assetResponseArray37);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray40 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet41, assetResponseArray40);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult43 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet38, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet41);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult44 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet36, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet38);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult45 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet27, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet38);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult46 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, assetResponseSet27);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet47 = assetsVerificationResult46.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet48 = assetsVerificationResult46.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet49 = assetsVerificationResult46.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet50 = assetsVerificationResult46.getWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(assetResponseArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(assetResponseArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(assetResponseArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(assetResponseSet24);
        org.junit.Assert.assertNotNull(assetResponseSet25);
        org.junit.Assert.assertNotNull(assetResponseSet26);
        org.junit.Assert.assertNotNull(assetResponseSet27);
        org.junit.Assert.assertNotNull(assetResponseArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(assetResponseArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(assetResponseSet35);
        org.junit.Assert.assertNotNull(assetResponseSet36);
        org.junit.Assert.assertNotNull(assetResponseArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(assetResponseArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(assetResponseSet47);
        org.junit.Assert.assertNotNull(assetResponseSet48);
        org.junit.Assert.assertNotNull(assetResponseSet49);
        org.junit.Assert.assertNotNull(assetResponseSet50);
    }

    @Test
    public void test08063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08063");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:HTMLPageResponseurl:CrawlerURL url:com.soulgalore.crawler.authresponseCode:0encoding:CrawlerURL url:result.csv type:-1", "AssetResponseCallable url:AssetResponseCallable url:Wrong content type");
        java.net.URI uRI3 = crawlerURL2.getUri();
        java.lang.String str4 = crawlerURL2.toString();
        java.lang.String str5 = crawlerURL2.getHost();
        java.lang.Class<?> wildcardClass6 = crawlerURL2.getClass();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CrawlerURL url:CrawlerURL url:HTMLPageResponseurl:CrawlerURL url:com.soulgalore.crawler.authresponseCode:0encoding:CrawlerURL url:result.csv type:-1" + "'", str4, "CrawlerURL url:CrawlerURL url:HTMLPageResponseurl:CrawlerURL url:com.soulgalore.crawler.authresponseCode:0encoding:CrawlerURL url:result.csv type:-1");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test08064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08064");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder2.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder2.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration9 = builder2.build();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = crawlerConfiguration9.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable12 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("com.soulgalore.crawler.auth", assetFetcher1, strMap10, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.lang.String str13 = assetResponseCallable12.toString();
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.assets.AssetResponse assetResponse14 = assetResponseCallable12.call();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(crawlerConfiguration9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AssetResponseCallable url:com.soulgalore.crawler.auth" + "'", str13, "AssetResponseCallable url:com.soulgalore.crawler.auth");
    }

    @Test
    public void test08065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08065");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout", "AssetResponseCallable url:Malformed url");
        java.net.URI uRI3 = crawlerURL2.getUri();
        boolean boolean4 = crawlerURL2.isWrongSyntax();
        java.net.URI uRI5 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL10 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI11 = crawlerURL10.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean15 = crawlerURL14.isWrongSyntax();
        java.lang.String str16 = crawlerURL14.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse24 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL14, (int) 'a', strMap18, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str25 = hTMLPageResponse24.getUrl();
        boolean boolean26 = crawlerURL10.equals((java.lang.Object) str25);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher29 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil30 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = headerUtil30.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable34 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher29, strMap32, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse40 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL10, (int) (short) 100, strMap32, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse46 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (int) (short) -1, strMap32, "com.soulgalore.crawler.http.socket.timeout", "errorurls.txt", (long) 100, "result.csv", (long) (short) 0);
        org.jsoup.nodes.Document document47 = hTMLPageResponse46.getBody();
        int int48 = hTMLPageResponse46.getResponseCode();
        boolean boolean49 = crawlerURL2.equals((java.lang.Object) hTMLPageResponse46);
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertNull(uRI11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "urls.txt" + "'", str16, "urls.txt");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "com.soulgalore.crawler.auth" + "'", str25, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(headerUtil30);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(document47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test08066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08066");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration9 = builder6.build();
        java.lang.String str10 = crawlerConfiguration9.getStartUrl();
        java.lang.String str11 = crawlerConfiguration9.getStartUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(crawlerConfiguration9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test08067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08067");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet4 = authUtil0.createAuthsFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:100 type:com.soulgalore.crawler.http.socket.timeout type:Unknown error");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"com.soulgalore.crawler.authresponseCode\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
        org.junit.Assert.assertNotNull(authSet2);
    }

    @Test
    public void test08068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08068");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setOnlyOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setOnlyOnPath("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder18.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration23 = builder18.build();
        java.lang.String str24 = crawlerConfiguration23.getOnlyOnPath();
        int int25 = crawlerConfiguration23.getMaxLevels();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(crawlerConfiguration23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AssetResponseCallable url:result.csv" + "'", str24, "AssetResponseCallable url:result.csv");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test08069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08069");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("Response timed out");
        boolean boolean2 = crawlerURL1.isWrongSyntax();
        java.lang.String str3 = crawlerURL1.toString();
        boolean boolean4 = crawlerURL1.isWrongSyntax();
        boolean boolean5 = crawlerURL1.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:35", "AssetResponseCallable url:Wrong content type");
        boolean boolean9 = crawlerURL1.equals((java.lang.Object) "CrawlerURL url:35");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "CrawlerURL url:Response timed out" + "'", str3, "CrawlerURL url:Response timed out");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test08070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08070");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder14.setMaxLevels((int) (byte) -1);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder14.setNotOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setMaxLevels((int) '4');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setNotOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setOnlyOnPath("Response timed out");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
    }

    @Test
    public void test08071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08071");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.net.URI uRI3 = crawlerURL2.getUri();
        java.lang.String str4 = crawlerURL2.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI9 = crawlerURL8.getUri();
        java.lang.String str10 = crawlerURL8.getReferer();
        java.lang.String str11 = crawlerURL8.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration16 = builder15.build();
        java.lang.String str17 = crawlerConfiguration16.getStartUrl();
        int int18 = crawlerConfiguration16.getMaxLevels();
        int int19 = crawlerConfiguration16.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = crawlerConfiguration16.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse26 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, (int) (byte) -1, strMap20, "100", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) (short) -1, "com.soulgalore.crawler.nrofhttpthreads", 0L);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse32 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 0, strMap20, "0", "", 35L, "AssetResponseCallable url:result.csv", 581L);
        java.lang.String str33 = hTMLPageResponse32.getUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = hTMLPageResponse32.getResponseHeaders();
        java.lang.String str35 = hTMLPageResponse32.getResponseType();
        org.jsoup.nodes.Document document36 = hTMLPageResponse32.getBody();
        java.lang.String str37 = hTMLPageResponse32.getUrl();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CrawlerURL url:urls.txt" + "'", str4, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertNull(uRI9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "urls.txt" + "'", str10, "urls.txt");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "urls.txt" + "'", str11, "urls.txt");
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(crawlerConfiguration16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "urls.txt" + "'", str33, "urls.txt");
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AssetResponseCallable url:result.csv" + "'", str35, "AssetResponseCallable url:result.csv");
        org.junit.Assert.assertNull(document36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "urls.txt" + "'", str37, "urls.txt");
    }

    @Test
    public void test08072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08072");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.lang.String str5 = crawlerURL2.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder9.build();
        java.lang.String str11 = crawlerConfiguration10.getStartUrl();
        int int12 = crawlerConfiguration10.getMaxLevels();
        int int13 = crawlerConfiguration10.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse20 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) -1, strMap14, "100", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) (short) -1, "com.soulgalore.crawler.nrofhttpthreads", 0L);
        java.lang.String str22 = hTMLPageResponse20.getHeaderValue("-1");
        java.lang.String str24 = hTMLPageResponse20.getHeaderValue("");
        java.lang.String str25 = hTMLPageResponse20.getResponseType();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL26 = hTMLPageResponse20.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL27 = hTMLPageResponse20.getPageUrl();
        java.lang.Class<?> wildcardClass28 = hTMLPageResponse20.getClass();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "urls.txt" + "'", str5, "urls.txt");
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str25, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(crawlerURL26);
        org.junit.Assert.assertNotNull(crawlerURL27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test08073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08073");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder8.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration19 = builder18.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration20 = builder18.build();
        boolean boolean21 = crawlerConfiguration3.equals((java.lang.Object) crawlerConfiguration20);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = crawlerConfiguration20.getRequestHeadersMap();
        java.lang.String str23 = crawlerConfiguration20.getStartUrl();
        java.lang.String str24 = crawlerConfiguration20.getRequestHeaders();
        java.lang.String str25 = crawlerConfiguration20.getNotOnPath();
        java.lang.String str26 = crawlerConfiguration20.getOnlyOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(crawlerConfiguration19);
        org.junit.Assert.assertNotNull(crawlerConfiguration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str23, "com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "urls.txt" + "'", str25, "urls.txt");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
    }

    @Test
    public void test08074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08074");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "Response timed out");
        com.soulgalore.crawler.util.HeaderUtil headerUtil4 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil4.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) '4', strMap6, "com.soulgalore.crawler.http.socket.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 580, "com.soulgalore.crawler.auth", (long) (short) 1);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        java.lang.String str14 = hTMLPageResponse12.getUrl();
        java.lang.Class<?> wildcardClass15 = hTMLPageResponse12.getClass();
        org.junit.Assert.assertNotNull(headerUtil4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "urls.txt" + "'", str13, "urls.txt");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "urls.txt" + "'", str14, "urls.txt");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test08075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08075");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        int int5 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str6 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str7 = crawlerConfiguration3.getStartUrl();
        java.lang.String str8 = crawlerConfiguration3.getRequestHeaders();
        boolean boolean9 = crawlerConfiguration3.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = crawlerConfiguration3.getRequestHeadersMap();
        boolean boolean11 = crawlerConfiguration3.isVerifyUrls();
        com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider17 = new com.soulgalore.crawler.guice.HttpClientProvider(100, (int) '4', (int) 'a', "", "CrawlerURL url:com.soulgalore.crawler.auth");
        org.apache.http.client.HttpClient httpClient18 = httpClientProvider17.get();
        org.apache.http.client.HttpClient httpClient19 = httpClientProvider17.get();
        org.apache.http.client.HttpClient httpClient20 = httpClientProvider17.get();
        boolean boolean21 = crawlerConfiguration3.equals((java.lang.Object) httpClient20);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(httpClient18);
        org.junit.Assert.assertNotNull(httpClient19);
        org.junit.Assert.assertNotNull(httpClient20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test08076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08076");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        long long14 = hTMLPageResponse12.getFetchTime();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        java.lang.String str17 = crawlerURL16.toString();
        boolean boolean18 = crawlerURL16.isWrongSyntax();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 100L + "'", long14 == 100L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str17, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test08077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08077");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:AssetResponseCallable url:Malformed url", "CrawlerURL url:-1", (int) (short) 1, 0L);
        long long5 = assetResponse4.getFetchTime();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
    }

    @Test
    public void test08078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08078");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable4 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:32encoding:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", assetFetcher1, strMap2, "-1");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.assets.AssetResponse assetResponse5 = assetResponseCallable4.call();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08079");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet4 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet6 = authUtil0.createAuthsFromString("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet8 = authUtil0.createAuthsFromString("AssetResponseCallable url:CrawlerURL url:CrawlerURL url:CrawlerURL url:errorassets.csv");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"CrawlerURL url\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
        org.junit.Assert.assertNotNull(authSet2);
        org.junit.Assert.assertNotNull(authSet4);
        org.junit.Assert.assertNotNull(authSet6);
    }

    @Test
    public void test08080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08080");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        boolean boolean3 = crawlerURL1.isWrongSyntax();
        java.lang.String str4 = crawlerURL1.getHost();
        boolean boolean5 = crawlerURL1.isWrongSyntax();
        java.net.URI uRI6 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI9 = crawlerURL8.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration13 = builder12.build();
        java.lang.String str14 = crawlerConfiguration13.getStartUrl();
        int int15 = crawlerConfiguration13.getMaxLevels();
        int int16 = crawlerConfiguration13.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean20 = crawlerURL19.isWrongSyntax();
        java.lang.String str21 = crawlerURL19.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL19, (int) 'a', strMap23, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str30 = hTMLPageResponse29.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL31 = hTMLPageResponse29.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = hTMLPageResponse29.getResponseHeaders();
        java.lang.String str33 = hTMLPageResponse29.getUrl();
        org.jsoup.nodes.Document document34 = hTMLPageResponse29.getBody();
        boolean boolean35 = crawlerConfiguration13.equals((java.lang.Object) hTMLPageResponse29);
        boolean boolean36 = crawlerURL8.equals((java.lang.Object) hTMLPageResponse29);
        java.lang.String str37 = crawlerURL8.getHost();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL40 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean41 = crawlerURL40.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder43 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder45 = builder43.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder47 = builder43.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration48 = builder43.build();
        java.lang.String str49 = crawlerConfiguration48.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = crawlerConfiguration48.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse56 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL40, (-1), strMap50, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        java.lang.String str58 = hTMLPageResponse56.getHeaderValue("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL59 = hTMLPageResponse56.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL60 = hTMLPageResponse56.getPageUrl();
        java.lang.String str61 = hTMLPageResponse56.getEncoding();
        long long62 = hTMLPageResponse56.getFetchTime();
        java.lang.String str63 = hTMLPageResponse56.getResponseType();
        java.lang.String str64 = hTMLPageResponse56.toString();
        boolean boolean65 = crawlerURL8.equals((java.lang.Object) hTMLPageResponse56);
        java.lang.String str66 = hTMLPageResponse56.toString();
        boolean boolean67 = crawlerURL1.equals((java.lang.Object) str66);
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(uRI6);
        org.junit.Assert.assertNull(uRI9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(crawlerConfiguration13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "urls.txt" + "'", str21, "urls.txt");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str30, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "com.soulgalore.crawler.auth" + "'", str33, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(crawlerConfiguration48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(crawlerURL59);
        org.junit.Assert.assertNotNull(crawlerURL60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "errorurls.txt" + "'", str61, "errorurls.txt");
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 580L + "'", long62 == 580L);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "com.soulgalore.crawler.auth" + "'", str63, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth" + "'", str64, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth" + "'", str66, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test08081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08081");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder2.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration6 = builder5.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder5.setOnlyOnPath("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration9 = builder5.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder5.setRequestHeaders("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Unknown error");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(crawlerConfiguration6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(crawlerConfiguration9);
        org.junit.Assert.assertNotNull(builder11);
    }

    @Test
    public void test08082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08082");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("CrawlerURL url:CrawlerURL url:CrawlerURL url:errorassets.csv", "AssetResponseCallable url:Redirected to new domain", 10, 0L);
        java.lang.String str5 = assetResponse4.getReferer();
        long long6 = assetResponse4.getFetchTime();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AssetResponseCallable url:Redirected to new domain" + "'", str5, "AssetResponseCallable url:Redirected to new domain");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    }

    @Test
    public void test08083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08083");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = crawlerURL2.getUrl();
        boolean boolean14 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher17 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean21 = crawlerURL20.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder23.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration28 = builder23.build();
        java.lang.String str29 = crawlerConfiguration28.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = crawlerConfiguration28.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse36 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, (-1), strMap30, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL40 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI41 = crawlerURL40.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL45 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean46 = crawlerURL45.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder48 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder50 = builder48.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder52 = builder48.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration53 = builder48.build();
        java.lang.String str54 = crawlerConfiguration53.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = crawlerConfiguration53.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse61 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL45, (-1), strMap55, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse67 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL40, 100, strMap55, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse73 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, (int) (byte) 10, strMap55, "100", "errorassets.csv", (long) (byte) 100, "", (long) (short) 100);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable75 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("", assetFetcher17, strMap55, "CrawlerURL url:1");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse81 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (short) -1, strMap55, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", (long) 580, "AssetResponseCallable url:com.soulgalore.crawler.nrofhttpthreads", (long) ' ');
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse86 = new com.soulgalore.crawler.core.assets.AssetResponse("Unknown error", "CrawlerURL url:urls.txt", 583, (long) 10);
        com.soulgalore.crawler.util.StatusCode statusCode87 = com.soulgalore.crawler.util.StatusCode.SC_MALFORMED_URI;
        java.lang.String str88 = statusCode87.getFriendlyName();
        boolean boolean89 = assetResponse86.equals((java.lang.Object) statusCode87);
        long long90 = assetResponse86.getFetchTime();
        boolean boolean91 = hTMLPageResponse81.equals((java.lang.Object) assetResponse86);
        java.lang.String str92 = assetResponse86.getReferer();
        java.lang.String str93 = assetResponse86.getUrl();
        long long94 = assetResponse86.getFetchTime();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(crawlerConfiguration28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(uRI41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(crawlerConfiguration53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertTrue("'" + statusCode87 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_MALFORMED_URI + "'", statusCode87.equals(com.soulgalore.crawler.util.StatusCode.SC_MALFORMED_URI));
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Malformed url" + "'", str88, "Malformed url");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 10L + "'", long90 == 10L);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "CrawlerURL url:urls.txt" + "'", str92, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "Unknown error" + "'", str93, "Unknown error");
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 10L + "'", long94 == 10L);
    }

    @Test
    public void test08084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08084");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        long long14 = hTMLPageResponse12.getFetchTime();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:hi!");
        boolean boolean19 = hTMLPageResponse12.equals((java.lang.Object) crawlerURL18);
        java.lang.String str20 = hTMLPageResponse12.getUrl();
        java.lang.String str21 = hTMLPageResponse12.getUrl();
        java.lang.Class<?> wildcardClass22 = hTMLPageResponse12.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 100L + "'", long14 == 100L);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "com.soulgalore.crawler.auth" + "'", str20, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "com.soulgalore.crawler.auth" + "'", str21, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test08085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08085");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        java.lang.String str2 = crawlerURL1.getHost();
        java.lang.String str3 = crawlerURL1.getHost();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test08086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08086");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray8 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet9, assetResponseArray8);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray11 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, assetResponseArray11);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult14 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet9, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult15 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet7, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet16 = assetsVerificationResult15.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet17 = assetsVerificationResult15.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = assetsVerificationResult15.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet19 = assetsVerificationResult15.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = null;
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray21 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, assetResponseArray21);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray24 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25, assetResponseArray24);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult27 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet28 = assetsVerificationResult27.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = assetsVerificationResult27.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray30 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet31 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet31, assetResponseArray30);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray33 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet34 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet34, assetResponseArray33);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult36 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet31, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet34);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult37 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet29, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet31);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray38 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet39 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet39, assetResponseArray38);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray41 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet42 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet42, assetResponseArray41);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult44 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet39, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet42);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet45 = assetsVerificationResult44.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult46 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet29, assetResponseSet45);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet47 = assetsVerificationResult46.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray48 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet49 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet49, assetResponseArray48);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray51 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet52 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet52, assetResponseArray51);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult54 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet49, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet52);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet55 = assetsVerificationResult54.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet56 = assetsVerificationResult54.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray57 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet58 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet58, assetResponseArray57);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray60 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet61 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet61, assetResponseArray60);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult63 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet58, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet61);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet64 = assetsVerificationResult63.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet65 = assetsVerificationResult63.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray66 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet67 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet67, assetResponseArray66);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray69 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet70 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet70, assetResponseArray69);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult72 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet67, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet70);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult73 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet65, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet67);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray74 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet75 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet75, assetResponseArray74);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray77 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet78 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet78, assetResponseArray77);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult80 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet75, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet78);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet81 = assetsVerificationResult80.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult82 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet65, assetResponseSet81);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult83 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet56, assetResponseSet65);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet84 = assetsVerificationResult83.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult85 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet47, assetResponseSet84);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult86 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet20, assetResponseSet47);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult87 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet19, assetResponseSet20);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet88 = assetsVerificationResult87.getNonWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(assetResponseArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(assetResponseSet16);
        org.junit.Assert.assertNotNull(assetResponseSet17);
        org.junit.Assert.assertNotNull(assetResponseSet18);
        org.junit.Assert.assertNotNull(assetResponseSet19);
        org.junit.Assert.assertNotNull(assetResponseArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(assetResponseArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(assetResponseSet28);
        org.junit.Assert.assertNotNull(assetResponseSet29);
        org.junit.Assert.assertNotNull(assetResponseArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(assetResponseArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(assetResponseArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(assetResponseArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(assetResponseSet45);
        org.junit.Assert.assertNotNull(assetResponseSet47);
        org.junit.Assert.assertNotNull(assetResponseArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(assetResponseArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(assetResponseSet55);
        org.junit.Assert.assertNotNull(assetResponseSet56);
        org.junit.Assert.assertNotNull(assetResponseArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(assetResponseArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(assetResponseSet64);
        org.junit.Assert.assertNotNull(assetResponseSet65);
        org.junit.Assert.assertNotNull(assetResponseArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(assetResponseArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(assetResponseArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(assetResponseArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(assetResponseSet81);
        org.junit.Assert.assertNotNull(assetResponseSet84);
        org.junit.Assert.assertNull(assetResponseSet88);
    }

    @Test
    public void test08087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08087");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        java.lang.String str3 = crawlerURL1.getUrl();
        java.lang.String str4 = crawlerURL1.getHost();
        boolean boolean5 = crawlerURL1.isWrongSyntax();
        java.lang.String str6 = crawlerURL1.getHost();
        java.net.URI uRI7 = crawlerURL1.getUri();
        java.lang.String str8 = crawlerURL1.getReferer();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher11 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI15 = crawlerURL14.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean20 = crawlerURL19.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder22.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration27 = builder22.build();
        java.lang.String str28 = crawlerConfiguration27.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = crawlerConfiguration27.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse35 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL19, (-1), strMap29, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse41 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL14, 100, strMap29, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.util.Map<java.lang.String, java.lang.String> strMap42 = hTMLPageResponse41.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL45 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean46 = crawlerURL45.isWrongSyntax();
        java.lang.String str47 = crawlerURL45.getReferer();
        java.lang.String str48 = crawlerURL45.getHost();
        java.lang.String str49 = crawlerURL45.getUrl();
        boolean boolean50 = hTMLPageResponse41.equals((java.lang.Object) crawlerURL45);
        java.lang.String str51 = hTMLPageResponse41.getUrl();
        java.lang.String str52 = hTMLPageResponse41.getUrl();
        org.jsoup.nodes.Document document53 = hTMLPageResponse41.getBody();
        long long54 = hTMLPageResponse41.getFetchTime();
        org.jsoup.nodes.Document document55 = hTMLPageResponse41.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL56 = hTMLPageResponse41.getPageUrl();
        int int57 = hTMLPageResponse41.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = hTMLPageResponse41.getResponseHeaders();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable60 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("CrawlerURL url:Redirected to new domain", assetFetcher11, strMap58, "HTMLPageResponseurl:CrawlerURL url:com.soulgalore.crawler.authresponseCode:0encoding:CrawlerURL url:result.csv type:-1");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse66 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 35, strMap58, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout", "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout", (long) 97, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", 10L);
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str3, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(uRI7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(uRI15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(crawlerConfiguration27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "urls.txt" + "'", str47, "urls.txt");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "com.soulgalore.crawler.auth" + "'", str49, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "com.soulgalore.crawler.auth" + "'", str51, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "com.soulgalore.crawler.auth" + "'", str52, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNull(document55);
        org.junit.Assert.assertNotNull(crawlerURL56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        org.junit.Assert.assertNotNull(strMap58);
    }

    @Test
    public void test08088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08088");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setRequestHeaders("AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder8.setRequestHeaders("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:CrawlerURL url:1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setStartUrl("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setRequestHeaders("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:32encoding:hi! type:97");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test08089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08089");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder4.build();
        java.lang.String str6 = crawlerConfiguration5.getStartUrl();
        int int7 = crawlerConfiguration5.getMaxLevels();
        java.lang.String str8 = crawlerConfiguration5.getNotOnPath();
        boolean boolean10 = crawlerConfiguration5.equals((java.lang.Object) "Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap11 = crawlerConfiguration5.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable13 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("HTMLPageResponseurl:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:responseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth type:CrawlerURL url:Response timed out", assetFetcher1, strMap11, "CrawlerURL url:10");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.assets.AssetResponse assetResponse14 = assetResponseCallable13.call();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test08090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08090");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("100", "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.lang.String str3 = crawlerURL2.toString();
        boolean boolean4 = crawlerURL2.isWrongSyntax();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "CrawlerURL url:100" + "'", str3, "CrawlerURL url:100");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test08091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08091");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder10.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration12 = builder10.build();
        boolean boolean13 = crawlerConfiguration12.isVerifyUrls();
        boolean boolean14 = crawlerConfiguration12.isVerifyUrls();
        java.lang.String str15 = crawlerConfiguration12.getOnlyOnPath();
        java.lang.String str16 = crawlerConfiguration12.getStartUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt", "CrawlerURL url:com.soulgalore.crawler.proxy");
        boolean boolean20 = crawlerConfiguration12.equals((java.lang.Object) crawlerURL19);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL23 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean24 = crawlerURL23.isWrongSyntax();
        java.lang.String str25 = crawlerURL23.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse33 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL23, (int) 'a', strMap27, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str34 = hTMLPageResponse33.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL35 = hTMLPageResponse33.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = hTMLPageResponse33.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL37 = hTMLPageResponse33.getPageUrl();
        org.jsoup.nodes.Document document38 = hTMLPageResponse33.getBody();
        java.lang.String str39 = hTMLPageResponse33.getResponseType();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = hTMLPageResponse33.getResponseHeaders();
        long long41 = hTMLPageResponse33.getFetchTime();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder44 = builder42.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration45 = builder44.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder47 = builder44.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration48 = builder47.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder50 = builder47.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder52 = builder47.setVerifyUrls(false);
        boolean boolean53 = hTMLPageResponse33.equals((java.lang.Object) builder52);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder55 = builder52.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder57 = builder52.setMaxLevels(32);
        boolean boolean58 = crawlerConfiguration12.equals((java.lang.Object) builder57);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertNotNull(crawlerConfiguration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str16, "com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "urls.txt" + "'", str25, "urls.txt");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str34, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(crawlerURL37);
        org.junit.Assert.assertNull(document38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 100L + "'", long41 == 100L);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(crawlerConfiguration45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(crawlerConfiguration48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test08092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08092");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder8.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration19 = builder18.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration20 = builder18.build();
        boolean boolean21 = crawlerConfiguration3.equals((java.lang.Object) crawlerConfiguration20);
        java.lang.String str22 = crawlerConfiguration20.getNotOnPath();
        java.lang.String str23 = crawlerConfiguration20.getStartUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(crawlerConfiguration19);
        org.junit.Assert.assertNotNull(crawlerConfiguration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "urls.txt" + "'", str22, "urls.txt");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str23, "com.soulgalore.crawler.http.connection.timeout");
    }

    @Test
    public void test08093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08093");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder6.build();
        boolean boolean8 = crawlerConfiguration7.isVerifyUrls();
        int int9 = crawlerConfiguration7.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = crawlerConfiguration7.getRequestHeadersMap();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL13 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI14 = crawlerURL13.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean19 = crawlerURL18.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder21.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration26 = builder21.build();
        java.lang.String str27 = crawlerConfiguration26.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = crawlerConfiguration26.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse34 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL18, (-1), strMap28, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse40 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL13, 100, strMap28, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.lang.String str41 = hTMLPageResponse40.getEncoding();
        java.lang.String str42 = hTMLPageResponse40.toString();
        int int43 = hTMLPageResponse40.getResponseCode();
        boolean boolean44 = crawlerConfiguration7.equals((java.lang.Object) int43);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = crawlerConfiguration7.getRequestHeadersMap();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(uRI14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(crawlerConfiguration26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Malformed url" + "'", str41, "Malformed url");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str42, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strMap45);
    }

    @Test
    public void test08094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08094");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setStartUrl("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder0.setNotOnPath("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setMaxLevels((int) (byte) 1);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration13 = builder12.build();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(crawlerConfiguration13);
    }

    @Test
    public void test08095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08095");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setMaxLevels(10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setNotOnPath("result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setStartUrl("AssetResponseCallable url:Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setNotOnPath("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:52 type:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test08096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08096");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        long long16 = hTMLPageResponse12.getFetchTime();
        java.lang.String str17 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        java.lang.String str19 = crawlerURL18.getHost();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder20.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder20.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder20.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration27 = builder20.build();
        java.lang.Object obj28 = null;
        boolean boolean29 = crawlerConfiguration27.equals(obj28);
        java.lang.String str30 = crawlerConfiguration27.getNotOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = crawlerConfiguration27.getRequestHeadersMap();
        boolean boolean32 = crawlerURL18.equals((java.lang.Object) crawlerConfiguration27);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL35 = new com.soulgalore.crawler.core.CrawlerURL("35", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout");
        java.lang.String str36 = crawlerURL35.getHost();
        java.lang.String str37 = crawlerURL35.toString();
        boolean boolean38 = crawlerConfiguration27.equals((java.lang.Object) crawlerURL35);
        boolean boolean39 = crawlerURL35.isWrongSyntax();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str17, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(crawlerConfiguration27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "urls.txt" + "'", str30, "urls.txt");
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "CrawlerURL url:35" + "'", str37, "CrawlerURL url:35");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test08097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08097");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder4.setOnlyOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setMaxLevels((int) (byte) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setStartUrl("Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder12.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder12.setNotOnPath("HTMLPageResponseurl:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:responseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth type:CrawlerURL url:Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder12.setNotOnPath("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test08098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08098");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.lang.String str12 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet13 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult11.getUrls();
        java.lang.String str17 = crawlerResult11.getTheStartPoint();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet18 = crawlerResult11.getVerifiedURLResponses();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test08099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08099");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean14 = assetResponse4.equals((java.lang.Object) 100L);
        java.lang.String str15 = assetResponse4.getReferer();
        java.lang.String str16 = assetResponse4.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder17.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder23.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder29.setVerifyUrls(false);
        boolean boolean32 = assetResponse4.equals((java.lang.Object) false);
        java.lang.String str33 = assetResponse4.getUrl();
        long long34 = assetResponse4.getFetchTime();
        int int35 = assetResponse4.getResponseCode();
        long long36 = assetResponse4.getFetchTime();
        java.lang.Object obj37 = null;
        boolean boolean38 = assetResponse4.equals(obj37);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100" + "'", str15, "100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "100" + "'", str16, "100");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test08100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08100");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setStartUrl("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder0.setNotOnPath("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder0.setStartUrl("Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder10.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration12 = builder10.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder10.setMaxLevels(52);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder10.setVerifyUrls(true);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertNotNull(crawlerConfiguration12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test08101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08101");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder0.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder0.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration6 = builder5.build();
        java.lang.String str7 = crawlerConfiguration6.getNotOnPath();
        java.lang.String str8 = crawlerConfiguration6.getRequestHeaders();
        java.lang.String str9 = crawlerConfiguration6.getStartUrl();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(crawlerConfiguration6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str9, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
    }

    @Test
    public void test08102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08102");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        boolean boolean3 = crawlerURL1.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean7 = crawlerURL6.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder9.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration14 = builder9.build();
        java.lang.String str15 = crawlerConfiguration14.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = crawlerConfiguration14.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse22 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL6, (-1), strMap16, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int23 = hTMLPageResponse22.getResponseCode();
        long long24 = hTMLPageResponse22.getFetchTime();
        long long25 = hTMLPageResponse22.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL28 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI29 = crawlerURL28.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean34 = crawlerURL33.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder36.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder36.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration41 = builder36.build();
        java.lang.String str42 = crawlerConfiguration41.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = crawlerConfiguration41.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse49 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL33, (-1), strMap43, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse55 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL28, 100, strMap43, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        boolean boolean56 = hTMLPageResponse22.equals((java.lang.Object) 100);
        org.jsoup.nodes.Document document57 = hTMLPageResponse22.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL60 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "com.soulgalore.crawler.auth");
        java.lang.String str61 = crawlerURL60.toString();
        boolean boolean62 = hTMLPageResponse22.equals((java.lang.Object) str61);
        boolean boolean63 = crawlerURL1.equals((java.lang.Object) hTMLPageResponse22);
        java.lang.String str64 = hTMLPageResponse22.getResponseType();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL65 = hTMLPageResponse22.getPageUrl();
        java.net.URI uRI66 = crawlerURL65.getUri();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(crawlerConfiguration14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 580L + "'", long24 == 580L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 580L + "'", long25 == 580L);
        org.junit.Assert.assertNull(uRI29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(crawlerConfiguration41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(document57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "CrawlerURL url:urls.txt" + "'", str61, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "com.soulgalore.crawler.auth" + "'", str64, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL65);
        org.junit.Assert.assertNull(uRI66);
    }

    @Test
    public void test08103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08103");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("hi!", "Unknown error", 97, (long) 1);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL9 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray10 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL9 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet11 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet11, crawlerURLArray10);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet13 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray14 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet15, hTMLPageResponseArray14);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult17 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet11, hTMLPageResponseSet13, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet15);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet18 = crawlerResult17.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet19 = crawlerResult17.getNonWorkingUrls();
        java.lang.String str20 = crawlerResult17.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet21 = crawlerResult17.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL25 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray26 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL25 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet27 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet27, crawlerURLArray26);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet29 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray30 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet31 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet31, hTMLPageResponseArray30);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult33 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet27, hTMLPageResponseSet29, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet31);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet34 = crawlerResult33.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet35 = crawlerResult33.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet36 = null;
        com.soulgalore.crawler.core.CrawlerResult crawlerResult37 = new com.soulgalore.crawler.core.CrawlerResult("0", crawlerURLSet21, hTMLPageResponseSet35, hTMLPageResponseSet36);
        java.lang.String str38 = crawlerResult37.getTheStartPoint();
        boolean boolean39 = assetResponse4.equals((java.lang.Object) crawlerResult37);
        java.lang.String str40 = crawlerResult37.getTheStartPoint();
        java.lang.String str41 = crawlerResult37.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet42 = crawlerResult37.getUrls();
        java.lang.String str43 = crawlerResult37.getTheStartPoint();
        org.junit.Assert.assertNotNull(crawlerURLArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet18);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet21);
        org.junit.Assert.assertNotNull(crawlerURLArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet34);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "0" + "'", str38, "0");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "0" + "'", str40, "0");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "0" + "'", str41, "0");
        org.junit.Assert.assertNotNull(crawlerURLSet42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "0" + "'", str43, "0");
    }

    @Test
    public void test08104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08104");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder10.build();
        boolean boolean12 = crawlerConfiguration11.isVerifyUrls();
        java.lang.String str13 = crawlerConfiguration11.getNotOnPath();
        java.lang.String str14 = crawlerConfiguration11.getOnlyOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "urls.txt" + "'", str13, "urls.txt");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test08105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08105");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        long long16 = hTMLPageResponse12.getFetchTime();
        java.lang.String str17 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder19.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder19.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder25.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setVerifyUrls(false);
        boolean boolean30 = crawlerURL18.equals((java.lang.Object) builder29);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder29.setStartUrl("HTMLPageResponseurl:hi!responseCode:10encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str17, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder32);
    }

    @Test
    public void test08106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08106");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI5 = crawlerURL4.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean9 = crawlerURL8.isWrongSyntax();
        java.lang.String str10 = crawlerURL8.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, (int) 'a', strMap12, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str19 = hTMLPageResponse18.getUrl();
        boolean boolean20 = crawlerURL4.equals((java.lang.Object) str19);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher23 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil24 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = headerUtil24.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable28 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher23, strMap26, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse34 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL4, (int) (short) 100, strMap26, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse40 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) -1, strMap26, "com.soulgalore.crawler.http.socket.timeout", "errorurls.txt", (long) 100, "result.csv", (long) (short) 0);
        org.jsoup.nodes.Document document41 = hTMLPageResponse40.getBody();
        long long42 = hTMLPageResponse40.getFetchTime();
        java.lang.String str43 = hTMLPageResponse40.getResponseType();
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "urls.txt" + "'", str10, "urls.txt");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "com.soulgalore.crawler.auth" + "'", str19, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(headerUtil24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(document41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "result.csv" + "'", str43, "result.csv");
    }

    @Test
    public void test08107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08107");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray20 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL19 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet21 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet21, crawlerURLArray20);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet23 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray24 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet25 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet25, hTMLPageResponseArray24);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult27 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet21, hTMLPageResponseSet23, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet25);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet28 = crawlerResult27.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet29 = crawlerResult27.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet30 = crawlerResult27.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet31 = crawlerResult27.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL35 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray36 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL35 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet37 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet37, crawlerURLArray36);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet39 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray40 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet41, hTMLPageResponseArray40);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult43 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet37, hTMLPageResponseSet39, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet41);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet44 = crawlerResult43.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet45 = crawlerResult43.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet46 = crawlerResult43.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet47 = crawlerResult43.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet48 = crawlerResult43.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet49 = crawlerResult43.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult50 = new com.soulgalore.crawler.core.CrawlerResult("Malformed url", crawlerURLSet15, hTMLPageResponseSet31, hTMLPageResponseSet49);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet51 = crawlerResult50.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet52 = crawlerResult50.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet53 = crawlerResult50.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet54 = crawlerResult50.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet55 = crawlerResult50.getUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(crawlerURLArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet28);
        org.junit.Assert.assertNotNull(crawlerURLSet29);
        org.junit.Assert.assertNotNull(crawlerURLSet30);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet31);
        org.junit.Assert.assertNotNull(crawlerURLArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet44);
        org.junit.Assert.assertNotNull(crawlerURLSet45);
        org.junit.Assert.assertNotNull(crawlerURLSet46);
        org.junit.Assert.assertNotNull(crawlerURLSet47);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet48);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet49);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet51);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet52);
        org.junit.Assert.assertNotNull(crawlerURLSet53);
        org.junit.Assert.assertNotNull(crawlerURLSet54);
        org.junit.Assert.assertNotNull(crawlerURLSet55);
    }

    @Test
    public void test08108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08108");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        com.soulgalore.crawler.util.StatusCode statusCode6 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN;
        boolean boolean7 = crawlerConfiguration3.equals((java.lang.Object) statusCode6);
        boolean boolean8 = crawlerConfiguration3.isVerifyUrls();
        java.lang.String str9 = crawlerConfiguration3.getOnlyOnPath();
        java.lang.String str10 = crawlerConfiguration3.getStartUrl();
        boolean boolean11 = crawlerConfiguration3.isVerifyUrls();
        java.lang.String str12 = crawlerConfiguration3.getOnlyOnPath();
        int int13 = crawlerConfiguration3.getMaxLevels();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + statusCode6 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN + "'", statusCode6.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test08109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08109");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth", "CrawlerURL url:CrawlerURL url:CrawlerURL url:com.soulgalore.crawler.auth");
    }

    @Test
    public void test08110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08110");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.lang.String str2 = crawlerURL1.getHost();
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test08111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08111");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setStartUrl("-1");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder6.build();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = crawlerConfiguration7.getRequestHeadersMap();
        java.lang.String str9 = crawlerConfiguration7.getStartUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean13 = crawlerURL12.isWrongSyntax();
        java.lang.String str14 = crawlerURL12.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse22 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL12, (int) 'a', strMap16, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str23 = crawlerURL12.getUrl();
        com.soulgalore.crawler.util.HeaderUtil headerUtil25 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = headerUtil25.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse33 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL12, (int) (short) 0, strMap27, "com.soulgalore.crawler.http.socket.timeout", "Malformed url", (long) '4', "Unknown error", (long) (byte) 100);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL34 = hTMLPageResponse33.getPageUrl();
        boolean boolean35 = crawlerConfiguration7.equals((java.lang.Object) hTMLPageResponse33);
        java.lang.String str36 = crawlerConfiguration7.getRequestHeaders();
        java.lang.String str37 = crawlerConfiguration7.getRequestHeaders();
        boolean boolean38 = crawlerConfiguration7.isVerifyUrls();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1" + "'", str9, "-1");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "urls.txt" + "'", str14, "urls.txt");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.auth" + "'", str23, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(headerUtil25);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(crawlerURL34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test08112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08112");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        long long16 = hTMLPageResponse12.getFetchTime();
        java.lang.String str17 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean22 = crawlerURL21.isWrongSyntax();
        java.lang.String str23 = crawlerURL21.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse31 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL21, (int) 'a', strMap25, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str32 = hTMLPageResponse31.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = hTMLPageResponse31.getResponseHeaders();
        org.jsoup.nodes.Document document34 = hTMLPageResponse31.getBody();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = hTMLPageResponse31.getResponseHeaders();
        boolean boolean36 = crawlerURL18.equals((java.lang.Object) strMap35);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass37 = strMap35.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "com.soulgalore.crawler.auth" + "'", str17, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "urls.txt" + "'", str23, "urls.txt");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str32, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(document34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test08113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08113");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.lang.String str5 = crawlerURL2.getHost();
        java.lang.String str6 = crawlerURL2.getReferer();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher9 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI12 = crawlerURL11.getUri();
        java.lang.String str13 = crawlerURL11.getUrl();
        java.lang.String str14 = crawlerURL11.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder16.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration21 = builder16.build();
        java.lang.String str22 = crawlerConfiguration21.getRequestHeaders();
        java.lang.String str23 = crawlerConfiguration21.getRequestHeaders();
        boolean boolean25 = crawlerConfiguration21.equals((java.lang.Object) 0.0d);
        boolean boolean26 = crawlerConfiguration21.isVerifyUrls();
        java.lang.String str27 = crawlerConfiguration21.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = crawlerConfiguration21.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse34 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL11, 0, strMap28, "10", "Unknown error", (long) (short) -1, "AssetResponseCallable url:Malformed url", (long) 97);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable36 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:-1", assetFetcher9, strMap28, "Response timed out");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse42 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap28, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", 35L, "AssetResponseCallable url:CrawlerURL url:10", 583L);
        java.lang.String str44 = hTMLPageResponse42.getHeaderValue("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "urls.txt" + "'", str6, "urls.txt");
        org.junit.Assert.assertNull(uRI12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str13, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str14, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(crawlerConfiguration21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test08114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08114");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration5.getRequestHeadersMap();
        java.lang.String str8 = crawlerConfiguration5.getStartUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration12 = builder11.build();
        java.lang.String str13 = crawlerConfiguration12.getStartUrl();
        boolean boolean14 = crawlerConfiguration12.isVerifyUrls();
        java.lang.String str15 = crawlerConfiguration12.getOnlyOnPath();
        boolean boolean16 = crawlerConfiguration5.equals((java.lang.Object) str15);
        java.lang.String str17 = crawlerConfiguration5.getStartUrl();
        boolean boolean18 = crawlerConfiguration5.isVerifyUrls();
        java.lang.String str19 = crawlerConfiguration5.getNotOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = crawlerConfiguration5.getRequestHeadersMap();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(crawlerConfiguration12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test08115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08115");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setOnlyOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder12.setNotOnPath("32");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setOnlyOnPath("35");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder18.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:-1encoding:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads type:AssetResponseCallable url:errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder18.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder18.setRequestHeaders("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:100 type:com.soulgalore.crawler.http.socket.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration27 = builder18.build();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(crawlerConfiguration27);
    }

    @Test
    public void test08116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08116");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setNotOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setMaxLevels((int) (byte) -1);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder6.setRequestHeaders("AssetResponseCallable url:errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration13 = builder12.build();
        boolean boolean14 = crawlerConfiguration13.isVerifyUrls();
        java.lang.String str15 = crawlerConfiguration13.getStartUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI18 = crawlerURL17.getUri();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse26 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL17, (int) ' ', strMap20, "AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout", "hi!", (long) (short) 10, "97", (long) (short) 10);
        boolean boolean27 = crawlerURL17.isWrongSyntax();
        boolean boolean28 = crawlerConfiguration13.equals((java.lang.Object) crawlerURL17);
        java.lang.String str29 = crawlerURL17.toString();
        java.net.URI uRI30 = crawlerURL17.getUri();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(crawlerConfiguration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(uRI18);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str29, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNull(uRI30);
    }

    @Test
    public void test08117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08117");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:AssetResponseCallable url:1", "AssetResponseCallable url:AssetResponseCallable url:Malformed url", (-1), (long) (byte) 10);
    }

    @Test
    public void test08118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08118");
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet1 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray6 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL5 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet7 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet7, crawlerURLArray6);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray10 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet11 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet11, hTMLPageResponseArray10);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult13 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet7, hTMLPageResponseSet9, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet11);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult13.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult13.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult13.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = crawlerResult13.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet18 = crawlerResult13.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet19 = crawlerResult13.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet20 = crawlerResult13.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet21 = crawlerResult13.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL26 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray27 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL26 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet28 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet28, crawlerURLArray27);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet30 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray31 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet32 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet32, hTMLPageResponseArray31);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult34 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet28, hTMLPageResponseSet30, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet32);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet35 = crawlerResult34.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet36 = crawlerResult34.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet37 = crawlerResult34.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet38 = crawlerResult34.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet39 = crawlerResult34.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL43 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray44 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL43 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet45 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet45, crawlerURLArray44);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet47 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray48 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet49 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet49, hTMLPageResponseArray48);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult51 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet45, hTMLPageResponseSet47, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet49);
        java.lang.String str52 = crawlerResult51.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet53 = crawlerResult51.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet54 = crawlerResult51.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL58 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray59 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL58 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet60 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet60, crawlerURLArray59);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet62 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray63 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet64 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet64, hTMLPageResponseArray63);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult66 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet60, hTMLPageResponseSet62, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet64);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet67 = crawlerResult66.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet68 = crawlerResult66.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult69 = new com.soulgalore.crawler.core.CrawlerResult("1", crawlerURLSet39, hTMLPageResponseSet54, hTMLPageResponseSet68);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet70 = crawlerResult69.getUrls();
        java.lang.String str71 = crawlerResult69.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet72 = crawlerResult69.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet73 = crawlerResult69.getVerifiedURLResponses();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult74 = new com.soulgalore.crawler.core.CrawlerResult("CrawlerURL url:urls.txt", crawlerURLSet1, hTMLPageResponseSet21, hTMLPageResponseSet73);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet75 = crawlerResult74.getVerifiedURLResponses();
        java.lang.String str76 = crawlerResult74.getTheStartPoint();
        java.lang.String str77 = crawlerResult74.getTheStartPoint();
        java.lang.String str78 = crawlerResult74.getTheStartPoint();
        org.junit.Assert.assertNotNull(crawlerURLArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(crawlerURLSet17);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet18);
        org.junit.Assert.assertNotNull(crawlerURLSet19);
        org.junit.Assert.assertNotNull(crawlerURLSet20);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet21);
        org.junit.Assert.assertNotNull(crawlerURLArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet35);
        org.junit.Assert.assertNotNull(crawlerURLSet36);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet37);
        org.junit.Assert.assertNotNull(crawlerURLSet38);
        org.junit.Assert.assertNotNull(crawlerURLSet39);
        org.junit.Assert.assertNotNull(crawlerURLArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet53);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet54);
        org.junit.Assert.assertNotNull(crawlerURLArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet67);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet68);
        org.junit.Assert.assertNotNull(crawlerURLSet70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "1" + "'", str71, "1");
        org.junit.Assert.assertNotNull(crawlerURLSet72);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet73);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "CrawlerURL url:urls.txt" + "'", str76, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "CrawlerURL url:urls.txt" + "'", str77, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "CrawlerURL url:urls.txt" + "'", str78, "CrawlerURL url:urls.txt");
    }

    @Test
    public void test08119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08119");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        boolean boolean22 = hTMLPageResponse12.equals((java.lang.Object) builder21);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder21.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder21.setRequestHeaders("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder21.setStartUrl("CrawlerURL url:HTMLPageResponseurl:CrawlerURL url:com.soulgalore.crawler.authresponseCode:0encoding:CrawlerURL url:result.csv type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder28.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder28.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setOnlyOnPath("HTMLPageResponseurl:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1responseCode:10encoding:hi! type:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
    }

    @Test
    public void test08120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08120");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder4.setOnlyOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setMaxLevels((int) (byte) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder12.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder12.setNotOnPath("AssetResponseCallable url:Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setOnlyOnPath("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setMaxLevels((int) (short) -1);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder19.setMaxLevels(1);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder19.setNotOnPath("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:-1encoding:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads type:AssetResponseCallable url:errorassets.csv");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
    }

    @Test
    public void test08121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08121");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:0encoding:Malformed url type:Unknown error", 582, 97L);
    }

    @Test
    public void test08122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08122");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int13 = hTMLPageResponse12.getResponseCode();
        int int14 = hTMLPageResponse12.getResponseCode();
        java.lang.String str15 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder16.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder20.setNotOnPath("errorurls.txt");
        boolean boolean23 = hTMLPageResponse12.equals((java.lang.Object) builder20);
        java.lang.String str24 = hTMLPageResponse12.getEncoding();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = hTMLPageResponse12.getHeaderValue("HTMLPageResponseurl:urls.txtresponseCode:100encoding:com.soulgalore.crawler.http.socket.timeout type:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 97 + "'", int14 == 97);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.auth" + "'", str15, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str24, "com.soulgalore.crawler.http.socket.timeout");
    }

    @Test
    public void test08123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08123");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("100", "CrawlerURL url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder6.build();
        java.lang.String str8 = crawlerConfiguration7.getStartUrl();
        boolean boolean9 = crawlerConfiguration7.isVerifyUrls();
        boolean boolean10 = crawlerConfiguration7.isVerifyUrls();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder11.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder11.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder25.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setStartUrl("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder29.setStartUrl("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder31.setVerifyUrls(false);
        boolean boolean34 = crawlerConfiguration7.equals((java.lang.Object) false);
        boolean boolean35 = crawlerConfiguration7.isVerifyUrls();
        java.lang.String str36 = crawlerConfiguration7.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = crawlerConfiguration7.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse43 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (short) 0, strMap37, "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", "CrawlerURL url:AssetResponseCallable url:100", 0L, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) 'a');
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(strMap37);
    }

    @Test
    public void test08124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08124");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:32encoding:hi! type:97");
    }

    @Test
    public void test08125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08125");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setStartUrl("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder0.setNotOnPath("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder0.setStartUrl("Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder0.build();
        boolean boolean12 = crawlerConfiguration11.isVerifyUrls();
        int int13 = crawlerConfiguration11.getMaxLevels();
        java.lang.String str14 = crawlerConfiguration11.getOnlyOnPath();
        java.lang.String str15 = crawlerConfiguration11.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean19 = crawlerURL18.isWrongSyntax();
        java.lang.String str20 = crawlerURL18.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse28 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL18, (int) 'a', strMap22, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str29 = hTMLPageResponse28.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = hTMLPageResponse28.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL31 = hTMLPageResponse28.getPageUrl();
        org.jsoup.nodes.Document document32 = hTMLPageResponse28.getBody();
        java.lang.String str33 = hTMLPageResponse28.getUrl();
        java.lang.String str34 = hTMLPageResponse28.toString();
        boolean boolean35 = crawlerConfiguration11.equals((java.lang.Object) str34);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AssetResponseCallable url:Malformed url" + "'", str15, "AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "urls.txt" + "'", str20, "urls.txt");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str29, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(crawlerURL31);
        org.junit.Assert.assertNull(document32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "com.soulgalore.crawler.auth" + "'", str33, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str34, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test08126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08126");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean14 = assetResponse4.equals((java.lang.Object) 100L);
        java.lang.String str15 = assetResponse4.getReferer();
        java.lang.String str16 = assetResponse4.getReferer();
        boolean boolean18 = assetResponse4.equals((java.lang.Object) "com.soulgalore.crawler.proxy");
        long long19 = assetResponse4.getFetchTime();
        long long20 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse25 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int26 = assetResponse25.getResponseCode();
        int int27 = assetResponse25.getResponseCode();
        long long28 = assetResponse25.getFetchTime();
        long long29 = assetResponse25.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse34 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean35 = assetResponse25.equals((java.lang.Object) 100L);
        java.lang.String str36 = assetResponse25.getReferer();
        java.lang.String str37 = assetResponse25.getReferer();
        long long38 = assetResponse25.getFetchTime();
        boolean boolean40 = assetResponse25.equals((java.lang.Object) (-1));
        java.lang.String str41 = assetResponse25.getUrl();
        java.lang.String str42 = assetResponse25.getUrl();
        boolean boolean43 = assetResponse4.equals((java.lang.Object) assetResponse25);
        long long44 = assetResponse25.getFetchTime();
        long long45 = assetResponse25.getFetchTime();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100" + "'", str15, "100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "100" + "'", str16, "100");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "100" + "'", str36, "100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "100" + "'", str37, "100");
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
    }

    @Test
    public void test08127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08127");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1responseCode:581encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:100");
    }

    @Test
    public void test08128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08128");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean5 = crawlerURL4.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder7.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration12 = builder7.build();
        java.lang.String str13 = crawlerConfiguration12.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = crawlerConfiguration12.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse20 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL4, (-1), strMap14, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int21 = hTMLPageResponse20.getResponseCode();
        long long22 = hTMLPageResponse20.getFetchTime();
        long long23 = hTMLPageResponse20.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL26 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI27 = crawlerURL26.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL31 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean32 = crawlerURL31.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder34.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder34.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration39 = builder34.build();
        java.lang.String str40 = crawlerConfiguration39.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = crawlerConfiguration39.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse47 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL31, (-1), strMap41, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse53 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL26, 100, strMap41, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        boolean boolean54 = hTMLPageResponse20.equals((java.lang.Object) 100);
        org.jsoup.nodes.Document document55 = hTMLPageResponse20.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL56 = hTMLPageResponse20.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL57 = hTMLPageResponse20.getPageUrl();
        java.lang.String str58 = hTMLPageResponse20.getUrl();
        java.lang.String str59 = hTMLPageResponse20.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = hTMLPageResponse20.getResponseHeaders();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable62 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:32encoding:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", assetFetcher1, strMap60, "CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:10");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(crawlerConfiguration12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 580L + "'", long22 == 580L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 580L + "'", long23 == 580L);
        org.junit.Assert.assertNull(uRI27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(crawlerConfiguration39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(document55);
        org.junit.Assert.assertNotNull(crawlerURL56);
        org.junit.Assert.assertNotNull(crawlerURL57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "com.soulgalore.crawler.auth" + "'", str58, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "errorurls.txt" + "'", str59, "errorurls.txt");
        org.junit.Assert.assertNotNull(strMap60);
    }

    @Test
    public void test08129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08129");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setStartUrl("AssetResponseCallable url:AssetResponseCallable url:errorassets.csv");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test08130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08130");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean6 = crawlerURL5.isWrongSyntax();
        java.lang.String str7 = crawlerURL5.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse15 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) 'a', strMap9, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str16 = hTMLPageResponse15.getUrl();
        boolean boolean17 = crawlerURL1.equals((java.lang.Object) str16);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher20 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil21 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = headerUtil21.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable25 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher20, strMap23, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse31 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) 100, strMap23, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        org.jsoup.nodes.Document document32 = hTMLPageResponse31.getBody();
        java.lang.String str34 = hTMLPageResponse31.getHeaderValue("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        java.util.Map<java.lang.String, java.lang.String> strMap35 = hTMLPageResponse31.getResponseHeaders();
        org.jsoup.nodes.Document document36 = hTMLPageResponse31.getBody();
        java.lang.String str37 = hTMLPageResponse31.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL38 = hTMLPageResponse31.getPageUrl();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "urls.txt" + "'", str7, "urls.txt");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(headerUtil21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(document32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(document36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str37, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(crawlerURL38);
    }

    @Test
    public void test08131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08131");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.util.Map<java.lang.String, java.lang.String> strMap30 = hTMLPageResponse29.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean34 = crawlerURL33.isWrongSyntax();
        java.lang.String str35 = crawlerURL33.getReferer();
        java.lang.String str36 = crawlerURL33.getHost();
        java.lang.String str37 = crawlerURL33.getUrl();
        boolean boolean38 = hTMLPageResponse29.equals((java.lang.Object) crawlerURL33);
        java.lang.String str39 = hTMLPageResponse29.getUrl();
        java.lang.String str40 = hTMLPageResponse29.getUrl();
        long long41 = hTMLPageResponse29.getFetchTime();
        org.jsoup.nodes.Document document42 = hTMLPageResponse29.getBody();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "urls.txt" + "'", str35, "urls.txt");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "com.soulgalore.crawler.auth" + "'", str37, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "com.soulgalore.crawler.auth" + "'", str39, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "com.soulgalore.crawler.auth" + "'", str40, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNull(document42);
    }

    @Test
    public void test08132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08132");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.util.HeaderUtil headerUtil3 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = headerUtil3.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = headerUtil3.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse13 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) 10, strMap7, "32", "AssetResponseCallable url:AssetResponseCallable url:Unknown error", (long) 582, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:583encoding:CrawlerURL url:CrawlerURL url:CrawlerURL url:errorassets.csv type:CrawlerURL url:10", 0L);
        org.junit.Assert.assertNotNull(headerUtil3);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test08133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08133");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet12 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet16 = crawlerResult11.getNonWorkingUrls();
        java.lang.String str17 = crawlerResult11.getTheStartPoint();
        java.lang.String str18 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet19 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet20 = crawlerResult11.getUrls();
        java.lang.String str21 = crawlerResult11.getTheStartPoint();
        java.lang.String str22 = crawlerResult11.getTheStartPoint();
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet12);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet19);
        org.junit.Assert.assertNotNull(crawlerURLSet20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
    }

    @Test
    public void test08134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08134");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads", "CrawlerURL url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
    }

    @Test
    public void test08135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08135");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "Wrong content type", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:errorassets.csv", "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        boolean boolean9 = assetResponse4.equals((java.lang.Object) "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        long long10 = assetResponse4.getFetchTime();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test08136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08136");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray8 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet9, assetResponseArray8);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray11 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, assetResponseArray11);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult14 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet9, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult15 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet7, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet16 = assetsVerificationResult15.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet17 = assetsVerificationResult15.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = assetsVerificationResult15.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet19 = assetsVerificationResult15.getNonWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(assetResponseArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(assetResponseSet16);
        org.junit.Assert.assertNotNull(assetResponseSet17);
        org.junit.Assert.assertNotNull(assetResponseSet18);
        org.junit.Assert.assertNotNull(assetResponseSet19);
    }

    @Test
    public void test08137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08137");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setNotOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setRequestHeaders("CrawlerURL url:1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder6.setMaxLevels(1);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test08138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08138");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setStartUrl("-1");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder6.build();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = crawlerConfiguration7.getRequestHeadersMap();
        java.lang.String str9 = crawlerConfiguration7.getStartUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean13 = crawlerURL12.isWrongSyntax();
        java.lang.String str14 = crawlerURL12.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse22 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL12, (int) 'a', strMap16, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str23 = crawlerURL12.getUrl();
        com.soulgalore.crawler.util.HeaderUtil headerUtil25 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = headerUtil25.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse33 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL12, (int) (short) 0, strMap27, "com.soulgalore.crawler.http.socket.timeout", "Malformed url", (long) '4', "Unknown error", (long) (byte) 100);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL34 = hTMLPageResponse33.getPageUrl();
        boolean boolean35 = crawlerConfiguration7.equals((java.lang.Object) hTMLPageResponse33);
        java.lang.String str36 = crawlerConfiguration7.getRequestHeaders();
        java.lang.String str37 = crawlerConfiguration7.getRequestHeaders();
        java.lang.String str38 = crawlerConfiguration7.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder41 = builder39.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder43 = builder39.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder45 = builder43.setMaxLevels(582);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder47 = builder45.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:100 type:com.soulgalore.crawler.http.socket.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder49 = builder47.setVerifyUrls(false);
        boolean boolean50 = crawlerConfiguration7.equals((java.lang.Object) builder47);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1" + "'", str9, "-1");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "urls.txt" + "'", str14, "urls.txt");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.auth" + "'", str23, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(headerUtil25);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(crawlerURL34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test08139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08139");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        java.lang.String str18 = crawlerURL17.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI22 = crawlerURL21.getUri();
        java.lang.String str23 = crawlerURL21.getUrl();
        java.lang.String str24 = crawlerURL21.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder26.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder26.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration31 = builder26.build();
        java.lang.String str32 = crawlerConfiguration31.getRequestHeaders();
        java.lang.String str33 = crawlerConfiguration31.getRequestHeaders();
        boolean boolean35 = crawlerConfiguration31.equals((java.lang.Object) 0.0d);
        boolean boolean36 = crawlerConfiguration31.isVerifyUrls();
        java.lang.String str37 = crawlerConfiguration31.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = crawlerConfiguration31.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse44 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL21, 0, strMap38, "10", "Unknown error", (long) (short) -1, "AssetResponseCallable url:Malformed url", (long) 97);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse50 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL17, 97, strMap38, "97", "com.soulgalore.crawler.proxy", (long) 10, "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (byte) 100);
        java.lang.String str51 = hTMLPageResponse50.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.auth" + "'", str18, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(uRI22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str23, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str24, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(crawlerConfiguration31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.proxy type:AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str51, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.proxy type:AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
    }

    @Test
    public void test08140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08140");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL15 = hTMLPageResponse12.getPageUrl();
        java.lang.String str16 = crawlerURL15.toString();
        java.lang.String str17 = crawlerURL15.toString();
        com.soulgalore.crawler.util.HeaderUtil headerUtil19 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = headerUtil19.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap23 = headerUtil19.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap25 = headerUtil19.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap27 = headerUtil19.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        java.util.Map<java.lang.String, java.lang.String> strMap29 = headerUtil19.createHeadersFromString("CrawlerURL url:10");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse35 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL15, 582, strMap29, "CrawlerURL url:CrawlerURL url:com.soulgalore.crawler.auth", "CrawlerURL url:errorassets.csv", (long) (short) -1, "HTMLPageResponseurl:result.csvresponseCode:-1encoding:AssetResponseCallable url:Wrong content type type:CrawlerURL url:errorassets.csv", 583L);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(crawlerURL15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str16, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str17, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(headerUtil19);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap29);
    }

    @Test
    public void test08141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08141");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setStartUrl("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder0.setNotOnPath("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setStartUrl("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setOnlyOnPath("AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration13 = builder12.build();
        int int14 = crawlerConfiguration13.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI17 = crawlerURL16.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration21 = builder20.build();
        java.lang.String str22 = crawlerConfiguration21.getStartUrl();
        int int23 = crawlerConfiguration21.getMaxLevels();
        int int24 = crawlerConfiguration21.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL27 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean28 = crawlerURL27.isWrongSyntax();
        java.lang.String str29 = crawlerURL27.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse37 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL27, (int) 'a', strMap31, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str38 = hTMLPageResponse37.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = hTMLPageResponse37.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = hTMLPageResponse37.getResponseHeaders();
        java.lang.String str41 = hTMLPageResponse37.getUrl();
        org.jsoup.nodes.Document document42 = hTMLPageResponse37.getBody();
        boolean boolean43 = crawlerConfiguration21.equals((java.lang.Object) hTMLPageResponse37);
        boolean boolean44 = crawlerURL16.equals((java.lang.Object) hTMLPageResponse37);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder46 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder48 = builder46.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration49 = builder48.build();
        java.lang.String str50 = crawlerConfiguration49.getStartUrl();
        int int51 = crawlerConfiguration49.getMaxLevels();
        int int52 = crawlerConfiguration49.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = crawlerConfiguration49.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse59 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL16, 582, strMap53, "urls.txt", "hi!", (long) (short) 0, "AssetResponseCallable url:result.csv", 10L);
        java.lang.String str60 = hTMLPageResponse59.getResponseType();
        java.lang.String str61 = hTMLPageResponse59.getEncoding();
        org.jsoup.nodes.Document document62 = hTMLPageResponse59.getBody();
        boolean boolean63 = crawlerConfiguration13.equals((java.lang.Object) hTMLPageResponse59);
        java.lang.String str64 = crawlerConfiguration13.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap65 = crawlerConfiguration13.getRequestHeadersMap();
        boolean boolean66 = crawlerConfiguration13.isVerifyUrls();
        java.lang.String str67 = crawlerConfiguration13.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(crawlerConfiguration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNull(uRI17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(crawlerConfiguration21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "urls.txt" + "'", str29, "urls.txt");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str38, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "com.soulgalore.crawler.auth" + "'", str41, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(crawlerConfiguration49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "AssetResponseCallable url:result.csv" + "'", str60, "AssetResponseCallable url:result.csv");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNull(document62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "AssetResponseCallable url:Malformed url" + "'", str67, "AssetResponseCallable url:Malformed url");
    }

    @Test
    public void test08142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08142");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("CrawlerURL url:AssetResponseCallable url:100", "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt", 583, (long) 1);
    }

    @Test
    public void test08143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08143");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        java.lang.String str3 = crawlerURL1.getHost();
        boolean boolean4 = crawlerURL1.isWrongSyntax();
        java.lang.String str5 = crawlerURL1.getReferer();
        boolean boolean6 = crawlerURL1.isWrongSyntax();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test08144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08144");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray7 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet8, assetResponseArray7);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray10 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet11 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet11, assetResponseArray10);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult13 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet8, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet11);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet14 = assetsVerificationResult13.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult15 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseSet14);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet16 = assetsVerificationResult15.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray17 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, assetResponseArray17);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray20 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet21 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21, assetResponseArray20);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult23 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet24 = assetsVerificationResult23.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = assetsVerificationResult23.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray26 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet27 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet27, assetResponseArray26);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray29 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet30 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30, assetResponseArray29);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult32 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet27, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet33 = assetsVerificationResult32.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet34 = assetsVerificationResult32.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray35 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet36 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet36, assetResponseArray35);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray38 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet39 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet39, assetResponseArray38);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult41 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet36, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet39);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult42 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet34, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet36);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray43 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet44 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet44, assetResponseArray43);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray46 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet47 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet47, assetResponseArray46);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult49 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet44, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet47);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet50 = assetsVerificationResult49.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult51 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet34, assetResponseSet50);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult52 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet25, assetResponseSet34);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult53 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet16, assetResponseSet25);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet54 = assetsVerificationResult53.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray55 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet56 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet56, assetResponseArray55);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray58 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet59 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet59, assetResponseArray58);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult61 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet56, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet59);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet62 = assetsVerificationResult61.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet63 = assetsVerificationResult61.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult64 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet54, assetResponseSet63);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet65 = assetsVerificationResult64.getWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(assetResponseArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(assetResponseSet14);
        org.junit.Assert.assertNotNull(assetResponseSet16);
        org.junit.Assert.assertNotNull(assetResponseArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(assetResponseArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(assetResponseSet24);
        org.junit.Assert.assertNotNull(assetResponseSet25);
        org.junit.Assert.assertNotNull(assetResponseArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(assetResponseArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(assetResponseSet33);
        org.junit.Assert.assertNotNull(assetResponseSet34);
        org.junit.Assert.assertNotNull(assetResponseArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(assetResponseArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(assetResponseArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(assetResponseArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(assetResponseSet50);
        org.junit.Assert.assertNotNull(assetResponseSet54);
        org.junit.Assert.assertNotNull(assetResponseArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(assetResponseArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(assetResponseSet62);
        org.junit.Assert.assertNotNull(assetResponseSet63);
        org.junit.Assert.assertNotNull(assetResponseSet65);
    }

    @Test
    public void test08145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08145");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setStartUrl("CrawlerURL url:urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setNotOnPath("AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setOnlyOnPath("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test08146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08146");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        int int19 = hTMLPageResponse12.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = hTMLPageResponse12.getPageUrl();
        java.lang.String str21 = crawlerURL20.getReferer();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL25 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "Response timed out");
        com.soulgalore.crawler.util.HeaderUtil headerUtil27 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = headerUtil27.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse35 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL25, (int) '4', strMap29, "com.soulgalore.crawler.http.socket.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 580, "com.soulgalore.crawler.auth", (long) (short) 1);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse41 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, (int) (byte) 1, strMap29, "AssetResponseCallable url:Malformed url", "urls.txt", (long) (byte) 10, "com.soulgalore.crawler.http.connection.timeout", (long) 97);
        java.lang.String str42 = crawlerURL20.getUrl();
        java.net.URI uRI43 = crawlerURL20.getUri();
        java.lang.String str44 = crawlerURL20.getHost();
        java.lang.String str45 = crawlerURL20.getReferer();
        java.net.URI uRI46 = crawlerURL20.getUri();
        com.soulgalore.crawler.util.HeaderUtil headerUtil48 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = headerUtil48.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse56 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, 581, strMap50, "Wrong content type", "AssetResponseCallable url:result.csv", (long) (byte) 10, "CrawlerURL url:CrawlerURL url:errorassets.csv", (long) 1);
        java.util.Map<java.lang.String, java.lang.String> strMap57 = hTMLPageResponse56.getResponseHeaders();
        java.lang.String str58 = hTMLPageResponse56.getEncoding();
        java.lang.String str59 = hTMLPageResponse56.toString();
        java.lang.String str60 = hTMLPageResponse56.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL61 = hTMLPageResponse56.getPageUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
        org.junit.Assert.assertNotNull(crawlerURL20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "urls.txt" + "'", str21, "urls.txt");
        org.junit.Assert.assertNotNull(headerUtil27);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "com.soulgalore.crawler.auth" + "'", str42, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(uRI43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "urls.txt" + "'", str45, "urls.txt");
        org.junit.Assert.assertNull(uRI46);
        org.junit.Assert.assertNotNull(headerUtil48);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "AssetResponseCallable url:result.csv" + "'", str58, "AssetResponseCallable url:result.csv");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:581encoding:AssetResponseCallable url:result.csv type:CrawlerURL url:CrawlerURL url:errorassets.csv" + "'", str59, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:581encoding:AssetResponseCallable url:result.csv type:CrawlerURL url:CrawlerURL url:errorassets.csv");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "com.soulgalore.crawler.auth" + "'", str60, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL61);
    }

    @Test
    public void test08147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08147");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("35", "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (int) '4', (long) (byte) 100);
        long long5 = assetResponse4.getFetchTime();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 100L + "'", long5 == 100L);
    }

    @Test
    public void test08148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08148");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean5 = crawlerURL4.isWrongSyntax();
        java.lang.String str6 = crawlerURL4.getReferer();
        java.lang.String str7 = crawlerURL4.getHost();
        boolean boolean8 = crawlerURL4.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean13 = crawlerURL12.isWrongSyntax();
        java.lang.String str14 = crawlerURL12.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse22 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL12, (int) 'a', strMap16, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str23 = hTMLPageResponse22.getEncoding();
        java.lang.String str24 = hTMLPageResponse22.getResponseType();
        java.lang.String str25 = hTMLPageResponse22.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL26 = hTMLPageResponse22.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL30 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "com.soulgalore.crawler.auth");
        java.lang.String str31 = crawlerURL30.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = builder33.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration36 = builder35.build();
        java.lang.String str37 = crawlerConfiguration36.getOnlyOnPath();
        boolean boolean38 = crawlerConfiguration36.isVerifyUrls();
        int int39 = crawlerConfiguration36.getMaxLevels();
        int int40 = crawlerConfiguration36.getMaxLevels();
        boolean boolean41 = crawlerConfiguration36.isVerifyUrls();
        boolean boolean42 = crawlerConfiguration36.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = crawlerConfiguration36.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse49 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL30, 100, strMap43, "Unknown error", "com.soulgalore.crawler.http.socket.timeout", (long) 10, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", 0L);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse55 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL26, (int) '4', strMap43, "97", "100", (long) (byte) 1, "com.soulgalore.crawler.http.socket.timeout", (long) (byte) -1);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse61 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL4, (int) '4', strMap43, "1", "Redirected to new domain", (long) (short) -1, "1", (long) 100);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable63 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("", assetFetcher1, strMap43, "");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.assets.AssetResponse assetResponse64 = assetResponseCallable63.call();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "urls.txt" + "'", str6, "urls.txt");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "urls.txt" + "'", str14, "urls.txt");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str23, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "com.soulgalore.crawler.auth" + "'", str25, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "CrawlerURL url:urls.txt" + "'", str31, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(crawlerConfiguration36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strMap43);
    }

    @Test
    public void test08149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08149");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder6.build();
        boolean boolean8 = crawlerConfiguration7.isVerifyUrls();
        int int9 = crawlerConfiguration7.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = crawlerConfiguration7.getRequestHeadersMap();
        java.lang.String str11 = crawlerConfiguration7.getStartUrl();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse16 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int17 = assetResponse16.getResponseCode();
        int int18 = assetResponse16.getResponseCode();
        long long19 = assetResponse16.getFetchTime();
        long long20 = assetResponse16.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse25 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean26 = assetResponse16.equals((java.lang.Object) 100L);
        java.lang.String str27 = assetResponse16.getReferer();
        long long28 = assetResponse16.getFetchTime();
        java.lang.String str29 = assetResponse16.getReferer();
        boolean boolean30 = crawlerConfiguration7.equals((java.lang.Object) assetResponse16);
        long long31 = assetResponse16.getFetchTime();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "100" + "'", str27, "100");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "100" + "'", str29, "100");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
    }

    @Test
    public void test08150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08150");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("Response timed out", "CrawlerURL url:hi!", (int) 'a', (long) 10);
        java.lang.String str5 = assetResponse4.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setOnlyOnPath("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setStartUrl("com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration19 = builder18.build();
        boolean boolean20 = assetResponse4.equals((java.lang.Object) builder18);
        java.lang.String str21 = assetResponse4.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder22.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder22.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder28.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder28.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder34.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder36.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder38.setStartUrl("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder40.setStartUrl("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration43 = builder40.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder45 = builder40.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder47 = builder45.setNotOnPath("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder49 = builder45.setNotOnPath("CrawlerURL url:Wrong content type");
        boolean boolean50 = assetResponse4.equals((java.lang.Object) builder49);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Response timed out" + "'", str5, "Response timed out");
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(crawlerConfiguration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "CrawlerURL url:hi!" + "'", str21, "CrawlerURL url:hi!");
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(crawlerConfiguration43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test08151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08151");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getHost();
        java.lang.String str5 = crawlerURL2.getReferer();
        java.lang.String str6 = crawlerURL2.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder7.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration12 = builder7.build();
        int int13 = crawlerConfiguration12.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil14 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean15 = crawlerConfiguration12.equals((java.lang.Object) headerUtil14);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = headerUtil14.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap19 = headerUtil14.createHeadersFromString("CrawlerURL url:result.csv");
        boolean boolean20 = crawlerURL2.equals((java.lang.Object) strMap19);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "urls.txt" + "'", str5, "urls.txt");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "com.soulgalore.crawler.auth" + "'", str6, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(crawlerConfiguration12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(headerUtil14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test08152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08152");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder6.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder6.setOnlyOnPath("Wrong content type");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder6.setNotOnPath("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setRequestHeaders("AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder13.setStartUrl("AssetResponseCallable url:hi!");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
    }

    @Test
    public void test08153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08153");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:32encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url type:com.soulgalore.crawler.http.connection.timeout", "CrawlerURL url:result.csv");
    }

    @Test
    public void test08154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08154");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration5.getRequestHeadersMap();
        boolean boolean8 = crawlerConfiguration5.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = crawlerConfiguration5.getRequestHeadersMap();
        boolean boolean10 = crawlerConfiguration5.isVerifyUrls();
        java.lang.String str11 = crawlerConfiguration5.getStartUrl();
        int int12 = crawlerConfiguration5.getMaxLevels();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test08155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08155");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        com.soulgalore.crawler.util.StatusCode statusCode6 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN;
        boolean boolean7 = crawlerConfiguration3.equals((java.lang.Object) statusCode6);
        int int8 = statusCode6.getCode();
        java.lang.String str9 = statusCode6.getFriendlyName();
        int int10 = statusCode6.getCode();
        java.lang.String str11 = statusCode6.getFriendlyName();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + statusCode6 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN + "'", statusCode6.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 581 + "'", int8 == 581);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Unknown error" + "'", str9, "Unknown error");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 581 + "'", int10 == 581);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Unknown error" + "'", str11, "Unknown error");
    }

    @Test
    public void test08156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08156");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean6 = crawlerURL5.isWrongSyntax();
        java.lang.String str7 = crawlerURL5.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse15 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) 'a', strMap9, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str16 = hTMLPageResponse15.getUrl();
        boolean boolean17 = crawlerURL1.equals((java.lang.Object) str16);
        boolean boolean18 = crawlerURL1.isWrongSyntax();
        java.lang.String str19 = crawlerURL1.getHost();
        java.lang.String str20 = crawlerURL1.toString();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "urls.txt" + "'", str7, "urls.txt");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str20, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
    }

    @Test
    public void test08157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08157");
        com.soulgalore.crawler.util.HeaderUtil headerUtil0 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = headerUtil0.createHeadersFromString("AssetResponseCallable url:Unknown error");
        java.util.Map<java.lang.String, java.lang.String> strMap4 = headerUtil0.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:10");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil0.createHeadersFromString("Redirected to new domain");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request headers wrongly configured, missing separator :Redirected to new domain");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerUtil0);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap4);
    }

    @Test
    public void test08158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08158");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet11 = assetsVerificationResult6.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray12 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13, assetResponseArray12);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray15 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet16 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet16, assetResponseArray15);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult18 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet16);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet19 = assetsVerificationResult18.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = assetsVerificationResult18.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet21 = assetsVerificationResult18.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = assetsVerificationResult18.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult23 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet11, assetResponseSet22);
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseSet9);
        org.junit.Assert.assertNotNull(assetResponseSet10);
        org.junit.Assert.assertNotNull(assetResponseSet11);
        org.junit.Assert.assertNotNull(assetResponseArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(assetResponseArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(assetResponseSet19);
        org.junit.Assert.assertNotNull(assetResponseSet20);
        org.junit.Assert.assertNotNull(assetResponseSet21);
        org.junit.Assert.assertNotNull(assetResponseSet22);
    }

    @Test
    public void test08159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08159");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        int int7 = assetResponse4.getResponseCode();
        java.lang.String str8 = assetResponse4.getUrl();
        int int9 = assetResponse4.getResponseCode();
        int int10 = assetResponse4.getResponseCode();
        java.lang.String str11 = assetResponse4.getUrl();
        int int12 = assetResponse4.getResponseCode();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }

    @Test
    public void test08160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08160");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        java.lang.String str20 = hTMLPageResponse18.getHeaderValue("CrawlerURL url:hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap21 = hTMLPageResponse18.getResponseHeaders();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap21);
    }

    @Test
    public void test08161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08161");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:com.soulgalore.crawler.nrofhttpthreads", "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.lang.String str3 = crawlerURL2.toString();
        java.lang.String str4 = crawlerURL2.getHost();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "CrawlerURL url:AssetResponseCallable url:com.soulgalore.crawler.nrofhttpthreads" + "'", str3, "CrawlerURL url:AssetResponseCallable url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test08162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08162");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        long long16 = hTMLPageResponse12.getFetchTime();
        org.jsoup.nodes.Document document17 = hTMLPageResponse12.getBody();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder18.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration23 = builder18.build();
        java.lang.String str24 = crawlerConfiguration23.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = crawlerConfiguration23.getRequestHeadersMap();
        boolean boolean26 = crawlerConfiguration23.isVerifyUrls();
        java.lang.String str27 = crawlerConfiguration23.getStartUrl();
        boolean boolean28 = crawlerConfiguration23.isVerifyUrls();
        com.soulgalore.crawler.util.StatusCode statusCode29 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT;
        int int30 = statusCode29.getCode();
        int int31 = statusCode29.getCode();
        java.lang.String str32 = statusCode29.getFriendlyName();
        java.lang.String str33 = statusCode29.getFriendlyName();
        java.lang.String str34 = statusCode29.getFriendlyName();
        boolean boolean35 = crawlerConfiguration23.equals((java.lang.Object) str34);
        java.lang.String str36 = crawlerConfiguration23.getRequestHeaders();
        boolean boolean37 = hTMLPageResponse12.equals((java.lang.Object) crawlerConfiguration23);
        java.lang.String str38 = hTMLPageResponse12.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertNull(document17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(crawlerConfiguration23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + statusCode29 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT + "'", statusCode29.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 580 + "'", int30 == 580);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 580 + "'", int31 == 580);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Response timed out" + "'", str32, "Response timed out");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Response timed out" + "'", str33, "Response timed out");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Response timed out" + "'", str34, "Response timed out");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str38, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
    }

    @Test
    public void test08163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08163");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setOnlyOnPath("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setOnlyOnPath("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setVerifyUrls(true);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test08164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08164");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", "AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (-1), (long) '4');
        int int5 = assetResponse4.getResponseCode();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test08165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08165");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet14 = crawlerResult12.getNonWorkingUrls();
        java.lang.String str15 = crawlerResult12.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean21 = crawlerURL20.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean25 = crawlerURL24.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL28 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI29 = crawlerURL28.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray30 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL20, crawlerURL24, crawlerURL28 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet31 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet31, crawlerURLArray30);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray33 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet34 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet34, hTMLPageResponseArray33);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray40 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL39 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, crawlerURLArray40);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray44 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet45 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45, hTMLPageResponseArray44);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult47 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, hTMLPageResponseSet43, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult48 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet31, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet34, hTMLPageResponseSet43);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet49 = crawlerResult48.getVerifiedURLResponses();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL53 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray54 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL53 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet55 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet55, crawlerURLArray54);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet57 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray58 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet59 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet59, hTMLPageResponseArray58);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult61 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet55, hTMLPageResponseSet57, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet59);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet62 = crawlerResult61.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult63 = new com.soulgalore.crawler.core.CrawlerResult("hi!", crawlerURLSet16, hTMLPageResponseSet49, hTMLPageResponseSet62);
        java.lang.String str64 = crawlerResult63.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet65 = crawlerResult63.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet66 = crawlerResult63.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet67 = crawlerResult63.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet68 = crawlerResult63.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet69 = crawlerResult63.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet70 = crawlerResult63.getUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(uRI29);
        org.junit.Assert.assertNotNull(crawlerURLArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet49);
        org.junit.Assert.assertNotNull(crawlerURLArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet65);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet66);
        org.junit.Assert.assertNotNull(crawlerURLSet67);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet68);
        org.junit.Assert.assertNotNull(crawlerURLSet69);
        org.junit.Assert.assertNotNull(crawlerURLSet70);
    }

    @Test
    public void test08166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08166");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        java.lang.String str3 = crawlerURL1.getUrl();
        java.lang.String str4 = crawlerURL1.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder6.build();
        java.lang.String str12 = crawlerConfiguration11.getRequestHeaders();
        java.lang.String str13 = crawlerConfiguration11.getRequestHeaders();
        boolean boolean15 = crawlerConfiguration11.equals((java.lang.Object) 0.0d);
        boolean boolean16 = crawlerConfiguration11.isVerifyUrls();
        java.lang.String str17 = crawlerConfiguration11.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = crawlerConfiguration11.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse24 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 0, strMap18, "10", "Unknown error", (long) (short) -1, "AssetResponseCallable url:Malformed url", (long) 97);
        java.net.URI uRI25 = crawlerURL1.getUri();
        java.net.URI uRI26 = crawlerURL1.getUri();
        java.lang.String str27 = crawlerURL1.getReferer();
        java.net.URI uRI28 = crawlerURL1.getUri();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str3, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str4, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(uRI25);
        org.junit.Assert.assertNull(uRI26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(uRI28);
    }

    @Test
    public void test08167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08167");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.lang.String str14 = hTMLPageResponse12.getResponseType();
        java.lang.String str15 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean21 = crawlerURL20.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder23.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration28 = builder23.build();
        java.lang.String str29 = crawlerConfiguration28.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = crawlerConfiguration28.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse36 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, (-1), strMap30, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL40 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI41 = crawlerURL40.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL45 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean46 = crawlerURL45.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder48 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder50 = builder48.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder52 = builder48.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration53 = builder48.build();
        java.lang.String str54 = crawlerConfiguration53.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = crawlerConfiguration53.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse61 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL45, (-1), strMap55, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse67 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL40, 100, strMap55, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse73 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, (int) (byte) 10, strMap55, "100", "errorassets.csv", (long) (byte) 100, "", (long) (short) 100);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse79 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL16, 100, strMap55, "com.soulgalore.crawler.nrofhttpthreads", "errorassets.csv", (long) 97, "result.csv", (long) (byte) -1);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL80 = hTMLPageResponse79.getPageUrl();
        java.lang.String str82 = hTMLPageResponse79.getHeaderValue("0");
        java.lang.String str83 = hTMLPageResponse79.getEncoding();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.auth" + "'", str15, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(crawlerConfiguration28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(uRI41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(crawlerConfiguration53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(crawlerURL80);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "errorassets.csv" + "'", str83, "errorassets.csv");
    }

    @Test
    public void test08168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08168");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setMaxLevels((int) '4');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setMaxLevels(583);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setMaxLevels((int) (short) 10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder4.setNotOnPath("AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setOnlyOnPath("AssetResponseCallable url:Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder12.build();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
    }

    @Test
    public void test08169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08169");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray22 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL21 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet23 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet23, crawlerURLArray22);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet25 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray26 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet27 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet27, hTMLPageResponseArray26);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult29 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet23, hTMLPageResponseSet25, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet27);
        java.lang.String str30 = crawlerResult29.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet31 = crawlerResult29.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet32 = crawlerResult29.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL36 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray37 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL36 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet38 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet38, crawlerURLArray37);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet40 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray41 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet42 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet42, hTMLPageResponseArray41);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult44 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet38, hTMLPageResponseSet40, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet42);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet45 = crawlerResult44.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet46 = crawlerResult44.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult47 = new com.soulgalore.crawler.core.CrawlerResult("1", crawlerURLSet17, hTMLPageResponseSet32, hTMLPageResponseSet46);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet48 = crawlerResult47.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet49 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet50 = crawlerResult47.getVerifiedURLResponses();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(crawlerURLSet17);
        org.junit.Assert.assertNotNull(crawlerURLArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet31);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet32);
        org.junit.Assert.assertNotNull(crawlerURLArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet45);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet46);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet48);
        org.junit.Assert.assertNotNull(crawlerURLSet49);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet50);
    }

    @Test
    public void test08170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08170");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder13.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder13.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setVerifyUrls(false);
        boolean boolean26 = hTMLPageResponse12.equals((java.lang.Object) builder25);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder25.setOnlyOnPath("HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder25.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder25.setMaxLevels((int) ' ');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setMaxLevels((int) ' ');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder32.setNotOnPath("com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
    }

    @Test
    public void test08171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08171");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder3 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder3.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration6 = builder5.build();
        java.lang.String str7 = crawlerConfiguration6.getStartUrl();
        int int8 = crawlerConfiguration6.getMaxLevels();
        int int9 = crawlerConfiguration6.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean13 = crawlerURL12.isWrongSyntax();
        java.lang.String str14 = crawlerURL12.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse22 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL12, (int) 'a', strMap16, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str23 = hTMLPageResponse22.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = hTMLPageResponse22.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = hTMLPageResponse22.getResponseHeaders();
        java.lang.String str26 = hTMLPageResponse22.getUrl();
        org.jsoup.nodes.Document document27 = hTMLPageResponse22.getBody();
        boolean boolean28 = crawlerConfiguration6.equals((java.lang.Object) hTMLPageResponse22);
        boolean boolean29 = crawlerURL1.equals((java.lang.Object) hTMLPageResponse22);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder31.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration34 = builder33.build();
        java.lang.String str35 = crawlerConfiguration34.getStartUrl();
        int int36 = crawlerConfiguration34.getMaxLevels();
        int int37 = crawlerConfiguration34.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = crawlerConfiguration34.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse44 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 582, strMap38, "urls.txt", "hi!", (long) (short) 0, "AssetResponseCallable url:result.csv", 10L);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = hTMLPageResponse44.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL47 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI48 = crawlerURL47.getUri();
        boolean boolean49 = crawlerURL47.isWrongSyntax();
        java.lang.String str50 = crawlerURL47.getHost();
        java.net.URI uRI51 = crawlerURL47.getUri();
        java.net.URI uRI52 = crawlerURL47.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL56 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI57 = crawlerURL56.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder59 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder61 = builder59.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration62 = builder61.build();
        java.lang.String str63 = crawlerConfiguration62.getStartUrl();
        int int64 = crawlerConfiguration62.getMaxLevels();
        int int65 = crawlerConfiguration62.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap66 = crawlerConfiguration62.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse72 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL56, (int) (short) 10, strMap66, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int73 = hTMLPageResponse72.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap74 = hTMLPageResponse72.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse80 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL47, 0, strMap74, "CrawlerURL url:result.csv", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) 583, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (byte) 1);
        java.lang.String str81 = hTMLPageResponse80.getUrl();
        boolean boolean82 = hTMLPageResponse44.equals((java.lang.Object) str81);
        java.lang.String str83 = hTMLPageResponse44.getResponseType();
        java.lang.String str85 = hTMLPageResponse44.getHeaderValue("CrawlerURL url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.lang.String str86 = hTMLPageResponse44.getUrl();
        int int87 = hTMLPageResponse44.getResponseCode();
        java.lang.String str89 = hTMLPageResponse44.getHeaderValue("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain");
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(crawlerConfiguration6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "urls.txt" + "'", str14, "urls.txt");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str23, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "com.soulgalore.crawler.auth" + "'", str26, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(crawlerConfiguration34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(uRI48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(uRI51);
        org.junit.Assert.assertNull(uRI52);
        org.junit.Assert.assertNull(uRI57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(crawlerConfiguration62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 10 + "'", int73 == 10);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str81, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "AssetResponseCallable url:result.csv" + "'", str83, "AssetResponseCallable url:result.csv");
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str86, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 582 + "'", int87 == 582);
        org.junit.Assert.assertNull(str89);
    }

    @Test
    public void test08172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08172");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.lang.String str5 = crawlerURL2.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder9.build();
        java.lang.String str11 = crawlerConfiguration10.getStartUrl();
        int int12 = crawlerConfiguration10.getMaxLevels();
        int int13 = crawlerConfiguration10.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse20 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) -1, strMap14, "100", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) (short) -1, "com.soulgalore.crawler.nrofhttpthreads", 0L);
        java.lang.String str22 = hTMLPageResponse20.getHeaderValue("-1");
        java.lang.String str23 = hTMLPageResponse20.getUrl();
        java.lang.String str24 = hTMLPageResponse20.toString();
        java.lang.String str25 = hTMLPageResponse20.toString();
        int int26 = hTMLPageResponse20.getResponseCode();
        java.lang.String str27 = hTMLPageResponse20.getEncoding();
        java.lang.String str28 = hTMLPageResponse20.getEncoding();
        org.jsoup.nodes.Document document29 = hTMLPageResponse20.getBody();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "urls.txt" + "'", str5, "urls.txt");
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.auth" + "'", str23, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads" + "'", str24, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads" + "'", str25, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str27, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str28, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNull(document29);
    }

    @Test
    public void test08173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08173");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider(100, 580, 0, "errorurls.txt", "AssetResponseCallable url:CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:errorurls.txt");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08174");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setMaxLevels(308);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder14.setNotOnPath("urls.txt");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test08175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08175");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url type:AssetResponseCallable url:CrawlerURL url:10");
    }

    @Test
    public void test08176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08176");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet4 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet6 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet8 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet10 = authUtil0.createAuthsFromString("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet12 = authUtil0.createAuthsFromString("HTMLPageResponseurl:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:responseCode:1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:urls.txt type:com.soulgalore.crawler.http.connection.timeout type:AssetResponseCallable url:urls.txt");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"AssetResponseCallable url\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
        org.junit.Assert.assertNotNull(authSet2);
        org.junit.Assert.assertNotNull(authSet4);
        org.junit.Assert.assertNotNull(authSet6);
        org.junit.Assert.assertNotNull(authSet8);
        org.junit.Assert.assertNotNull(authSet10);
    }

    @Test
    public void test08177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08177");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("CrawlerURL url:hi!", "100", 0, (long) 97);
        java.lang.String str5 = assetResponse4.getReferer();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean9 = crawlerURL8.isWrongSyntax();
        java.lang.String str10 = crawlerURL8.getReferer();
        java.lang.String str11 = crawlerURL8.getHost();
        java.lang.String str12 = crawlerURL8.getReferer();
        java.lang.String str13 = crawlerURL8.getReferer();
        boolean boolean14 = crawlerURL8.isWrongSyntax();
        boolean boolean15 = assetResponse4.equals((java.lang.Object) boolean14);
        int int16 = assetResponse4.getResponseCode();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "100" + "'", str5, "100");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "urls.txt" + "'", str10, "urls.txt");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "urls.txt" + "'", str12, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "urls.txt" + "'", str13, "urls.txt");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test08178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08178");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        long long14 = hTMLPageResponse12.getFetchTime();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration20 = builder19.build();
        java.lang.String str21 = crawlerConfiguration20.getOnlyOnPath();
        boolean boolean22 = crawlerConfiguration20.isVerifyUrls();
        int int23 = crawlerConfiguration20.getMaxLevels();
        int int24 = crawlerConfiguration20.getMaxLevels();
        boolean boolean25 = hTMLPageResponse12.equals((java.lang.Object) int24);
        org.jsoup.nodes.Document document26 = hTMLPageResponse12.getBody();
        long long27 = hTMLPageResponse12.getFetchTime();
        int int28 = hTMLPageResponse12.getResponseCode();
        java.lang.String str29 = hTMLPageResponse12.getUrl();
        long long30 = hTMLPageResponse12.getFetchTime();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 100L + "'", long14 == 100L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(crawlerConfiguration20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(document26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 100L + "'", long27 == 100L);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 97 + "'", int28 == 97);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "com.soulgalore.crawler.auth" + "'", str29, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 100L + "'", long30 == 100L);
    }

    @Test
    public void test08179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08179");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray21 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL20 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet22, crawlerURLArray21);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet24 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray25 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet26, hTMLPageResponseArray25);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult28 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet22, hTMLPageResponseSet24, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet26);
        java.lang.String str29 = crawlerResult28.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet30 = crawlerResult28.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet31 = crawlerResult28.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL35 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean36 = crawlerURL35.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean40 = crawlerURL39.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL43 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI44 = crawlerURL43.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray45 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL35, crawlerURL39, crawlerURL43 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet46 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet46, crawlerURLArray45);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray48 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet49 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet49, hTMLPageResponseArray48);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL54 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray55 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL54 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet56 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet56, crawlerURLArray55);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet58 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray59 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet60 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet60, hTMLPageResponseArray59);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult62 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet56, hTMLPageResponseSet58, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet60);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult63 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet46, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet49, hTMLPageResponseSet58);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet64 = crawlerResult63.getVerifiedURLResponses();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult65 = new com.soulgalore.crawler.core.CrawlerResult("errorurls.txt", crawlerURLSet16, hTMLPageResponseSet31, hTMLPageResponseSet64);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet66 = crawlerResult65.getUrls();
        java.lang.String str67 = crawlerResult65.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet68 = crawlerResult65.getNonWorkingUrls();
        java.lang.String str69 = crawlerResult65.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet70 = crawlerResult65.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet71 = crawlerResult65.getVerifiedURLResponses();
        java.lang.String str72 = crawlerResult65.getTheStartPoint();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(crawlerURLArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet30);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(uRI44);
        org.junit.Assert.assertNotNull(crawlerURLArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet64);
        org.junit.Assert.assertNotNull(crawlerURLSet66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "errorurls.txt" + "'", str67, "errorurls.txt");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "errorurls.txt" + "'", str69, "errorurls.txt");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet70);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "errorurls.txt" + "'", str72, "errorurls.txt");
    }

    @Test
    public void test08180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08180");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:CrawlerURL url:10", "CrawlerURL url:10", 0, (long) (-1));
        java.lang.String str5 = assetResponse4.getReferer();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CrawlerURL url:10" + "'", str5, "CrawlerURL url:10");
    }

    @Test
    public void test08181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08181");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setStartUrl("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder16.setStartUrl("10");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder20.setStartUrl("CrawlerURL url:urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setRequestHeaders("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder22.setStartUrl("CrawlerURL url:10");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder26.setNotOnPath("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder28.setStartUrl("AssetResponseCallable url:CrawlerURL url:hi!");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
    }

    @Test
    public void test08182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08182");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.lang.String str2 = crawlerURL1.getHost();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean6 = crawlerURL5.isWrongSyntax();
        java.lang.String str7 = crawlerURL5.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse15 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) 'a', strMap9, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str16 = hTMLPageResponse15.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean18 = hTMLPageResponse15.equals((java.lang.Object) builder17);
        long long19 = hTMLPageResponse15.getFetchTime();
        java.lang.String str20 = hTMLPageResponse15.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = hTMLPageResponse15.getPageUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder22.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder22.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder28.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder30.setVerifyUrls(false);
        boolean boolean33 = crawlerURL21.equals((java.lang.Object) builder32);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration34 = builder32.build();
        java.lang.String str35 = crawlerConfiguration34.getStartUrl();
        java.lang.String str36 = crawlerConfiguration34.getOnlyOnPath();
        boolean boolean37 = crawlerURL1.equals((java.lang.Object) str36);
        java.net.URI uRI38 = crawlerURL1.getUri();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "urls.txt" + "'", str7, "urls.txt");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 100L + "'", long19 == 100L);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str20, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(crawlerConfiguration34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(uRI38);
    }

    @Test
    public void test08183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08183");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        int int19 = hTMLPageResponse12.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = hTMLPageResponse12.getPageUrl();
        java.lang.String str21 = crawlerURL20.getHost();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse27 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int28 = assetResponse27.getResponseCode();
        int int29 = assetResponse27.getResponseCode();
        long long30 = assetResponse27.getFetchTime();
        long long31 = assetResponse27.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse36 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean37 = assetResponse27.equals((java.lang.Object) 100L);
        java.lang.String str38 = assetResponse27.getReferer();
        long long39 = assetResponse27.getFetchTime();
        java.lang.String str40 = assetResponse27.getReferer();
        java.lang.String str41 = assetResponse27.getReferer();
        java.lang.String str42 = assetResponse27.getReferer();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL45 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean46 = crawlerURL45.isWrongSyntax();
        java.lang.String str47 = crawlerURL45.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse55 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL45, (int) 'a', strMap49, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str56 = hTMLPageResponse55.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder57 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean58 = hTMLPageResponse55.equals((java.lang.Object) builder57);
        long long59 = hTMLPageResponse55.getFetchTime();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder60 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder62 = builder60.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder64 = builder60.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder66 = builder60.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration67 = builder60.build();
        java.util.Map<java.lang.String, java.lang.String> strMap68 = crawlerConfiguration67.getRequestHeadersMap();
        boolean boolean69 = hTMLPageResponse55.equals((java.lang.Object) crawlerConfiguration67);
        java.util.Map<java.lang.String, java.lang.String> strMap70 = crawlerConfiguration67.getRequestHeadersMap();
        boolean boolean71 = assetResponse27.equals((java.lang.Object) crawlerConfiguration67);
        java.util.Map<java.lang.String, java.lang.String> strMap72 = crawlerConfiguration67.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse78 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, (int) (short) -1, strMap72, "32", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:CrawlerURL url:1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain", (long) (short) 10, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) '#');
        java.lang.String str79 = crawlerURL20.getUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
        org.junit.Assert.assertNotNull(crawlerURL20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "100" + "'", str38, "100");
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "100" + "'", str40, "100");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "100" + "'", str41, "100");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "100" + "'", str42, "100");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "urls.txt" + "'", str47, "urls.txt");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "com.soulgalore.crawler.auth" + "'", str56, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 100L + "'", long59 == 100L);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(crawlerConfiguration67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "com.soulgalore.crawler.auth" + "'", str79, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test08184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08184");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "com.soulgalore.crawler.auth");
        java.lang.String str3 = crawlerURL2.toString();
        java.lang.String str4 = crawlerURL2.getUrl();
        boolean boolean5 = crawlerURL2.isWrongSyntax();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "CrawlerURL url:urls.txt" + "'", str3, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test08185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08185");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.lang.String str3 = crawlerURL2.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url" + "'", str3, "CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
    }

    @Test
    public void test08186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08186");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher3 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher5 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder6.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration13 = builder6.build();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = crawlerConfiguration13.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable16 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("com.soulgalore.crawler.auth", assetFetcher5, strMap14, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable18 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:97", assetFetcher3, strMap14, "Malformed url");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable20 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:AssetResponseCallable url:Unknown error", assetFetcher1, strMap14, "Redirected to new domain");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.assets.AssetResponse assetResponse21 = assetResponseCallable20.call();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(crawlerConfiguration13);
        org.junit.Assert.assertNotNull(strMap14);
    }

    @Test
    public void test08187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08187");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("result.csv", "Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder3 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder3.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder3.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setVerifyUrls(false);
        java.lang.Class<?> wildcardClass10 = builder7.getClass();
        boolean boolean11 = crawlerURL2.equals((java.lang.Object) wildcardClass10);
        java.lang.String str12 = crawlerURL2.getReferer();
        java.lang.String str13 = crawlerURL2.toString();
        com.soulgalore.crawler.util.HeaderUtil headerUtil15 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = headerUtil15.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap19 = headerUtil15.createHeadersFromString("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse25 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 582, strMap19, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (short) 1, "0", (long) 10);
        java.lang.String str26 = crawlerURL2.getHost();
        java.net.URI uRI27 = crawlerURL2.getUri();
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Malformed url" + "'", str12, "Malformed url");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CrawlerURL url:result.csv" + "'", str13, "CrawlerURL url:result.csv");
        org.junit.Assert.assertNotNull(headerUtil15);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(uRI27);
    }

    @Test
    public void test08188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08188");
        com.soulgalore.crawler.util.StatusCode statusCode0 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT;
        java.lang.String str1 = statusCode0.getFriendlyName();
        int int2 = statusCode0.getCode();
        int int3 = statusCode0.getCode();
        java.lang.String str4 = statusCode0.getFriendlyName();
        int int5 = statusCode0.getCode();
        int int6 = statusCode0.getCode();
        org.junit.Assert.assertTrue("'" + statusCode0 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT + "'", statusCode0.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Response timed out" + "'", str1, "Response timed out");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 580 + "'", int2 == 580);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 580 + "'", int3 == 580);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Response timed out" + "'", str4, "Response timed out");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 580 + "'", int5 == 580);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 580 + "'", int6 == 580);
    }

    @Test
    public void test08189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08189");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration5.getRequestHeadersMap();
        java.lang.String str8 = crawlerConfiguration5.getNotOnPath();
        int int9 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray10 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet11 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet11, assetResponseArray10);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray13 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet14 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet14, assetResponseArray13);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult16 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet11, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet14);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet17 = assetsVerificationResult16.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = assetsVerificationResult16.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet19 = assetsVerificationResult16.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = assetsVerificationResult16.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray21 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, assetResponseArray21);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray24 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25, assetResponseArray24);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult27 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet28 = assetsVerificationResult27.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = assetsVerificationResult27.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray30 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet31 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet31, assetResponseArray30);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray33 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet34 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet34, assetResponseArray33);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult36 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet31, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet34);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult37 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet29, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet31);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult38 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet20, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet31);
        boolean boolean39 = crawlerConfiguration5.equals((java.lang.Object) assetResponseSet31);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = null;
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult41 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet31, assetResponseSet40);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet42 = assetsVerificationResult41.getNonWorkingAssets();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(assetResponseArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(assetResponseArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(assetResponseSet17);
        org.junit.Assert.assertNotNull(assetResponseSet18);
        org.junit.Assert.assertNotNull(assetResponseSet19);
        org.junit.Assert.assertNotNull(assetResponseSet20);
        org.junit.Assert.assertNotNull(assetResponseArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(assetResponseArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(assetResponseSet28);
        org.junit.Assert.assertNotNull(assetResponseSet29);
        org.junit.Assert.assertNotNull(assetResponseArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(assetResponseArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(assetResponseSet42);
    }

    @Test
    public void test08190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08190");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray20 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL19 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet21 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet21, crawlerURLArray20);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet23 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray24 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet25 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet25, hTMLPageResponseArray24);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult27 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet21, hTMLPageResponseSet23, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet25);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet28 = crawlerResult27.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet29 = crawlerResult27.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet30 = crawlerResult27.getUrls();
        java.lang.String str31 = crawlerResult27.getTheStartPoint();
        java.lang.String str32 = crawlerResult27.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet33 = crawlerResult27.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet34 = crawlerResult27.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray40 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL39 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, crawlerURLArray40);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray44 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet45 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45, hTMLPageResponseArray44);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult47 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, hTMLPageResponseSet43, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet48 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet49 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet50 = crawlerResult47.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet51 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet52 = crawlerResult47.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet53 = crawlerResult47.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL57 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray58 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL57 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet59 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet59, crawlerURLArray58);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet61 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray62 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet63 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet63, hTMLPageResponseArray62);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult65 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet59, hTMLPageResponseSet61, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet63);
        java.lang.String str66 = crawlerResult65.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet67 = crawlerResult65.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet68 = crawlerResult65.getNonWorkingUrls();
        java.lang.String str69 = crawlerResult65.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet70 = crawlerResult65.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL74 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray75 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL74 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet76 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet76, crawlerURLArray75);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet78 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray79 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet80 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet80, hTMLPageResponseArray79);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult82 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet76, hTMLPageResponseSet78, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet80);
        java.lang.String str83 = crawlerResult82.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet84 = crawlerResult82.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet85 = crawlerResult82.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult86 = new com.soulgalore.crawler.core.CrawlerResult("CrawlerURL url:urls.txt", crawlerURLSet53, hTMLPageResponseSet70, hTMLPageResponseSet85);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult87 = new com.soulgalore.crawler.core.CrawlerResult("32", crawlerURLSet15, hTMLPageResponseSet34, hTMLPageResponseSet70);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet88 = crawlerResult87.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet89 = crawlerResult87.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet90 = crawlerResult87.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet91 = crawlerResult87.getNonWorkingUrls();
        java.lang.String str92 = crawlerResult87.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet93 = crawlerResult87.getVerifiedURLResponses();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(crawlerURLArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet28);
        org.junit.Assert.assertNotNull(crawlerURLSet29);
        org.junit.Assert.assertNotNull(crawlerURLSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet33);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet34);
        org.junit.Assert.assertNotNull(crawlerURLArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet48);
        org.junit.Assert.assertNotNull(crawlerURLSet49);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet50);
        org.junit.Assert.assertNotNull(crawlerURLSet51);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet52);
        org.junit.Assert.assertNotNull(crawlerURLSet53);
        org.junit.Assert.assertNotNull(crawlerURLArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet67);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet70);
        org.junit.Assert.assertNotNull(crawlerURLArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet84);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet85);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet88);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet89);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet90);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "32" + "'", str92, "32");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet93);
    }

    @Test
    public void test08191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08191");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setOnlyOnPath("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setOnlyOnPath("CrawlerURL url:com.soulgalore.crawler.proxy");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder14.setNotOnPath("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.lang.Class<?> wildcardClass21 = builder14.getClass();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test08192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08192");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder4.setOnlyOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration13 = builder12.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder14.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration21 = builder20.build();
        boolean boolean22 = crawlerConfiguration13.equals((java.lang.Object) crawlerConfiguration21);
        int int23 = crawlerConfiguration21.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = crawlerConfiguration21.getRequestHeadersMap();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder25.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder25.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration30 = builder25.build();
        int int31 = crawlerConfiguration30.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil32 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean33 = crawlerConfiguration30.equals((java.lang.Object) headerUtil32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = headerUtil32.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap37 = headerUtil32.createHeadersFromString("CrawlerURL url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap39 = headerUtil32.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap41 = headerUtil32.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap43 = headerUtil32.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap45 = headerUtil32.createHeadersFromString("AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        boolean boolean46 = crawlerConfiguration21.equals((java.lang.Object) headerUtil32);
        java.util.Map<java.lang.String, java.lang.String> strMap48 = headerUtil32.createHeadersFromString("AssetResponseCallable url:CrawlerURL url:100");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(crawlerConfiguration13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(crawlerConfiguration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(crawlerConfiguration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(headerUtil32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strMap48);
    }

    @Test
    public void test08193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08193");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "Response timed out");
        com.soulgalore.crawler.util.HeaderUtil headerUtil4 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil4.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) '4', strMap6, "com.soulgalore.crawler.http.socket.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 580, "com.soulgalore.crawler.auth", (long) (short) 1);
        org.jsoup.nodes.Document document13 = hTMLPageResponse12.getBody();
        java.lang.String str15 = hTMLPageResponse12.getHeaderValue("com.soulgalore.crawler.proxy");
        int int16 = hTMLPageResponse12.getResponseCode();
        java.lang.String str17 = hTMLPageResponse12.getResponseType();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray18 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet19 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet19, assetResponseArray18);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray21 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, assetResponseArray21);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult24 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet19, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = assetsVerificationResult24.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = assetsVerificationResult24.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet27 = assetsVerificationResult24.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet28 = assetsVerificationResult24.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray29 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet30 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30, assetResponseArray29);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray32 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet33 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33, assetResponseArray32);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult35 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet36 = assetsVerificationResult35.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult37 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet28, assetResponseSet36);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray38 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet39 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet39, assetResponseArray38);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray41 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet42 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet42, assetResponseArray41);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult44 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet39, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet42);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray45 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet46 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet46, assetResponseArray45);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray48 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet49 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet49, assetResponseArray48);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult51 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet46, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet49);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet52 = assetsVerificationResult51.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult53 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet42, assetResponseSet52);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult54 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet36, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet42);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet55 = assetsVerificationResult54.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet56 = assetsVerificationResult54.getWorkingAssets();
        boolean boolean57 = hTMLPageResponse12.equals((java.lang.Object) assetResponseSet56);
        org.junit.Assert.assertNotNull(headerUtil4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(document13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "com.soulgalore.crawler.auth" + "'", str17, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(assetResponseArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(assetResponseArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(assetResponseSet25);
        org.junit.Assert.assertNotNull(assetResponseSet26);
        org.junit.Assert.assertNotNull(assetResponseSet27);
        org.junit.Assert.assertNotNull(assetResponseSet28);
        org.junit.Assert.assertNotNull(assetResponseArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(assetResponseArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(assetResponseSet36);
        org.junit.Assert.assertNotNull(assetResponseArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(assetResponseArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(assetResponseArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(assetResponseArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(assetResponseSet52);
        org.junit.Assert.assertNotNull(assetResponseSet55);
        org.junit.Assert.assertNotNull(assetResponseSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test08194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08194");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setMaxLevels((-1));
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("CrawlerURL url:CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test08195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08195");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider(581, (int) ' ', (int) (short) -1, "AssetResponseCallable url:com.soulgalore.crawler.nrofhttpthreads", "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:AssetResponseCallable url:com.soulgalore.crawler.nrofhttpthreads");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08196");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        int int6 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str8 = crawlerConfiguration3.getRequestHeaders();
        java.lang.String str9 = crawlerConfiguration3.getStartUrl();
        java.lang.String str10 = crawlerConfiguration3.getRequestHeaders();
        java.lang.String str11 = crawlerConfiguration3.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str13 = crawlerConfiguration3.getOnlyOnPath();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean17 = crawlerURL16.isWrongSyntax();
        java.lang.String str18 = crawlerURL16.getReferer();
        java.lang.String str19 = crawlerURL16.getHost();
        java.lang.String str20 = crawlerURL16.getUrl();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray21 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, assetResponseArray21);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray24 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25, assetResponseArray24);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult27 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet28 = assetsVerificationResult27.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = assetsVerificationResult27.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray30 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet31 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet31, assetResponseArray30);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray33 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet34 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet34, assetResponseArray33);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult36 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet31, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet34);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult37 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet29, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet31);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray38 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet39 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet39, assetResponseArray38);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray41 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet42 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet42, assetResponseArray41);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult44 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet39, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet42);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet45 = assetsVerificationResult44.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult46 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet29, assetResponseSet45);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet47 = assetsVerificationResult46.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet48 = assetsVerificationResult46.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet49 = assetsVerificationResult46.getWorkingAssets();
        boolean boolean50 = crawlerURL16.equals((java.lang.Object) assetsVerificationResult46);
        java.net.URI uRI51 = crawlerURL16.getUri();
        com.soulgalore.crawler.guice.ExecutorServiceProvider executorServiceProvider53 = new com.soulgalore.crawler.guice.ExecutorServiceProvider(582);
        java.util.concurrent.ExecutorService executorService54 = executorServiceProvider53.get();
        boolean boolean55 = crawlerURL16.equals((java.lang.Object) executorServiceProvider53);
        boolean boolean56 = crawlerConfiguration3.equals((java.lang.Object) crawlerURL16);
        java.lang.String str57 = crawlerConfiguration3.getStartUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "urls.txt" + "'", str18, "urls.txt");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "com.soulgalore.crawler.auth" + "'", str20, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(assetResponseArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(assetResponseArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(assetResponseSet28);
        org.junit.Assert.assertNotNull(assetResponseSet29);
        org.junit.Assert.assertNotNull(assetResponseArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(assetResponseArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(assetResponseArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(assetResponseArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(assetResponseSet45);
        org.junit.Assert.assertNotNull(assetResponseSet47);
        org.junit.Assert.assertNotNull(assetResponseSet48);
        org.junit.Assert.assertNotNull(assetResponseSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(uRI51);
        org.junit.Assert.assertNotNull(executorService54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(str57);
    }

    @Test
    public void test08197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08197");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet12 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet14 = crawlerResult11.getNonWorkingUrls();
        java.lang.String str15 = crawlerResult11.getTheStartPoint();
        java.lang.String str16 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = crawlerResult11.getNonWorkingUrls();
        java.lang.String str18 = crawlerResult11.getTheStartPoint();
        java.lang.String str19 = crawlerResult11.getTheStartPoint();
        java.lang.String str20 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet21 = crawlerResult11.getNonWorkingUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet12);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet21);
    }

    @Test
    public void test08198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08198");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int19 = hTMLPageResponse18.getResponseCode();
        long long20 = hTMLPageResponse18.getFetchTime();
        long long21 = hTMLPageResponse18.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI25 = crawlerURL24.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean30 = crawlerURL29.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder32.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration37 = builder32.build();
        java.lang.String str38 = crawlerConfiguration37.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = crawlerConfiguration37.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, (-1), strMap39, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse51 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL24, 100, strMap39, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        boolean boolean52 = hTMLPageResponse18.equals((java.lang.Object) 100);
        org.jsoup.nodes.Document document53 = hTMLPageResponse18.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL54 = hTMLPageResponse18.getPageUrl();
        java.lang.String str55 = crawlerURL54.getReferer();
        java.lang.String str56 = crawlerURL54.getHost();
        java.lang.String str57 = crawlerURL54.getReferer();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 580L + "'", long20 == 580L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 580L + "'", long21 == 580L);
        org.junit.Assert.assertNull(uRI25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(crawlerConfiguration37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(document53);
        org.junit.Assert.assertNotNull(crawlerURL54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "urls.txt" + "'", str55, "urls.txt");
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "urls.txt" + "'", str57, "urls.txt");
    }

    @Test
    public void test08199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08199");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        long long14 = hTMLPageResponse12.getFetchTime();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        java.lang.String str17 = hTMLPageResponse12.getUrl();
        java.lang.String str18 = hTMLPageResponse12.getEncoding();
        int int19 = hTMLPageResponse12.getResponseCode();
        java.lang.String str20 = hTMLPageResponse12.getResponseType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 100L + "'", long14 == 100L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "com.soulgalore.crawler.auth" + "'", str17, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str18, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test08200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08200");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet18 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet19 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet20 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet21 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet22 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL27 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray28 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL27 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet29 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet29, crawlerURLArray28);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet31 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray32 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet33 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet33, hTMLPageResponseArray32);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult35 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet29, hTMLPageResponseSet31, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet33);
        java.lang.String str36 = crawlerResult35.getTheStartPoint();
        java.lang.String str37 = crawlerResult35.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet38 = crawlerResult35.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet39 = crawlerResult35.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL43 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray44 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL43 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet45 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet45, crawlerURLArray44);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet47 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray48 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet49 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet49, hTMLPageResponseArray48);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult51 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet45, hTMLPageResponseSet47, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet49);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet52 = crawlerResult51.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet53 = crawlerResult51.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet54 = crawlerResult51.getUrls();
        java.lang.String str55 = crawlerResult51.getTheStartPoint();
        java.lang.String str56 = crawlerResult51.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet57 = crawlerResult51.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet58 = crawlerResult51.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL62 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray63 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL62 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet64 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet64, crawlerURLArray63);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet66 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray67 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet68 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet68, hTMLPageResponseArray67);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult70 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet64, hTMLPageResponseSet66, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet68);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet71 = crawlerResult70.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet72 = crawlerResult70.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet73 = crawlerResult70.getNonWorkingUrls();
        java.lang.String str74 = crawlerResult70.getTheStartPoint();
        java.lang.String str75 = crawlerResult70.getTheStartPoint();
        java.lang.String str76 = crawlerResult70.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet77 = crawlerResult70.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult78 = new com.soulgalore.crawler.core.CrawlerResult("errorassets.csv", crawlerURLSet39, hTMLPageResponseSet58, hTMLPageResponseSet77);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL82 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray83 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL82 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet84 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet84, crawlerURLArray83);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet86 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray87 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet88 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet88, hTMLPageResponseArray87);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult90 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet84, hTMLPageResponseSet86, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet88);
        java.lang.String str91 = crawlerResult90.getTheStartPoint();
        java.lang.String str92 = crawlerResult90.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet93 = crawlerResult90.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet94 = crawlerResult90.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet95 = crawlerResult90.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult96 = new com.soulgalore.crawler.core.CrawlerResult("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt", crawlerURLSet22, hTMLPageResponseSet58, hTMLPageResponseSet95);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet97 = crawlerResult96.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet98 = crawlerResult96.getUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet17);
        org.junit.Assert.assertNotNull(crawlerURLSet18);
        org.junit.Assert.assertNotNull(crawlerURLSet19);
        org.junit.Assert.assertNotNull(crawlerURLSet20);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet21);
        org.junit.Assert.assertNotNull(crawlerURLSet22);
        org.junit.Assert.assertNotNull(crawlerURLArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet38);
        org.junit.Assert.assertNotNull(crawlerURLSet39);
        org.junit.Assert.assertNotNull(crawlerURLArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet52);
        org.junit.Assert.assertNotNull(crawlerURLSet53);
        org.junit.Assert.assertNotNull(crawlerURLSet54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet57);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet58);
        org.junit.Assert.assertNotNull(crawlerURLArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet71);
        org.junit.Assert.assertNotNull(crawlerURLSet72);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet77);
        org.junit.Assert.assertNotNull(crawlerURLArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!" + "'", str91, "hi!");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "hi!" + "'", str92, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet93);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet94);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet95);
        org.junit.Assert.assertNotNull(crawlerURLSet97);
        org.junit.Assert.assertNotNull(crawlerURLSet98);
    }

    @Test
    public void test08201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08201");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setRequestHeaders("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder6.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder6.setRequestHeaders("CrawlerURL url:CrawlerURL url:CrawlerURL url:errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder6.setVerifyUrls(true);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
    }

    @Test
    public void test08202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08202");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "CrawlerURL url:Redirected to new domain", 0, (long) 581);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder5.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration12 = builder11.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder11.setOnlyOnPath("Wrong content type");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder11.setNotOnPath("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder11.setMaxLevels((int) (short) -1);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setRequestHeaders("AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
        boolean boolean21 = assetResponse4.equals((java.lang.Object) builder20);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(crawlerConfiguration12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test08203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08203");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean6 = crawlerURL5.isWrongSyntax();
        java.lang.String str7 = crawlerURL5.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse15 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) 'a', strMap9, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str16 = hTMLPageResponse15.getUrl();
        boolean boolean17 = crawlerURL1.equals((java.lang.Object) str16);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher20 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil21 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = headerUtil21.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable25 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher20, strMap23, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse31 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) 100, strMap23, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        long long32 = hTMLPageResponse31.getFetchTime();
        long long33 = hTMLPageResponse31.getFetchTime();
        java.lang.String str34 = hTMLPageResponse31.getResponseType();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = hTMLPageResponse31.getResponseHeaders();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "urls.txt" + "'", str7, "urls.txt");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(headerUtil21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 100L + "'", long32 == 100L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 100L + "'", long33 == 100L);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "errorurls.txt" + "'", str34, "errorurls.txt");
        org.junit.Assert.assertNotNull(strMap35);
    }

    @Test
    public void test08204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08204");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder3 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder3.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration6 = builder5.build();
        java.lang.String str7 = crawlerConfiguration6.getStartUrl();
        int int8 = crawlerConfiguration6.getMaxLevels();
        int int9 = crawlerConfiguration6.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean13 = crawlerURL12.isWrongSyntax();
        java.lang.String str14 = crawlerURL12.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse22 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL12, (int) 'a', strMap16, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str23 = hTMLPageResponse22.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = hTMLPageResponse22.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = hTMLPageResponse22.getResponseHeaders();
        java.lang.String str26 = hTMLPageResponse22.getUrl();
        org.jsoup.nodes.Document document27 = hTMLPageResponse22.getBody();
        boolean boolean28 = crawlerConfiguration6.equals((java.lang.Object) hTMLPageResponse22);
        boolean boolean29 = crawlerURL1.equals((java.lang.Object) hTMLPageResponse22);
        java.lang.String str30 = crawlerURL1.getHost();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean34 = crawlerURL33.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder36.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder36.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration41 = builder36.build();
        java.lang.String str42 = crawlerConfiguration41.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = crawlerConfiguration41.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse49 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL33, (-1), strMap43, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        java.lang.String str51 = hTMLPageResponse49.getHeaderValue("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL52 = hTMLPageResponse49.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL53 = hTMLPageResponse49.getPageUrl();
        java.lang.String str54 = hTMLPageResponse49.getEncoding();
        long long55 = hTMLPageResponse49.getFetchTime();
        java.lang.String str56 = hTMLPageResponse49.getResponseType();
        java.lang.String str57 = hTMLPageResponse49.toString();
        boolean boolean58 = crawlerURL1.equals((java.lang.Object) hTMLPageResponse49);
        java.lang.String str59 = crawlerURL1.getHost();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(crawlerConfiguration6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "urls.txt" + "'", str14, "urls.txt");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str23, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "com.soulgalore.crawler.auth" + "'", str26, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(crawlerConfiguration41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(crawlerURL52);
        org.junit.Assert.assertNotNull(crawlerURL53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "errorurls.txt" + "'", str54, "errorurls.txt");
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 580L + "'", long55 == 580L);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "com.soulgalore.crawler.auth" + "'", str56, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth" + "'", str57, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(str59);
    }

    @Test
    public void test08205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08205");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        java.lang.String str2 = crawlerURL1.getUrl();
        boolean boolean3 = crawlerURL1.isWrongSyntax();
        com.soulgalore.crawler.util.HeaderUtil headerUtil5 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = headerUtil5.createHeadersFromString("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse13 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) 10, strMap7, "urls.txt", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (byte) 10, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", (-1L));
        java.lang.String str14 = crawlerURL1.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder15.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder15.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder19.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder19.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder19.setOnlyOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setStartUrl("Wrong content type");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder27.setNotOnPath("35");
        boolean boolean32 = crawlerURL1.equals((java.lang.Object) builder31);
        java.lang.Class<?> wildcardClass33 = crawlerURL1.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(headerUtil5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test08206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08206");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean4 = crawlerURL3.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI12 = crawlerURL11.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray13 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3, crawlerURL7, crawlerURL11 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet14, crawlerURLArray13);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray16 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet17, hTMLPageResponseArray16);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray23 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL22 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, crawlerURLArray23);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray27 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28, hTMLPageResponseArray27);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult30 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, hTMLPageResponseSet26, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult31 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet14, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet17, hTMLPageResponseSet26);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet32 = crawlerResult31.getUrls();
        java.lang.String str33 = crawlerResult31.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet34 = crawlerResult31.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet35 = crawlerResult31.getUrls();
        java.lang.String str36 = crawlerResult31.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet37 = crawlerResult31.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet38 = crawlerResult31.getVerifiedURLResponses();
        java.lang.String str39 = crawlerResult31.getTheStartPoint();
        java.lang.String str40 = crawlerResult31.getTheStartPoint();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet41 = crawlerResult31.getNonWorkingUrls();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(uRI12);
        org.junit.Assert.assertNotNull(crawlerURLArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "com.soulgalore.crawler.auth" + "'", str33, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet34);
        org.junit.Assert.assertNotNull(crawlerURLSet35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "com.soulgalore.crawler.auth" + "'", str36, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURLSet37);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "com.soulgalore.crawler.auth" + "'", str39, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "com.soulgalore.crawler.auth" + "'", str40, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test08207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08207");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("", "AssetResponseCallable url:CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:10");
    }

    @Test
    public void test08208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08208");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean5 = crawlerURL4.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean9 = crawlerURL8.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI13 = crawlerURL12.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray14 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4, crawlerURL8, crawlerURL12 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet15, crawlerURLArray14);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray17 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet18 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet18, hTMLPageResponseArray17);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL23 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray24 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL23 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet25 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet25, crawlerURLArray24);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet27 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray28 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet29 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet29, hTMLPageResponseArray28);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult31 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet25, hTMLPageResponseSet27, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet29);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult32 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet15, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet18, hTMLPageResponseSet27);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet33 = crawlerResult32.getUrls();
        java.lang.String str34 = crawlerResult32.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet35 = crawlerResult32.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL37 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:urls.txt");
        java.lang.String str38 = crawlerURL37.getReferer();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL42 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray43 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL42 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet44 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet44, crawlerURLArray43);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet46 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray47 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet48 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet48, hTMLPageResponseArray47);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult50 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet44, hTMLPageResponseSet46, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet48);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet51 = crawlerResult50.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet52 = crawlerResult50.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet53 = crawlerResult50.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet54 = crawlerResult50.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet55 = crawlerResult50.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet56 = crawlerResult50.getNonWorkingUrls();
        java.lang.String str57 = crawlerResult50.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet58 = crawlerResult50.getUrls();
        boolean boolean59 = crawlerURL37.equals((java.lang.Object) crawlerResult50);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet60 = crawlerResult50.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL64 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray65 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL64 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet66 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet66, crawlerURLArray65);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet68 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray69 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet70 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet70, hTMLPageResponseArray69);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult72 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet66, hTMLPageResponseSet68, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet70);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet73 = crawlerResult72.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet74 = crawlerResult72.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet75 = crawlerResult72.getNonWorkingUrls();
        java.lang.String str76 = crawlerResult72.getTheStartPoint();
        java.lang.String str77 = crawlerResult72.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet78 = crawlerResult72.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet79 = crawlerResult72.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet80 = crawlerResult72.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult81 = new com.soulgalore.crawler.core.CrawlerResult("-1", crawlerURLSet35, hTMLPageResponseSet60, hTMLPageResponseSet80);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet82 = crawlerResult81.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet83 = crawlerResult81.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet84 = crawlerResult81.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet85 = crawlerResult81.getVerifiedURLResponses();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(uRI13);
        org.junit.Assert.assertNotNull(crawlerURLArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "com.soulgalore.crawler.auth" + "'", str34, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURLSet35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(crawlerURLArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet51);
        org.junit.Assert.assertNotNull(crawlerURLSet52);
        org.junit.Assert.assertNotNull(crawlerURLSet53);
        org.junit.Assert.assertNotNull(crawlerURLSet54);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet55);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet60);
        org.junit.Assert.assertNotNull(crawlerURLArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet73);
        org.junit.Assert.assertNotNull(crawlerURLSet74);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet78);
        org.junit.Assert.assertNotNull(crawlerURLSet79);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet80);
        org.junit.Assert.assertNotNull(crawlerURLSet82);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet83);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet84);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet85);
    }

    @Test
    public void test08209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08209");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt", "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:97encoding:52 type:CrawlerURL url:com.soulgalore.crawler.auth");
    }

    @Test
    public void test08210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08210");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        int int6 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil7 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean8 = crawlerConfiguration5.equals((java.lang.Object) headerUtil7);
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil7.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil7.createHeadersFromString("CrawlerURL url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil7.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap16 = headerUtil7.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap18 = headerUtil7.createHeadersFromString("AssetResponseCallable url:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        java.util.Map<java.lang.String, java.lang.String> strMap20 = headerUtil7.createHeadersFromString("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:");
        java.util.Map<java.lang.String, java.lang.String> strMap22 = headerUtil7.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:Redirected to new domain");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(headerUtil7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap22);
    }

    @Test
    public void test08211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08211");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration3.getRequestHeadersMap();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray12 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL11 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet13, crawlerURLArray12);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray16 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet17, hTMLPageResponseArray16);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult19 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet13, hTMLPageResponseSet15, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet17);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet20 = crawlerResult19.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet21 = crawlerResult19.getUrls();
        boolean boolean22 = crawlerConfiguration3.equals((java.lang.Object) crawlerURLSet21);
        java.lang.String str23 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str24 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str25 = crawlerConfiguration3.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray30 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL29 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet31 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet31, crawlerURLArray30);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet33 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray34 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet35 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet35, hTMLPageResponseArray34);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult37 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet31, hTMLPageResponseSet33, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet35);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet38 = crawlerResult37.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet39 = crawlerResult37.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet40 = crawlerResult37.getNonWorkingUrls();
        java.lang.String str41 = crawlerResult37.getTheStartPoint();
        java.lang.String str42 = crawlerResult37.getTheStartPoint();
        java.lang.String str43 = crawlerResult37.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet44 = crawlerResult37.getNonWorkingUrls();
        boolean boolean45 = crawlerConfiguration3.equals((java.lang.Object) crawlerResult37);
        java.lang.String str46 = crawlerConfiguration3.getStartUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(crawlerURLArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet20);
        org.junit.Assert.assertNotNull(crawlerURLSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(crawlerURLArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet38);
        org.junit.Assert.assertNotNull(crawlerURLSet39);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test08212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08212");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder0.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration9 = builder8.build();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(crawlerConfiguration9);
    }

    @Test
    public void test08213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08213");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        int int6 = crawlerConfiguration3.getMaxLevels();
        int int7 = crawlerConfiguration3.getMaxLevels();
        boolean boolean8 = crawlerConfiguration3.isVerifyUrls();
        boolean boolean9 = crawlerConfiguration3.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str11 = crawlerConfiguration3.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration3.getRequestHeadersMap();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder13.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setStartUrl("AssetResponseCallable url:Malformed url");
        boolean boolean22 = crawlerConfiguration3.equals((java.lang.Object) "AssetResponseCallable url:Malformed url");
        int int23 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str24 = crawlerConfiguration3.getOnlyOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
    }

    @Test
    public void test08214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08214");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        com.soulgalore.crawler.util.StatusCode statusCode6 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN;
        boolean boolean7 = crawlerConfiguration3.equals((java.lang.Object) statusCode6);
        java.lang.String str8 = statusCode6.getFriendlyName();
        java.lang.String str9 = statusCode6.getFriendlyName();
        int int10 = statusCode6.getCode();
        int int11 = statusCode6.getCode();
        int int12 = statusCode6.getCode();
        java.lang.String str13 = statusCode6.getFriendlyName();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + statusCode6 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN + "'", statusCode6.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Unknown error" + "'", str8, "Unknown error");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Unknown error" + "'", str9, "Unknown error");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 581 + "'", int10 == 581);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 581 + "'", int11 == 581);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 581 + "'", int12 == 581);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Unknown error" + "'", str13, "Unknown error");
    }

    @Test
    public void test08215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08215");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher3 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher5 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI8 = crawlerURL7.getUri();
        boolean boolean9 = crawlerURL7.isWrongSyntax();
        java.lang.String str10 = crawlerURL7.getHost();
        boolean boolean11 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher14 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher16 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean20 = crawlerURL19.isWrongSyntax();
        java.lang.String str21 = crawlerURL19.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL19, (int) 'a', strMap23, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str30 = hTMLPageResponse29.getEncoding();
        java.lang.String str31 = hTMLPageResponse29.getResponseType();
        java.lang.String str32 = hTMLPageResponse29.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = hTMLPageResponse29.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL37 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "com.soulgalore.crawler.auth");
        java.lang.String str38 = crawlerURL37.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder40.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration43 = builder42.build();
        java.lang.String str44 = crawlerConfiguration43.getOnlyOnPath();
        boolean boolean45 = crawlerConfiguration43.isVerifyUrls();
        int int46 = crawlerConfiguration43.getMaxLevels();
        int int47 = crawlerConfiguration43.getMaxLevels();
        boolean boolean48 = crawlerConfiguration43.isVerifyUrls();
        boolean boolean49 = crawlerConfiguration43.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = crawlerConfiguration43.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse56 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL37, 100, strMap50, "Unknown error", "com.soulgalore.crawler.http.socket.timeout", (long) 10, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", 0L);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse62 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL33, (int) '4', strMap50, "97", "100", (long) (byte) 1, "com.soulgalore.crawler.http.socket.timeout", (long) (byte) -1);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable64 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("CrawlerURL url:10", assetFetcher16, strMap50, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable66 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Malformed url", assetFetcher14, strMap50, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse72 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, 582, strMap50, "AssetResponseCallable url:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", "HTMLPageResponseurl:AssetResponseCallable url:Malformed urlresponseCode:581encoding:Unknown error type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads", (long) 'a', "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads", (long) (byte) 10);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable74 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:", assetFetcher5, strMap50, "");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable76 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("CrawlerURL url:com.soulgalore.crawler.auth", assetFetcher3, strMap50, "CrawlerURL url:errorassets.csv");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable78 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout", assetFetcher1, strMap50, "AssetResponseCallable url:HTMLPageResponseurl:hi!responseCode:-1encoding:errorurls.txt type:result.csv");
        org.junit.Assert.assertNull(uRI8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "urls.txt" + "'", str21, "urls.txt");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str30, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "com.soulgalore.crawler.auth" + "'", str32, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL33);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "CrawlerURL url:urls.txt" + "'", str38, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(crawlerConfiguration43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strMap50);
    }

    @Test
    public void test08216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08216");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        long long16 = hTMLPageResponse12.getFetchTime();
        java.lang.String str17 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder19.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder19.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder25.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setVerifyUrls(false);
        boolean boolean30 = crawlerURL18.equals((java.lang.Object) builder29);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration31 = builder29.build();
        java.lang.String str32 = crawlerConfiguration31.getStartUrl();
        java.lang.String str33 = crawlerConfiguration31.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = crawlerConfiguration31.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = crawlerConfiguration31.getRequestHeadersMap();
        java.lang.String str36 = crawlerConfiguration31.getRequestHeaders();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str17, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(crawlerConfiguration31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
    }

    @Test
    public void test08217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08217");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:Response timed out", "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:");
    }

    @Test
    public void test08218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08218");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider((int) (byte) 100, 308, (int) (short) 1, "HTMLPageResponseurl:hi!responseCode:10encoding:result.csv type:hi!", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"hi!responseCode\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08219");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.http.connection.timeout", "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (int) (byte) 10, (long) (short) 0);
        int int5 = assetResponse4.getResponseCode();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
    }

    @Test
    public void test08220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08220");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        com.soulgalore.crawler.util.StatusCode statusCode6 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN;
        boolean boolean7 = crawlerConfiguration3.equals((java.lang.Object) statusCode6);
        int int8 = statusCode6.getCode();
        int int9 = statusCode6.getCode();
        int int10 = statusCode6.getCode();
        int int11 = statusCode6.getCode();
        java.lang.String str12 = statusCode6.getFriendlyName();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + statusCode6 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN + "'", statusCode6.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 581 + "'", int8 == 581);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 581 + "'", int9 == 581);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 581 + "'", int10 == 581);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 581 + "'", int11 == 581);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Unknown error" + "'", str12, "Unknown error");
    }

    @Test
    public void test08221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08221");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder3 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder3.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration6 = builder5.build();
        java.lang.String str7 = crawlerConfiguration6.getStartUrl();
        int int8 = crawlerConfiguration6.getMaxLevels();
        int int9 = crawlerConfiguration6.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean13 = crawlerURL12.isWrongSyntax();
        java.lang.String str14 = crawlerURL12.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse22 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL12, (int) 'a', strMap16, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str23 = hTMLPageResponse22.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = hTMLPageResponse22.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = hTMLPageResponse22.getResponseHeaders();
        java.lang.String str26 = hTMLPageResponse22.getUrl();
        org.jsoup.nodes.Document document27 = hTMLPageResponse22.getBody();
        boolean boolean28 = crawlerConfiguration6.equals((java.lang.Object) hTMLPageResponse22);
        boolean boolean29 = crawlerURL1.equals((java.lang.Object) hTMLPageResponse22);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder31.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration34 = builder33.build();
        java.lang.String str35 = crawlerConfiguration34.getStartUrl();
        int int36 = crawlerConfiguration34.getMaxLevels();
        int int37 = crawlerConfiguration34.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = crawlerConfiguration34.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse44 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 582, strMap38, "urls.txt", "hi!", (long) (short) 0, "AssetResponseCallable url:result.csv", 10L);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = hTMLPageResponse44.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL47 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI48 = crawlerURL47.getUri();
        boolean boolean49 = crawlerURL47.isWrongSyntax();
        java.lang.String str50 = crawlerURL47.getHost();
        java.net.URI uRI51 = crawlerURL47.getUri();
        java.net.URI uRI52 = crawlerURL47.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL56 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI57 = crawlerURL56.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder59 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder61 = builder59.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration62 = builder61.build();
        java.lang.String str63 = crawlerConfiguration62.getStartUrl();
        int int64 = crawlerConfiguration62.getMaxLevels();
        int int65 = crawlerConfiguration62.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap66 = crawlerConfiguration62.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse72 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL56, (int) (short) 10, strMap66, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int73 = hTMLPageResponse72.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap74 = hTMLPageResponse72.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse80 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL47, 0, strMap74, "CrawlerURL url:result.csv", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) 583, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (byte) 1);
        java.lang.String str81 = hTMLPageResponse80.getUrl();
        boolean boolean82 = hTMLPageResponse44.equals((java.lang.Object) str81);
        org.jsoup.nodes.Document document83 = hTMLPageResponse44.getBody();
        java.lang.String str84 = hTMLPageResponse44.getResponseType();
        java.lang.String str86 = hTMLPageResponse44.getHeaderValue("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:97encoding:52 type:CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(crawlerConfiguration6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "urls.txt" + "'", str14, "urls.txt");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str23, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "com.soulgalore.crawler.auth" + "'", str26, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(crawlerConfiguration34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(uRI48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(uRI51);
        org.junit.Assert.assertNull(uRI52);
        org.junit.Assert.assertNull(uRI57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(crawlerConfiguration62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 10 + "'", int73 == 10);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str81, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(document83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "AssetResponseCallable url:result.csv" + "'", str84, "AssetResponseCallable url:result.csv");
        org.junit.Assert.assertNull(str86);
    }

    @Test
    public void test08222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08222");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("CrawlerURL url:HTMLPageResponseurl:CrawlerURL url:com.soulgalore.crawler.authresponseCode:0encoding:CrawlerURL url:result.csv type:-1", "CrawlerURL url:CrawlerURL url:HTMLPageResponseurl:CrawlerURL url:com.soulgalore.crawler.authresponseCode:0encoding:CrawlerURL url:result.csv type:-1", (int) (short) 1, 52L);
    }

    @Test
    public void test08223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08223");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:");
        java.lang.String str3 = crawlerURL2.getHost();
        java.lang.String str4 = crawlerURL2.getReferer();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:" + "'", str4, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:");
    }

    @Test
    public void test08224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08224");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI6 = crawlerURL5.getUri();
        boolean boolean7 = crawlerURL5.isWrongSyntax();
        java.lang.String str8 = crawlerURL5.getHost();
        java.net.URI uRI9 = crawlerURL5.getUri();
        java.net.URI uRI10 = crawlerURL5.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI15 = crawlerURL14.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration20 = builder19.build();
        java.lang.String str21 = crawlerConfiguration20.getStartUrl();
        int int22 = crawlerConfiguration20.getMaxLevels();
        int int23 = crawlerConfiguration20.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = crawlerConfiguration20.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse30 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL14, (int) (short) 10, strMap24, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int31 = hTMLPageResponse30.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = hTMLPageResponse30.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse38 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, 0, strMap32, "CrawlerURL url:result.csv", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) 583, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (byte) 1);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse44 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) 'a', strMap32, "AssetResponseCallable url:com.soulgalore.crawler.auth", "AssetResponseCallable url:errorassets.csv", (long) 100, "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", 35L);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL45 = hTMLPageResponse44.getPageUrl();
        java.lang.Class<?> wildcardClass46 = hTMLPageResponse44.getClass();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertNull(uRI6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(uRI9);
        org.junit.Assert.assertNull(uRI10);
        org.junit.Assert.assertNull(uRI15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(crawlerConfiguration20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(crawlerURL45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test08225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08225");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("52");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder2.setOnlyOnPath("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder2.setNotOnPath("100");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder2.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setMaxLevels(0);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test08226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08226");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse19 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.proxy", "", (int) (short) -1, (long) 583);
        boolean boolean20 = crawlerURL14.equals((java.lang.Object) assetResponse19);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration25 = builder24.build();
        java.lang.String str26 = crawlerConfiguration25.getOnlyOnPath();
        boolean boolean27 = crawlerConfiguration25.isVerifyUrls();
        int int28 = crawlerConfiguration25.getMaxLevels();
        int int29 = crawlerConfiguration25.getMaxLevels();
        boolean boolean30 = crawlerConfiguration25.isVerifyUrls();
        boolean boolean31 = crawlerConfiguration25.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = crawlerConfiguration25.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = crawlerConfiguration25.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse39 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL14, (int) (byte) 10, strMap33, "", "Malformed url", (long) (short) 10, "hi!", (long) 580);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL42 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI43 = crawlerURL42.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL46 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean47 = crawlerURL46.isWrongSyntax();
        java.lang.String str48 = crawlerURL46.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse56 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL46, (int) 'a', strMap50, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str57 = hTMLPageResponse56.getUrl();
        boolean boolean58 = crawlerURL42.equals((java.lang.Object) str57);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL61 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher64 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder65 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder67 = builder65.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder69 = builder65.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration70 = builder65.build();
        java.lang.String str71 = crawlerConfiguration70.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap72 = crawlerConfiguration70.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable74 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Redirected to new domain", assetFetcher64, strMap72, "com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse80 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL61, (int) (byte) 10, strMap72, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", "CrawlerURL url:com.soulgalore.crawler.auth", (long) 0, "100", (-1L));
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse86 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL42, (int) 'a', strMap72, "", "52", (long) (byte) 0, "CrawlerURL url:com.soulgalore.crawler.auth", (long) 10);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse92 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL14, (int) (short) 0, strMap72, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:-1encoding:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads type:AssetResponseCallable url:errorassets.csv", "AssetResponseCallable url:Unknown error", (long) (short) 10, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", (long) (byte) -1);
        java.lang.String str93 = crawlerURL14.toString();
        java.lang.String str94 = crawlerURL14.getHost();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(crawlerConfiguration25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(uRI43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "urls.txt" + "'", str48, "urls.txt");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "com.soulgalore.crawler.auth" + "'", str57, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(crawlerConfiguration70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str93, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(str94);
    }

    @Test
    public void test08227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08227");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder4.setOnlyOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setOnlyOnPath("Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setOnlyOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setMaxLevels(580);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setStartUrl("CrawlerURL url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder18.setOnlyOnPath("AssetResponseCallable url:HTMLPageResponseurl:result.csvresponseCode:-1encoding:AssetResponseCallable url:Wrong content type type:CrawlerURL url:errorassets.csv");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test08228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08228");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        int int19 = hTMLPageResponse12.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = hTMLPageResponse12.getPageUrl();
        java.lang.String str21 = crawlerURL20.getReferer();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL25 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "Response timed out");
        com.soulgalore.crawler.util.HeaderUtil headerUtil27 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = headerUtil27.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse35 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL25, (int) '4', strMap29, "com.soulgalore.crawler.http.socket.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 580, "com.soulgalore.crawler.auth", (long) (short) 1);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse41 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, (int) (byte) 1, strMap29, "AssetResponseCallable url:Malformed url", "urls.txt", (long) (byte) 10, "com.soulgalore.crawler.http.connection.timeout", (long) 97);
        java.lang.String str42 = crawlerURL20.getUrl();
        java.net.URI uRI43 = crawlerURL20.getUri();
        java.net.URI uRI44 = crawlerURL20.getUri();
        java.lang.Class<?> wildcardClass45 = crawlerURL20.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
        org.junit.Assert.assertNotNull(crawlerURL20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "urls.txt" + "'", str21, "urls.txt");
        org.junit.Assert.assertNotNull(headerUtil27);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "com.soulgalore.crawler.auth" + "'", str42, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(uRI43);
        org.junit.Assert.assertNull(uRI44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test08229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08229");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("result.csv", "Malformed url");
        java.net.URI uRI3 = crawlerURL2.getUri();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.lang.String str5 = crawlerURL2.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean9 = crawlerURL8.isWrongSyntax();
        java.lang.String str10 = crawlerURL8.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, (int) 'a', strMap12, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str19 = hTMLPageResponse18.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = hTMLPageResponse18.getResponseHeaders();
        java.lang.String str21 = hTMLPageResponse18.getEncoding();
        java.lang.String str22 = hTMLPageResponse18.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder23.setMaxLevels((int) (short) 0);
        boolean boolean28 = hTMLPageResponse18.equals((java.lang.Object) builder27);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder27.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder27.setMaxLevels((int) (byte) 100);
        boolean boolean33 = crawlerURL2.equals((java.lang.Object) (byte) 100);
        java.net.URI uRI34 = crawlerURL2.getUri();
        java.lang.String str35 = crawlerURL2.getUrl();
        java.lang.String str36 = crawlerURL2.toString();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Malformed url" + "'", str4, "Malformed url");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CrawlerURL url:result.csv" + "'", str5, "CrawlerURL url:result.csv");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "urls.txt" + "'", str10, "urls.txt");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str19, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str21, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str22, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(uRI34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "result.csv" + "'", str35, "result.csv");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "CrawlerURL url:result.csv" + "'", str36, "CrawlerURL url:result.csv");
    }

    @Test
    public void test08230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08230");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder4.setOnlyOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setOnlyOnPath("Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setOnlyOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration17 = builder12.build();
        java.lang.String str18 = crawlerConfiguration17.getOnlyOnPath();
        java.lang.String str19 = crawlerConfiguration17.getOnlyOnPath();
        java.lang.Class<?> wildcardClass20 = crawlerConfiguration17.getClass();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(crawlerConfiguration17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test08231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08231");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean9 = crawlerURL8.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder11.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration16 = builder11.build();
        java.lang.String str17 = crawlerConfiguration16.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = crawlerConfiguration16.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse24 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, (-1), strMap18, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int25 = hTMLPageResponse24.getResponseCode();
        long long26 = hTMLPageResponse24.getFetchTime();
        long long27 = hTMLPageResponse24.getFetchTime();
        boolean boolean28 = crawlerConfiguration3.equals((java.lang.Object) hTMLPageResponse24);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = hTMLPageResponse24.getPageUrl();
        java.lang.String str30 = crawlerURL29.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration35 = builder34.build();
        java.lang.String str36 = crawlerConfiguration35.getOnlyOnPath();
        boolean boolean37 = crawlerConfiguration35.isVerifyUrls();
        int int38 = crawlerConfiguration35.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = crawlerConfiguration35.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, 583, strMap39, "AssetResponseCallable url:AssetResponseCallable url:Unknown error", "CrawlerURL url:CrawlerURL url:CrawlerURL url:errorassets.csv", (long) (short) 10, "AssetResponseCallable url:100", 580L);
        java.net.URI uRI46 = crawlerURL29.getUri();
        java.lang.String str47 = crawlerURL29.getHost();
        java.lang.String str48 = crawlerURL29.toString();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(crawlerConfiguration16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 580L + "'", long26 == 580L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 580L + "'", long27 == 580L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(crawlerURL29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "com.soulgalore.crawler.auth" + "'", str30, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(crawlerConfiguration35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(uRI46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str48, "CrawlerURL url:com.soulgalore.crawler.auth");
    }

    @Test
    public void test08232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08232");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str7 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str8 = crawlerConfiguration5.getStartUrl();
        java.lang.String str9 = crawlerConfiguration5.getStartUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean13 = crawlerURL12.isWrongSyntax();
        java.lang.String str14 = crawlerURL12.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse22 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL12, (int) 'a', strMap16, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int23 = hTMLPageResponse22.getResponseCode();
        int int24 = hTMLPageResponse22.getResponseCode();
        java.lang.String str25 = hTMLPageResponse22.getUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = hTMLPageResponse22.getResponseHeaders();
        int int27 = hTMLPageResponse22.getResponseCode();
        int int28 = hTMLPageResponse22.getResponseCode();
        boolean boolean29 = crawlerConfiguration5.equals((java.lang.Object) hTMLPageResponse22);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = crawlerConfiguration5.getRequestHeadersMap();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "urls.txt" + "'", str14, "urls.txt");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 97 + "'", int23 == 97);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 97 + "'", int24 == 97);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "com.soulgalore.crawler.auth" + "'", str25, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 97 + "'", int27 == 97);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 97 + "'", int28 == 97);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap30);
    }

    @Test
    public void test08233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08233");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", "52");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean7 = crawlerURL6.isWrongSyntax();
        java.lang.String str8 = crawlerURL6.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse16 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL6, (int) 'a', strMap10, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str17 = hTMLPageResponse16.getUrl();
        boolean boolean19 = hTMLPageResponse16.equals((java.lang.Object) "CrawlerURL url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = hTMLPageResponse16.getPageUrl();
        java.net.URI uRI21 = crawlerURL20.getUri();
        java.lang.String str22 = crawlerURL20.toString();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher25 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL27 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL30 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI31 = crawlerURL30.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL34 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean35 = crawlerURL34.isWrongSyntax();
        java.lang.String str36 = crawlerURL34.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse44 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL34, (int) 'a', strMap38, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str45 = hTMLPageResponse44.getUrl();
        boolean boolean46 = crawlerURL30.equals((java.lang.Object) str45);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher49 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil50 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap52 = headerUtil50.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable54 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher49, strMap52, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse60 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL30, (int) (short) 100, strMap52, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse66 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL27, (int) (short) -1, strMap52, "com.soulgalore.crawler.http.socket.timeout", "errorurls.txt", (long) 100, "result.csv", (long) (short) 0);
        java.util.Map<java.lang.String, java.lang.String> strMap67 = hTMLPageResponse66.getResponseHeaders();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable69 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("com.soulgalore.crawler.nrofhttpthreads", assetFetcher25, strMap67, "HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse75 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, (int) '#', strMap67, "0", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:", (long) 581, "0", (long) (-1));
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse81 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) 10, strMap67, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads", "AssetResponseCallable url:0", (long) '4', "AssetResponseCallable url:com.soulgalore.crawler.auth", 580L);
        java.lang.String str82 = crawlerURL2.getHost();
        java.lang.String str83 = crawlerURL2.getUrl();
        java.lang.Class<?> wildcardClass84 = crawlerURL2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "urls.txt" + "'", str8, "urls.txt");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "com.soulgalore.crawler.auth" + "'", str17, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(crawlerURL20);
        org.junit.Assert.assertNull(uRI21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str22, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(uRI31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "urls.txt" + "'", str36, "urls.txt");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "com.soulgalore.crawler.auth" + "'", str45, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(headerUtil50);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str83, "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test08234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08234");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration3.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = crawlerConfiguration3.getRequestHeadersMap();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean12 = crawlerURL11.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration19 = builder14.build();
        java.lang.String str20 = crawlerConfiguration19.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = crawlerConfiguration19.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse27 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL11, (-1), strMap21, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int28 = hTMLPageResponse27.getResponseCode();
        int int29 = hTMLPageResponse27.getResponseCode();
        boolean boolean30 = crawlerConfiguration3.equals((java.lang.Object) hTMLPageResponse27);
        long long31 = hTMLPageResponse27.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL32 = hTMLPageResponse27.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL34 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI35 = crawlerURL34.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder36.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration39 = builder38.build();
        java.lang.String str40 = crawlerConfiguration39.getStartUrl();
        int int41 = crawlerConfiguration39.getMaxLevels();
        int int42 = crawlerConfiguration39.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL45 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean46 = crawlerURL45.isWrongSyntax();
        java.lang.String str47 = crawlerURL45.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse55 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL45, (int) 'a', strMap49, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str56 = hTMLPageResponse55.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL57 = hTMLPageResponse55.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = hTMLPageResponse55.getResponseHeaders();
        java.lang.String str59 = hTMLPageResponse55.getUrl();
        org.jsoup.nodes.Document document60 = hTMLPageResponse55.getBody();
        boolean boolean61 = crawlerConfiguration39.equals((java.lang.Object) hTMLPageResponse55);
        boolean boolean62 = crawlerURL34.equals((java.lang.Object) hTMLPageResponse55);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder64 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder66 = builder64.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration67 = builder66.build();
        java.lang.String str68 = crawlerConfiguration67.getStartUrl();
        int int69 = crawlerConfiguration67.getMaxLevels();
        int int70 = crawlerConfiguration67.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap71 = crawlerConfiguration67.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse77 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL34, 582, strMap71, "urls.txt", "hi!", (long) (short) 0, "AssetResponseCallable url:result.csv", 10L);
        java.util.Map<java.lang.String, java.lang.String> strMap78 = hTMLPageResponse77.getResponseHeaders();
        java.lang.String str79 = hTMLPageResponse77.getUrl();
        boolean boolean80 = hTMLPageResponse27.equals((java.lang.Object) hTMLPageResponse77);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL81 = hTMLPageResponse77.getPageUrl();
        java.lang.String str82 = hTMLPageResponse77.getUrl();
        java.lang.String str83 = hTMLPageResponse77.getEncoding();
        java.lang.String str84 = hTMLPageResponse77.toString();
        java.lang.String str85 = hTMLPageResponse77.toString();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(crawlerConfiguration19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 580L + "'", long31 == 580L);
        org.junit.Assert.assertNotNull(crawlerURL32);
        org.junit.Assert.assertNull(uRI35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(crawlerConfiguration39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "urls.txt" + "'", str47, "urls.txt");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str56, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "com.soulgalore.crawler.auth" + "'", str59, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(crawlerConfiguration67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str79, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(crawlerURL81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str82, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv" + "'", str84, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv" + "'", str85, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv");
    }

    @Test
    public void test08235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08235");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:responseCode:1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:urls.txt type:com.soulgalore.crawler.http.connection.timeout type:AssetResponseCallable url:urls.txt");
    }

    @Test
    public void test08236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08236");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder9.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder9.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setMaxLevels((int) '4');
        boolean boolean15 = crawlerConfiguration5.equals((java.lang.Object) builder14);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder14.setOnlyOnPath("com.soulgalore.crawler.proxy");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("AssetResponseCallable url:CrawlerURL url:10");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setVerifyUrls(true);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
    }

    @Test
    public void test08237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08237");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean14 = assetResponse4.equals((java.lang.Object) 100L);
        java.lang.String str15 = assetResponse4.getReferer();
        java.lang.String str16 = assetResponse4.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder17.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder23.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder29.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder29.setVerifyUrls(false);
        boolean boolean34 = assetResponse4.equals((java.lang.Object) builder29);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration35 = builder29.build();
        java.lang.String str36 = crawlerConfiguration35.getOnlyOnPath();
        java.lang.String str37 = crawlerConfiguration35.getNotOnPath();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray38 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet39 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet39, assetResponseArray38);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray41 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet42 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet42, assetResponseArray41);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult44 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet39, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet42);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet45 = assetsVerificationResult44.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet46 = assetsVerificationResult44.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray47 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet48 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet48, assetResponseArray47);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray50 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet51 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet51, assetResponseArray50);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult53 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet48, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet51);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet54 = assetsVerificationResult53.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet55 = assetsVerificationResult53.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray56 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet57 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet57, assetResponseArray56);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray59 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet60 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet60, assetResponseArray59);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult62 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet57, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet60);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult63 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet55, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet57);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray64 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet65 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet65, assetResponseArray64);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray67 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet68 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet68, assetResponseArray67);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult70 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet65, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet68);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet71 = assetsVerificationResult70.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult72 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet55, assetResponseSet71);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult73 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet46, assetResponseSet55);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet74 = assetsVerificationResult73.getWorkingAssets();
        boolean boolean75 = crawlerConfiguration35.equals((java.lang.Object) assetsVerificationResult73);
        boolean boolean76 = crawlerConfiguration35.isVerifyUrls();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100" + "'", str15, "100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "100" + "'", str16, "100");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(crawlerConfiguration35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "urls.txt" + "'", str37, "urls.txt");
        org.junit.Assert.assertNotNull(assetResponseArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(assetResponseArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(assetResponseSet45);
        org.junit.Assert.assertNotNull(assetResponseSet46);
        org.junit.Assert.assertNotNull(assetResponseArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(assetResponseArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(assetResponseSet54);
        org.junit.Assert.assertNotNull(assetResponseSet55);
        org.junit.Assert.assertNotNull(assetResponseArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(assetResponseArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(assetResponseArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(assetResponseArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(assetResponseSet71);
        org.junit.Assert.assertNotNull(assetResponseSet74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test08238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08238");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setNotOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setMaxLevels((int) (byte) -1);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setOnlyOnPath("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setOnlyOnPath("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setStartUrl("Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setOnlyOnPath("AssetResponseCallable url:AssetResponseCallable url:errorassets.csv");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test08239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08239");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder8.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration19 = builder18.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration20 = builder18.build();
        boolean boolean21 = crawlerConfiguration3.equals((java.lang.Object) crawlerConfiguration20);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder22.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration27 = builder22.build();
        int int28 = crawlerConfiguration27.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil29 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean30 = crawlerConfiguration27.equals((java.lang.Object) headerUtil29);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = headerUtil29.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap34 = headerUtil29.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap36 = headerUtil29.createHeadersFromString("AssetResponseCallable url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap38 = headerUtil29.createHeadersFromString("CrawlerURL url:urls.txt");
        java.util.Map<java.lang.String, java.lang.String> strMap40 = headerUtil29.createHeadersFromString("AssetResponseCallable url:100");
        boolean boolean41 = crawlerConfiguration20.equals((java.lang.Object) headerUtil29);
        int int42 = crawlerConfiguration20.getMaxLevels();
        java.lang.String str43 = crawlerConfiguration20.getStartUrl();
        int int44 = crawlerConfiguration20.getMaxLevels();
        java.lang.String str45 = crawlerConfiguration20.getOnlyOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(crawlerConfiguration19);
        org.junit.Assert.assertNotNull(crawlerConfiguration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(crawlerConfiguration27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(headerUtil29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str43, "com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
    }

    @Test
    public void test08240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08240");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:AssetResponseCallable url:Unknown error", "");
        com.soulgalore.crawler.util.HeaderUtil headerUtil4 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil4.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = headerUtil4.createHeadersFromString("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil4.createHeadersFromString("CrawlerURL url:10");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil4.createHeadersFromString("AssetResponseCallable url:errorassets.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil4.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        java.util.Map<java.lang.String, java.lang.String> strMap16 = headerUtil4.createHeadersFromString("CrawlerURL url:Response timed out");
        java.util.Map<java.lang.String, java.lang.String> strMap18 = headerUtil4.createHeadersFromString("CrawlerURL url:100");
        java.util.Map<java.lang.String, java.lang.String> strMap20 = headerUtil4.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt");
        java.util.Map<java.lang.String, java.lang.String> strMap22 = headerUtil4.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Unknown error");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse28 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 582, strMap22, "AssetResponseCallable url:CrawlerURL url:-1", "AssetResponseCallable url:100", 52L, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth", (long) 52);
        java.lang.String str30 = hTMLPageResponse28.getHeaderValue("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertNotNull(headerUtil4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test08241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08241");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher3 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration9 = builder4.build();
        int int10 = crawlerConfiguration9.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil11 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean12 = crawlerConfiguration9.equals((java.lang.Object) headerUtil11);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil11.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap16 = headerUtil11.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable18 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Malformed url", assetFetcher3, strMap16, "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable20 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:97encoding:52 type:CrawlerURL url:com.soulgalore.crawler.auth", assetFetcher1, strMap16, "HTMLPageResponseurl:CrawlerURL url:urls.txtresponseCode:97encoding:CrawlerURL url:com.soulgalore.crawler.proxy type:");
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(crawlerConfiguration9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(headerUtil11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test08242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08242");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet12 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet14 = crawlerResult11.getNonWorkingUrls();
        java.lang.String str15 = crawlerResult11.getTheStartPoint();
        java.lang.String str16 = crawlerResult11.getTheStartPoint();
        java.lang.String str17 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet18 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet19 = crawlerResult11.getUrls();
        java.lang.String str20 = crawlerResult11.getTheStartPoint();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet21 = crawlerResult11.getVerifiedURLResponses();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet12);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet18);
        org.junit.Assert.assertNotNull(crawlerURLSet19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
    }

    @Test
    public void test08243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08243");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        long long15 = hTMLPageResponse12.getFetchTime();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        java.lang.String str17 = hTMLPageResponse12.getUrl();
        java.lang.String str18 = hTMLPageResponse12.getEncoding();
        long long19 = hTMLPageResponse12.getFetchTime();
        java.lang.String str20 = hTMLPageResponse12.toString();
        java.lang.String str21 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder22.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration27 = builder22.build();
        int int28 = crawlerConfiguration27.getMaxLevels();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray29 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet30 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30, assetResponseArray29);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray32 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet33 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33, assetResponseArray32);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult35 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray36 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet37 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37, assetResponseArray36);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray39 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40, assetResponseArray39);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult42 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet43 = assetsVerificationResult42.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult44 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33, assetResponseSet43);
        boolean boolean45 = crawlerConfiguration27.equals((java.lang.Object) assetResponseSet43);
        boolean boolean46 = hTMLPageResponse12.equals((java.lang.Object) boolean45);
        java.lang.String str47 = hTMLPageResponse12.getEncoding();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 100L + "'", long15 == 100L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "com.soulgalore.crawler.auth" + "'", str17, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str18, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 100L + "'", long19 == 100L);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str20, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str21, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(crawlerConfiguration27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(assetResponseArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(assetResponseArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(assetResponseArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(assetResponseArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(assetResponseSet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str47, "com.soulgalore.crawler.http.socket.timeout");
    }

    @Test
    public void test08244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08244");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:Malformed url", "AssetResponseCallable url:AssetResponseCallable url:Malformed url");
    }

    @Test
    public void test08245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08245");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        java.lang.String str18 = crawlerURL17.getUrl();
        java.lang.String str19 = crawlerURL17.getUrl();
        java.lang.String str20 = crawlerURL17.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean25 = crawlerURL24.isWrongSyntax();
        java.lang.String str26 = crawlerURL24.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse34 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL24, (int) 'a', strMap28, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str35 = crawlerURL24.getUrl();
        com.soulgalore.crawler.util.HeaderUtil headerUtil37 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = headerUtil37.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL24, (int) (short) 0, strMap39, "com.soulgalore.crawler.http.socket.timeout", "Malformed url", (long) '4', "Unknown error", (long) (byte) 100);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse51 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL17, 100, strMap39, "AssetResponseCallable url:Malformed url", "", (-1L), "Redirected to new domain", 0L);
        java.lang.String str52 = hTMLPageResponse51.getEncoding();
        java.lang.String str53 = hTMLPageResponse51.getResponseType();
        java.lang.String str54 = hTMLPageResponse51.toString();
        org.jsoup.nodes.Document document55 = hTMLPageResponse51.getBody();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.auth" + "'", str18, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "com.soulgalore.crawler.auth" + "'", str19, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "com.soulgalore.crawler.auth" + "'", str20, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "urls.txt" + "'", str26, "urls.txt");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "com.soulgalore.crawler.auth" + "'", str35, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(headerUtil37);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Redirected to new domain" + "'", str53, "Redirected to new domain");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain" + "'", str54, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain");
        org.junit.Assert.assertNull(document55);
    }

    @Test
    public void test08246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08246");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("HTMLPageResponseurl:hi!responseCode:-1encoding:errorurls.txt type:result.csv", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:100 type:com.soulgalore.crawler.http.socket.timeout", 35, (long) 100);
        int int5 = assetResponse4.getResponseCode();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 35 + "'", int5 == 35);
    }

    @Test
    public void test08247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08247");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration5.getRequestHeadersMap();
        boolean boolean8 = crawlerConfiguration5.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = crawlerConfiguration5.getRequestHeadersMap();
        boolean boolean10 = crawlerConfiguration5.isVerifyUrls();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder11.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder11.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration24 = builder23.build();
        boolean boolean25 = crawlerConfiguration5.equals((java.lang.Object) builder23);
        java.lang.String str26 = crawlerConfiguration5.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(crawlerConfiguration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
    }

    @Test
    public void test08248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08248");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setOnlyOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setOnlyOnPath("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder18.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder18.setMaxLevels(583);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration25 = builder18.build();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(crawlerConfiguration25);
    }

    @Test
    public void test08249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08249");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder0.setStartUrl("result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setMaxLevels((int) (short) 100);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setNotOnPath("CrawlerURL url:urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setOnlyOnPath("AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder10.setRequestHeaders("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test08250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08250");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain", "com.soulgalore.crawler.proxy", (int) (byte) 1, (-1L));
    }

    @Test
    public void test08251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08251");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet12 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult11.getUrls();
        java.lang.String str15 = crawlerResult11.getTheStartPoint();
        java.lang.String str16 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet18 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet19 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet20 = crawlerResult11.getUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet12);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet17);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet18);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet19);
        org.junit.Assert.assertNotNull(crawlerURLSet20);
    }

    @Test
    public void test08252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08252");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet12 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult11.getUrls();
        java.lang.String str17 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet18 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet19 = crawlerResult11.getNonWorkingUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet12);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet18);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet19);
    }

    @Test
    public void test08253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08253");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = crawlerURL2.getUrl();
        com.soulgalore.crawler.util.HeaderUtil headerUtil15 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = headerUtil15.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (short) 0, strMap17, "com.soulgalore.crawler.http.socket.timeout", "Malformed url", (long) '4', "Unknown error", (long) (byte) 100);
        java.lang.String str24 = crawlerURL2.toString();
        java.net.URI uRI25 = crawlerURL2.getUri();
        java.lang.String str26 = crawlerURL2.getHost();
        java.lang.String str27 = crawlerURL2.toString();
        java.lang.String str28 = crawlerURL2.getHost();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(headerUtil15);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str24, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(uRI25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str27, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test08254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08254");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        java.lang.String str20 = hTMLPageResponse18.getHeaderValue("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = hTMLPageResponse18.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = hTMLPageResponse18.getPageUrl();
        java.lang.String str23 = hTMLPageResponse18.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL25 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI26 = crawlerURL25.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean30 = crawlerURL29.isWrongSyntax();
        java.lang.String str31 = crawlerURL29.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse39 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, (int) 'a', strMap33, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str40 = hTMLPageResponse39.getUrl();
        boolean boolean41 = crawlerURL25.equals((java.lang.Object) str40);
        java.net.URI uRI42 = crawlerURL25.getUri();
        boolean boolean43 = hTMLPageResponse18.equals((java.lang.Object) uRI42);
        java.lang.String str45 = hTMLPageResponse18.getHeaderValue("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap46 = hTMLPageResponse18.getResponseHeaders();
        java.lang.String str47 = hTMLPageResponse18.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(crawlerURL21);
        org.junit.Assert.assertNotNull(crawlerURL22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.auth" + "'", str23, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(uRI26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "urls.txt" + "'", str31, "urls.txt");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "com.soulgalore.crawler.auth" + "'", str40, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(uRI42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth" + "'", str47, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
    }

    @Test
    public void test08255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08255");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder4.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration6 = builder4.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setRequestHeaders("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setMaxLevels((int) (short) 10);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertNotNull(crawlerConfiguration6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test08256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08256");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        java.lang.String str2 = crawlerURL1.getUrl();
        boolean boolean3 = crawlerURL1.isWrongSyntax();
        com.soulgalore.crawler.util.HeaderUtil headerUtil5 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = headerUtil5.createHeadersFromString("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse13 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) 10, strMap7, "urls.txt", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (byte) 10, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", (-1L));
        java.lang.String str15 = hTMLPageResponse13.getHeaderValue("CrawlerURL url:1");
        long long16 = hTMLPageResponse13.getFetchTime();
        java.lang.String str17 = hTMLPageResponse13.getEncoding();
        java.lang.String str18 = hTMLPageResponse13.getUrl();
        int int19 = hTMLPageResponse13.getResponseCode();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(headerUtil5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str17, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
    }

    @Test
    public void test08257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08257");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray5 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet6, assetResponseArray5);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray8 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet9, assetResponseArray8);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult11 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet6, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = assetsVerificationResult11.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = assetsVerificationResult11.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet14 = assetsVerificationResult11.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet15 = assetsVerificationResult11.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray16 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet17 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet17, assetResponseArray16);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray19 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet20, assetResponseArray19);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult22 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet17, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet20);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet23 = assetsVerificationResult22.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult24 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet15, assetResponseSet23);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = assetsVerificationResult24.getNonWorkingAssets();
        boolean boolean26 = crawlerURL2.equals((java.lang.Object) assetsVerificationResult24);
        java.lang.String str27 = crawlerURL2.getUrl();
        java.lang.String str28 = crawlerURL2.getUrl();
        java.lang.String str29 = crawlerURL2.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder30.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder30.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration35 = builder30.build();
        java.lang.String str36 = crawlerConfiguration35.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = builder37.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration40 = builder39.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder39.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder44 = builder42.setMaxLevels((int) '4');
        boolean boolean45 = crawlerConfiguration35.equals((java.lang.Object) builder44);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder47 = builder44.setOnlyOnPath("com.soulgalore.crawler.proxy");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder49 = builder47.setNotOnPath("AssetResponseCallable url:CrawlerURL url:10");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder51 = builder49.setNotOnPath("CrawlerURL url:10");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration52 = builder49.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder54 = builder49.setMaxLevels(32);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration55 = builder49.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder57 = builder49.setOnlyOnPath("AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        boolean boolean58 = crawlerURL2.equals((java.lang.Object) "AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNotNull(assetResponseArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(assetResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(assetResponseSet12);
        org.junit.Assert.assertNotNull(assetResponseSet13);
        org.junit.Assert.assertNotNull(assetResponseSet14);
        org.junit.Assert.assertNotNull(assetResponseSet15);
        org.junit.Assert.assertNotNull(assetResponseArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(assetResponseArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(assetResponseSet23);
        org.junit.Assert.assertNotNull(assetResponseSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "com.soulgalore.crawler.auth" + "'", str27, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "com.soulgalore.crawler.auth" + "'", str28, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str29, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(crawlerConfiguration35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(crawlerConfiguration40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(crawlerConfiguration52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(crawlerConfiguration55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test08258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08258");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        int int6 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil7 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean8 = crawlerConfiguration5.equals((java.lang.Object) headerUtil7);
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil7.createHeadersFromString("AssetResponseCallable url:Malformed url");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil7.createHeadersFromString("10");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request headers wrongly configured, missing separator :10");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(headerUtil7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test08259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08259");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("AssetResponseCallable url:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"HTMLPageResponseurl\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
    }

    @Test
    public void test08260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08260");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setOnlyOnPath("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test08261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08261");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        long long16 = hTMLPageResponse12.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean20 = crawlerURL19.isWrongSyntax();
        java.lang.String str21 = crawlerURL19.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL19, (int) 'a', strMap23, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str30 = hTMLPageResponse29.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean32 = hTMLPageResponse29.equals((java.lang.Object) builder31);
        long long33 = hTMLPageResponse29.getFetchTime();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder34.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder34.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder34.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration41 = builder34.build();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = crawlerConfiguration41.getRequestHeadersMap();
        boolean boolean43 = hTMLPageResponse29.equals((java.lang.Object) crawlerConfiguration41);
        boolean boolean44 = hTMLPageResponse12.equals((java.lang.Object) boolean43);
        int int45 = hTMLPageResponse12.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL46 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder47 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder49 = builder47.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration50 = builder49.build();
        java.lang.String str51 = crawlerConfiguration50.getOnlyOnPath();
        boolean boolean52 = crawlerConfiguration50.isVerifyUrls();
        int int53 = crawlerConfiguration50.getMaxLevels();
        int int54 = crawlerConfiguration50.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL57 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean58 = crawlerURL57.isWrongSyntax();
        java.lang.String str59 = crawlerURL57.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap61 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse67 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL57, (int) 'a', strMap61, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str68 = hTMLPageResponse67.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder69 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean70 = hTMLPageResponse67.equals((java.lang.Object) builder69);
        boolean boolean71 = crawlerConfiguration50.equals((java.lang.Object) builder69);
        java.lang.String str72 = crawlerConfiguration50.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap73 = crawlerConfiguration50.getRequestHeadersMap();
        boolean boolean74 = crawlerConfiguration50.isVerifyUrls();
        boolean boolean75 = hTMLPageResponse12.equals((java.lang.Object) crawlerConfiguration50);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "urls.txt" + "'", str21, "urls.txt");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "com.soulgalore.crawler.auth" + "'", str30, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 100L + "'", long33 == 100L);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(crawlerConfiguration41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 97 + "'", int45 == 97);
        org.junit.Assert.assertNotNull(crawlerURL46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(crawlerConfiguration50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "urls.txt" + "'", str59, "urls.txt");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "com.soulgalore.crawler.auth" + "'", str68, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test08262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08262");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray22 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL21 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet23 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet23, crawlerURLArray22);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet25 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray26 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet27 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet27, hTMLPageResponseArray26);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult29 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet23, hTMLPageResponseSet25, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet27);
        java.lang.String str30 = crawlerResult29.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet31 = crawlerResult29.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet32 = crawlerResult29.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL36 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray37 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL36 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet38 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet38, crawlerURLArray37);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet40 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray41 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet42 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet42, hTMLPageResponseArray41);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult44 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet38, hTMLPageResponseSet40, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet42);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet45 = crawlerResult44.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet46 = crawlerResult44.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult47 = new com.soulgalore.crawler.core.CrawlerResult("1", crawlerURLSet17, hTMLPageResponseSet32, hTMLPageResponseSet46);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet48 = crawlerResult47.getUrls();
        java.lang.String str49 = crawlerResult47.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet50 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet51 = crawlerResult47.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet52 = crawlerResult47.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet53 = crawlerResult47.getVerifiedURLResponses();
        java.lang.Class<?> wildcardClass54 = hTMLPageResponseSet53.getClass();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(crawlerURLSet17);
        org.junit.Assert.assertNotNull(crawlerURLArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet31);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet32);
        org.junit.Assert.assertNotNull(crawlerURLArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet45);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet46);
        org.junit.Assert.assertNotNull(crawlerURLSet48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "1" + "'", str49, "1");
        org.junit.Assert.assertNotNull(crawlerURLSet50);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet51);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet52);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test08263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08263");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url", (int) (byte) 100, 0L);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder9.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder9.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder9.setRequestHeaders("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder13.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setRequestHeaders("AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) 'a');
        boolean boolean22 = assetResponse4.equals((java.lang.Object) 'a');
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test08264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08264");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getOnlyOnPath();
        java.lang.String str7 = crawlerConfiguration5.getOnlyOnPath();
        boolean boolean8 = crawlerConfiguration5.isVerifyUrls();
        java.lang.String str9 = crawlerConfiguration5.getStartUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test08265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08265");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        long long16 = hTMLPageResponse12.getFetchTime();
        java.lang.String str17 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.guice.ExecutorServiceProvider executorServiceProvider20 = new com.soulgalore.crawler.guice.ExecutorServiceProvider((int) ' ');
        java.util.concurrent.ExecutorService executorService21 = executorServiceProvider20.get();
        java.util.concurrent.ExecutorService executorService22 = executorServiceProvider20.get();
        boolean boolean23 = hTMLPageResponse12.equals((java.lang.Object) executorServiceProvider20);
        java.lang.String str24 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL25 = hTMLPageResponse12.getPageUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str17, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertNotNull(executorService21);
        org.junit.Assert.assertNotNull(executorService22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "com.soulgalore.crawler.auth" + "'", str24, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL25);
    }

    @Test
    public void test08266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08266");
        com.soulgalore.crawler.util.HeaderUtil headerUtil0 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = headerUtil0.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap4 = headerUtil0.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil0.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = headerUtil0.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil0.createHeadersFromString("CrawlerURL url:10");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil0.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:");
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil0.createHeadersFromString("CrawlerURL url:Wrong content type");
        java.util.Map<java.lang.String, java.lang.String> strMap16 = headerUtil0.createHeadersFromString("HTMLPageResponseurl:result.csvresponseCode:-1encoding:AssetResponseCallable url:Wrong content type type:CrawlerURL url:errorassets.csv");
        org.junit.Assert.assertNotNull(headerUtil0);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test08267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08267");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        boolean boolean22 = hTMLPageResponse12.equals((java.lang.Object) builder21);
        java.lang.String str23 = hTMLPageResponse12.getResponseType();
        int int24 = hTMLPageResponse12.getResponseCode();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 97 + "'", int24 == 97);
    }

    @Test
    public void test08268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08268");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet12 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet16 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet18 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet19 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet20 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet21 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet22 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet23 = crawlerResult11.getUrls();
        java.lang.Class<?> wildcardClass24 = crawlerResult11.getClass();
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet12);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet16);
        org.junit.Assert.assertNotNull(crawlerURLSet17);
        org.junit.Assert.assertNotNull(crawlerURLSet18);
        org.junit.Assert.assertNotNull(crawlerURLSet19);
        org.junit.Assert.assertNotNull(crawlerURLSet20);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet21);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet22);
        org.junit.Assert.assertNotNull(crawlerURLSet23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test08269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08269");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL15 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder17.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder25.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder25.setMaxLevels(10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder25.setOnlyOnPath("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder31.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = builder31.setNotOnPath("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = builder35.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = builder37.setVerifyUrls(false);
        boolean boolean40 = hTMLPageResponse12.equals((java.lang.Object) false);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL41 = hTMLPageResponse12.getPageUrl();
        java.lang.String str42 = hTMLPageResponse12.getEncoding();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(crawlerURL15);
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(crawlerURL41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str42, "com.soulgalore.crawler.http.socket.timeout");
    }

    @Test
    public void test08270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08270");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setMaxLevels((int) '4');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setMaxLevels(583);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setOnlyOnPath("Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setNotOnPath("Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder8.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder8.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder15.setNotOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:308encoding:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:32encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url type:com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
    }

    @Test
    public void test08271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08271");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads", "");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder14.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration16 = builder14.build();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration16.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 52, strMap17, "CrawlerURL url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", (long) 52, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:97encoding:52 type:CrawlerURL url:com.soulgalore.crawler.auth", (long) 32);
        java.lang.String str24 = crawlerURL2.getHost();
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertNotNull(crawlerConfiguration16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test08272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08272");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        java.lang.String str3 = crawlerURL1.getUrl();
        java.lang.String str4 = crawlerURL1.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder5.setNotOnPath("AssetResponseCallable url:errorassets.csv");
        boolean boolean12 = crawlerURL1.equals((java.lang.Object) builder11);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder11.setMaxLevels(1);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setMaxLevels((int) (byte) 100);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder16.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder20.setVerifyUrls(false);
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str3, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str4, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test08273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08273");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int19 = hTMLPageResponse18.getResponseCode();
        long long20 = hTMLPageResponse18.getFetchTime();
        long long21 = hTMLPageResponse18.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI25 = crawlerURL24.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean30 = crawlerURL29.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder32.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration37 = builder32.build();
        java.lang.String str38 = crawlerConfiguration37.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = crawlerConfiguration37.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, (-1), strMap39, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse51 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL24, 100, strMap39, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        boolean boolean52 = hTMLPageResponse18.equals((java.lang.Object) 100);
        org.jsoup.nodes.Document document53 = hTMLPageResponse18.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL54 = hTMLPageResponse18.getPageUrl();
        java.lang.String str56 = hTMLPageResponse18.getHeaderValue("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        int int57 = hTMLPageResponse18.getResponseCode();
        java.lang.String str58 = hTMLPageResponse18.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap59 = hTMLPageResponse18.getResponseHeaders();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 580L + "'", long20 == 580L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 580L + "'", long21 == 580L);
        org.junit.Assert.assertNull(uRI25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(crawlerConfiguration37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(document53);
        org.junit.Assert.assertNotNull(crawlerURL54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "errorurls.txt" + "'", str58, "errorurls.txt");
        org.junit.Assert.assertNotNull(strMap59);
    }

    @Test
    public void test08274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08274");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider((int) (byte) 100, 583, (int) (byte) 1, "HTMLPageResponseurl:CrawlerURL url:urls.txtresponseCode:97encoding:CrawlerURL url:com.soulgalore.crawler.proxy type:", "CrawlerURL url:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"CrawlerURL url\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08275");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        int int6 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray7 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet8, assetResponseArray7);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray10 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet11 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet11, assetResponseArray10);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult13 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet8, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet11);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray14 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet15 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15, assetResponseArray14);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray17 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, assetResponseArray17);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult20 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet21 = assetsVerificationResult20.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult22 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet11, assetResponseSet21);
        boolean boolean23 = crawlerConfiguration5.equals((java.lang.Object) assetResponseSet21);
        int int24 = crawlerConfiguration5.getMaxLevels();
        java.lang.String str25 = crawlerConfiguration5.getStartUrl();
        java.lang.String str26 = crawlerConfiguration5.getOnlyOnPath();
        java.lang.String str27 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str28 = crawlerConfiguration5.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(assetResponseArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(assetResponseArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(assetResponseArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(assetResponseArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(assetResponseSet21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
    }

    @Test
    public void test08276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08276");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("", "CrawlerURL url:CrawlerURL url:1");
    }

    @Test
    public void test08277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08277");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder2.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setNotOnPath("AssetResponseCallable url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration8 = builder7.build();
        java.lang.String str9 = crawlerConfiguration8.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = crawlerConfiguration8.getRequestHeadersMap();
        java.lang.String str11 = crawlerConfiguration8.getRequestHeaders();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(crawlerConfiguration8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test08278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08278");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet12 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet14 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet16 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet18 = crawlerResult11.getNonWorkingUrls();
        java.lang.String str19 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet20 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet21 = crawlerResult11.getNonWorkingUrls();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet22 = crawlerResult11.getVerifiedURLResponses();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet12);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet16);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet17);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet20);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet21);
    }

    @Test
    public void test08279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08279");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("result.csv");
        java.net.URI uRI2 = crawlerURL1.getUri();
        java.lang.String str3 = crawlerURL1.getReferer();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI7 = crawlerURL6.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL10 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean11 = crawlerURL10.isWrongSyntax();
        java.lang.String str12 = crawlerURL10.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse20 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL10, (int) 'a', strMap14, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str21 = hTMLPageResponse20.getUrl();
        boolean boolean22 = crawlerURL6.equals((java.lang.Object) str21);
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse27 = new com.soulgalore.crawler.core.assets.AssetResponse("", "errorurls.txt", 97, (-1L));
        java.lang.String str28 = assetResponse27.getReferer();
        int int29 = assetResponse27.getResponseCode();
        boolean boolean30 = crawlerURL6.equals((java.lang.Object) int29);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL34 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI35 = crawlerURL34.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = builder37.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration40 = builder39.build();
        java.lang.String str41 = crawlerConfiguration40.getStartUrl();
        int int42 = crawlerConfiguration40.getMaxLevels();
        int int43 = crawlerConfiguration40.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = crawlerConfiguration40.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse50 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL34, (int) (short) 10, strMap44, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int51 = hTMLPageResponse50.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap52 = hTMLPageResponse50.getResponseHeaders();
        java.lang.String str54 = hTMLPageResponse50.getHeaderValue("");
        java.util.Map<java.lang.String, java.lang.String> strMap55 = hTMLPageResponse50.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse61 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL6, 100, strMap55, "52", "HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", (long) (short) 0, "", (long) 582);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse67 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) 0, strMap55, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url", "com.soulgalore.crawler.http.connection.timeout", 583L, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", (long) '#');
        java.lang.String str68 = hTMLPageResponse67.getEncoding();
        java.lang.String str69 = hTMLPageResponse67.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap70 = hTMLPageResponse67.getResponseHeaders();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(uRI7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "urls.txt" + "'", str12, "urls.txt");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "com.soulgalore.crawler.auth" + "'", str21, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "errorurls.txt" + "'", str28, "errorurls.txt");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 97 + "'", int29 == 97);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(uRI35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(crawlerConfiguration40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 10 + "'", int51 == 10);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str68, "com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str69, "com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertNotNull(strMap70);
    }

    @Test
    public void test08280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08280");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.lang.String str13 = crawlerResult12.getTheStartPoint();
        java.lang.String str14 = crawlerResult12.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray21 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL20 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet22, crawlerURLArray21);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet24 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray25 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet26, hTMLPageResponseArray25);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult28 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet22, hTMLPageResponseSet24, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet26);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet29 = crawlerResult28.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet30 = crawlerResult28.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet31 = crawlerResult28.getUrls();
        java.lang.String str32 = crawlerResult28.getTheStartPoint();
        java.lang.String str33 = crawlerResult28.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet34 = crawlerResult28.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet35 = crawlerResult28.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray40 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL39 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, crawlerURLArray40);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray44 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet45 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45, hTMLPageResponseArray44);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult47 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, hTMLPageResponseSet43, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet48 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet49 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet50 = crawlerResult47.getNonWorkingUrls();
        java.lang.String str51 = crawlerResult47.getTheStartPoint();
        java.lang.String str52 = crawlerResult47.getTheStartPoint();
        java.lang.String str53 = crawlerResult47.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet54 = crawlerResult47.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult55 = new com.soulgalore.crawler.core.CrawlerResult("errorassets.csv", crawlerURLSet16, hTMLPageResponseSet35, hTMLPageResponseSet54);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet56 = crawlerResult55.getNonWorkingUrls();
        java.lang.String str57 = crawlerResult55.getTheStartPoint();
        java.lang.String str58 = crawlerResult55.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet59 = crawlerResult55.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet60 = crawlerResult55.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet61 = crawlerResult55.getUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(crawlerURLArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet29);
        org.junit.Assert.assertNotNull(crawlerURLSet30);
        org.junit.Assert.assertNotNull(crawlerURLSet31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet34);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet35);
        org.junit.Assert.assertNotNull(crawlerURLArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet48);
        org.junit.Assert.assertNotNull(crawlerURLSet49);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet54);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "errorassets.csv" + "'", str57, "errorassets.csv");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "errorassets.csv" + "'", str58, "errorassets.csv");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet59);
        org.junit.Assert.assertNotNull(crawlerURLSet60);
        org.junit.Assert.assertNotNull(crawlerURLSet61);
    }

    @Test
    public void test08281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08281");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        int int6 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil7 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean8 = crawlerConfiguration5.equals((java.lang.Object) headerUtil7);
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil7.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil7.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil7.createHeadersFromString("AssetResponseCallable url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap16 = headerUtil7.createHeadersFromString("CrawlerURL url:urls.txt");
        java.util.Map<java.lang.String, java.lang.String> strMap18 = headerUtil7.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout");
        java.util.Map<java.lang.String, java.lang.String> strMap20 = headerUtil7.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap22 = headerUtil7.createHeadersFromString("AssetResponseCallable url:Wrong content type");
        java.util.Map<java.lang.String, java.lang.String> strMap24 = headerUtil7.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.util.Map<java.lang.String, java.lang.String> strMap26 = headerUtil7.createHeadersFromString("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
        java.lang.Class<?> wildcardClass27 = headerUtil7.getClass();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(headerUtil7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test08282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08282");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        java.lang.String str20 = hTMLPageResponse18.getHeaderValue("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = hTMLPageResponse18.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = hTMLPageResponse18.getPageUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder23.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder23.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder29.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder29.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration34 = builder33.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration35 = builder33.build();
        boolean boolean36 = hTMLPageResponse18.equals((java.lang.Object) builder33);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder33.setOnlyOnPath("result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder33.setRequestHeaders("AssetResponseCallable url:errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration41 = builder33.build();
        java.lang.String str42 = crawlerConfiguration41.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = crawlerConfiguration41.getRequestHeadersMap();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(crawlerURL21);
        org.junit.Assert.assertNotNull(crawlerURL22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(crawlerConfiguration34);
        org.junit.Assert.assertNotNull(crawlerConfiguration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(crawlerConfiguration41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AssetResponseCallable url:errorassets.csv" + "'", str42, "AssetResponseCallable url:errorassets.csv");
        org.junit.Assert.assertNotNull(strMap43);
    }

    @Test
    public void test08283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08283");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("32", "AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout", (int) ' ', (-1L));
        long long5 = assetResponse4.getFetchTime();
        java.lang.String str6 = assetResponse4.getReferer();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout" + "'", str6, "AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
    }

    @Test
    public void test08284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08284");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean14 = assetResponse4.equals((java.lang.Object) 100L);
        java.lang.String str15 = assetResponse4.getReferer();
        java.lang.String str16 = assetResponse4.getReferer();
        boolean boolean18 = assetResponse4.equals((java.lang.Object) "com.soulgalore.crawler.proxy");
        int int19 = assetResponse4.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean23 = crawlerURL22.isWrongSyntax();
        java.lang.String str24 = crawlerURL22.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse32 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL22, (int) 'a', strMap26, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int33 = hTMLPageResponse32.getResponseCode();
        java.lang.String str34 = hTMLPageResponse32.getResponseType();
        java.lang.String str35 = hTMLPageResponse32.toString();
        java.lang.String str36 = hTMLPageResponse32.getUrl();
        java.lang.String str37 = hTMLPageResponse32.toString();
        boolean boolean38 = assetResponse4.equals((java.lang.Object) hTMLPageResponse32);
        int int39 = hTMLPageResponse32.getResponseCode();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder40.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder44 = builder40.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder46 = builder44.setStartUrl("-1");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration47 = builder46.build();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = crawlerConfiguration47.getRequestHeadersMap();
        java.lang.String str49 = crawlerConfiguration47.getRequestHeaders();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder50 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder52 = builder50.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder54 = builder50.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration55 = builder50.build();
        java.lang.String str56 = crawlerConfiguration55.getRequestHeaders();
        java.lang.String str57 = crawlerConfiguration55.getRequestHeaders();
        boolean boolean59 = crawlerConfiguration55.equals((java.lang.Object) 0.0d);
        java.lang.String str60 = crawlerConfiguration55.getOnlyOnPath();
        int int61 = crawlerConfiguration55.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder62 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder64 = builder62.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder66 = builder62.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder68 = builder62.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder70 = builder68.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder72 = builder68.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder74 = builder72.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder76 = builder74.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder78 = builder76.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder80 = builder78.setStartUrl("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder82 = builder80.setStartUrl("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration83 = builder80.build();
        boolean boolean84 = crawlerConfiguration55.equals((java.lang.Object) crawlerConfiguration83);
        java.lang.String str85 = crawlerConfiguration55.getOnlyOnPath();
        java.lang.String str86 = crawlerConfiguration55.getRequestHeaders();
        boolean boolean87 = crawlerConfiguration47.equals((java.lang.Object) crawlerConfiguration55);
        java.util.Map<java.lang.String, java.lang.String> strMap88 = crawlerConfiguration47.getRequestHeadersMap();
        boolean boolean89 = hTMLPageResponse32.equals((java.lang.Object) strMap88);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100" + "'", str15, "100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "100" + "'", str16, "100");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "urls.txt" + "'", str24, "urls.txt");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 97 + "'", int33 == 97);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str35, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "com.soulgalore.crawler.auth" + "'", str36, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str37, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 97 + "'", int39 == 97);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(crawlerConfiguration47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(crawlerConfiguration55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(crawlerConfiguration83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test08285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08285");
        com.soulgalore.crawler.util.StatusCode statusCode0 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT;
        int int1 = statusCode0.getCode();
        int int2 = statusCode0.getCode();
        java.lang.String str3 = statusCode0.getFriendlyName();
        int int4 = statusCode0.getCode();
        java.lang.String str5 = statusCode0.getFriendlyName();
        java.lang.String str6 = statusCode0.getFriendlyName();
        java.lang.String str7 = statusCode0.getFriendlyName();
        java.lang.String str8 = statusCode0.getFriendlyName();
        org.junit.Assert.assertTrue("'" + statusCode0 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT + "'", statusCode0.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 580 + "'", int1 == 580);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 580 + "'", int2 == 580);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Response timed out" + "'", str3, "Response timed out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 580 + "'", int4 == 580);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Response timed out" + "'", str5, "Response timed out");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Response timed out" + "'", str6, "Response timed out");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Response timed out" + "'", str7, "Response timed out");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Response timed out" + "'", str8, "Response timed out");
    }

    @Test
    public void test08286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08286");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        long long6 = assetResponse4.getFetchTime();
        java.lang.String str7 = assetResponse4.getUrl();
        java.lang.String str8 = assetResponse4.getReferer();
        java.lang.String str9 = assetResponse4.getReferer();
        long long10 = assetResponse4.getFetchTime();
        java.lang.String str11 = assetResponse4.getUrl();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "100" + "'", str8, "100");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "100" + "'", str9, "100");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test08287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08287");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder4.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder4.setMaxLevels(308);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration14 = builder4.build();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(crawlerConfiguration14);
    }

    @Test
    public void test08288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08288");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setMaxLevels((int) (byte) 10);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder12.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder12.setRequestHeaders("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder12.setRequestHeaders("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
    }

    @Test
    public void test08289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08289");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        long long14 = hTMLPageResponse12.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL15 = hTMLPageResponse12.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str17 = hTMLPageResponse12.getResponseType();
        java.lang.String str18 = hTMLPageResponse12.getUrl();
        org.jsoup.nodes.Document document19 = hTMLPageResponse12.getBody();
        int int20 = hTMLPageResponse12.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str22 = hTMLPageResponse12.getResponseType();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL23 = hTMLPageResponse12.getPageUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 100L + "'", long14 == 100L);
        org.junit.Assert.assertNotNull(crawlerURL15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.auth" + "'", str18, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 97 + "'", int20 == 97);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(crawlerURL23);
    }

    @Test
    public void test08290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08290");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:CrawlerURL url:urls.txt", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:52 type:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", 0, (long) 100);
    }

    @Test
    public void test08291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08291");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        com.soulgalore.crawler.util.StatusCode statusCode6 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN;
        boolean boolean7 = crawlerConfiguration3.equals((java.lang.Object) statusCode6);
        int int8 = crawlerConfiguration3.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = crawlerConfiguration3.getRequestHeadersMap();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + statusCode6 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN + "'", statusCode6.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(strMap9);
    }

    @Test
    public void test08292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08292");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = crawlerURL2.getUrl();
        com.soulgalore.crawler.util.HeaderUtil headerUtil15 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = headerUtil15.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (short) 0, strMap17, "com.soulgalore.crawler.http.socket.timeout", "Malformed url", (long) '4', "Unknown error", (long) (byte) 100);
        boolean boolean24 = crawlerURL2.isWrongSyntax();
        java.lang.String str25 = crawlerURL2.getHost();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(headerUtil15);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test08293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08293");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        long long6 = assetResponse4.getFetchTime();
        java.lang.String str7 = assetResponse4.getUrl();
        int int8 = assetResponse4.getResponseCode();
        java.lang.String str9 = assetResponse4.getReferer();
        java.lang.String str10 = assetResponse4.getReferer();
        java.lang.String str11 = assetResponse4.getReferer();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "100" + "'", str9, "100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "100" + "'", str10, "100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "100" + "'", str11, "100");
    }

    @Test
    public void test08294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08294");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet4 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet6 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet8 = authUtil0.createAuthsFromString("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet10 = authUtil0.createAuthsFromString("CrawlerURL url:AssetResponseCallable url:com.soulgalore.crawler.nrofhttpthreads");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:CrawlerURL url:AssetResponseCallable url:com.soulgalore.crawler.nrofhttpthreads");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
        org.junit.Assert.assertNotNull(authSet2);
        org.junit.Assert.assertNotNull(authSet4);
        org.junit.Assert.assertNotNull(authSet6);
        org.junit.Assert.assertNotNull(authSet8);
    }

    @Test
    public void test08295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08295");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt", "CrawlerURL url:com.soulgalore.crawler.proxy");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder6.build();
        int int12 = crawlerConfiguration11.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil13 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean14 = crawlerConfiguration11.equals((java.lang.Object) headerUtil13);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = headerUtil13.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap18 = headerUtil13.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse24 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL4, (-1), strMap18, "CrawlerURL url:hi!", "HTMLPageResponseurl:Wrong content typeresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads type:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url", (long) 'a', "Unknown error", 52L);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable26 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:CrawlerURL url:100", assetFetcher1, strMap18, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(headerUtil13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test08296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08296");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        int int6 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str8 = crawlerConfiguration3.getRequestHeaders();
        java.lang.String str9 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean10 = crawlerConfiguration3.isVerifyUrls();
        int int11 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str12 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str14 = crawlerConfiguration3.getRequestHeaders();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test08297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08297");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = assetsVerificationResult6.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray11 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, assetResponseArray11);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray14 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet15 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15, assetResponseArray14);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult17 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = assetsVerificationResult17.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet19 = assetsVerificationResult17.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray20 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet21 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21, assetResponseArray20);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray23 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet24, assetResponseArray23);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult26 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet24);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult27 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet19, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult28 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet10, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray29 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet30 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30, assetResponseArray29);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray32 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet33 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33, assetResponseArray32);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult35 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet36 = assetsVerificationResult35.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet37 = assetsVerificationResult35.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet38 = assetsVerificationResult35.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet39 = assetsVerificationResult35.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult40 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21, assetResponseSet39);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet41 = null;
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult42 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet39, assetResponseSet41);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet43 = assetsVerificationResult42.getWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseSet9);
        org.junit.Assert.assertNotNull(assetResponseSet10);
        org.junit.Assert.assertNotNull(assetResponseArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(assetResponseArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(assetResponseSet18);
        org.junit.Assert.assertNotNull(assetResponseSet19);
        org.junit.Assert.assertNotNull(assetResponseArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(assetResponseArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(assetResponseArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(assetResponseArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(assetResponseSet36);
        org.junit.Assert.assertNotNull(assetResponseSet37);
        org.junit.Assert.assertNotNull(assetResponseSet38);
        org.junit.Assert.assertNotNull(assetResponseSet39);
        org.junit.Assert.assertNotNull(assetResponseSet43);
    }

    @Test
    public void test08298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08298");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        int int6 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil7 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean8 = crawlerConfiguration5.equals((java.lang.Object) headerUtil7);
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil7.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil7.createHeadersFromString("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil7.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:32encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:AssetResponseCallable url:-1");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(headerUtil7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
    }

    @Test
    public void test08299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08299");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean14 = assetResponse4.equals((java.lang.Object) 100L);
        java.lang.String str15 = assetResponse4.getReferer();
        java.lang.String str16 = assetResponse4.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder17.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder23.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder29.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder29.setVerifyUrls(false);
        boolean boolean34 = assetResponse4.equals((java.lang.Object) builder29);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration35 = builder29.build();
        java.lang.String str36 = crawlerConfiguration35.getOnlyOnPath();
        java.lang.String str37 = crawlerConfiguration35.getNotOnPath();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray38 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet39 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet39, assetResponseArray38);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray41 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet42 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet42, assetResponseArray41);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult44 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet39, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet42);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet45 = assetsVerificationResult44.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet46 = assetsVerificationResult44.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray47 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet48 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet48, assetResponseArray47);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray50 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet51 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet51, assetResponseArray50);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult53 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet48, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet51);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet54 = assetsVerificationResult53.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet55 = assetsVerificationResult53.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray56 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet57 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet57, assetResponseArray56);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray59 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet60 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet60, assetResponseArray59);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult62 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet57, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet60);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult63 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet55, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet57);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray64 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet65 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet65, assetResponseArray64);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray67 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet68 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet68, assetResponseArray67);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult70 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet65, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet68);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet71 = assetsVerificationResult70.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult72 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet55, assetResponseSet71);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult73 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet46, assetResponseSet55);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet74 = assetsVerificationResult73.getWorkingAssets();
        boolean boolean75 = crawlerConfiguration35.equals((java.lang.Object) assetsVerificationResult73);
        java.util.Map<java.lang.String, java.lang.String> strMap76 = crawlerConfiguration35.getRequestHeadersMap();
        boolean boolean77 = crawlerConfiguration35.isVerifyUrls();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100" + "'", str15, "100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "100" + "'", str16, "100");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(crawlerConfiguration35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "urls.txt" + "'", str37, "urls.txt");
        org.junit.Assert.assertNotNull(assetResponseArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(assetResponseArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(assetResponseSet45);
        org.junit.Assert.assertNotNull(assetResponseSet46);
        org.junit.Assert.assertNotNull(assetResponseArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(assetResponseArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(assetResponseSet54);
        org.junit.Assert.assertNotNull(assetResponseSet55);
        org.junit.Assert.assertNotNull(assetResponseArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(assetResponseArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(assetResponseArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(assetResponseArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(assetResponseSet71);
        org.junit.Assert.assertNotNull(assetResponseSet74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test08300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08300");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        java.lang.String str2 = crawlerURL1.toString();
        java.net.URI uRI3 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("result.csv", "Malformed url");
        java.net.URI uRI8 = crawlerURL7.getUri();
        java.lang.Object obj9 = null;
        boolean boolean10 = crawlerURL7.equals(obj9);
        java.lang.String str11 = crawlerURL7.getReferer();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI15 = crawlerURL14.getUri();
        boolean boolean16 = crawlerURL14.isWrongSyntax();
        java.lang.String str17 = crawlerURL14.getHost();
        java.net.URI uRI18 = crawlerURL14.getUri();
        java.net.URI uRI19 = crawlerURL14.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL23 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI24 = crawlerURL23.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder26.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration29 = builder28.build();
        java.lang.String str30 = crawlerConfiguration29.getStartUrl();
        int int31 = crawlerConfiguration29.getMaxLevels();
        int int32 = crawlerConfiguration29.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = crawlerConfiguration29.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse39 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL23, (int) (short) 10, strMap33, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int40 = hTMLPageResponse39.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = hTMLPageResponse39.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse47 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL14, 0, strMap41, "CrawlerURL url:result.csv", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) 583, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (byte) 1);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse53 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (int) (byte) -1, strMap41, "AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", "AssetResponseCallable url:Wrong content type", 0L, "CrawlerURL url:errorassets.csv", (long) (-1));
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse59 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 0, strMap41, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) (short) 10, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:32encoding:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) (short) 0);
        java.util.Map<java.lang.String, java.lang.String> strMap61 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse67 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 1, strMap61, "CrawlerURL url:CrawlerURL url:1", "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:-1encoding:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads type:AssetResponseCallable url:errorassets.csv", 52L, "CrawlerURL url:CrawlerURL url:com.soulgalore.crawler.auth", 582L);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "CrawlerURL url:hi!" + "'", str2, "CrawlerURL url:hi!");
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertNull(uRI8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Malformed url" + "'", str11, "Malformed url");
        org.junit.Assert.assertNull(uRI15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(uRI18);
        org.junit.Assert.assertNull(uRI19);
        org.junit.Assert.assertNull(uRI24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(crawlerConfiguration29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertNotNull(strMap41);
    }

    @Test
    public void test08301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08301");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder6.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder6.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder6.build();
        java.lang.String str12 = crawlerConfiguration11.getRequestHeaders();
        boolean boolean13 = crawlerConfiguration11.isVerifyUrls();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test08302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08302");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:100 type:com.soulgalore.crawler.http.socket.timeout type:Unknown error");
    }

    @Test
    public void test08303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08303");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder2.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder2.build();
        int int8 = crawlerConfiguration7.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil9 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean10 = crawlerConfiguration7.equals((java.lang.Object) headerUtil9);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil9.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil9.createHeadersFromString("CrawlerURL url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap16 = headerUtil9.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap18 = headerUtil9.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap20 = headerUtil9.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap22 = headerUtil9.createHeadersFromString("CrawlerURL url:35");
        java.util.Map<java.lang.String, java.lang.String> strMap24 = headerUtil9.createHeadersFromString("AssetResponseCallable url:Wrong content type");
        java.util.Map<java.lang.String, java.lang.String> strMap26 = headerUtil9.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads type:-1");
        java.util.Map<java.lang.String, java.lang.String> strMap28 = headerUtil9.createHeadersFromString("CrawlerURL url:1");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable30 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:1", assetFetcher1, strMap28, "");
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(headerUtil9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap28);
    }

    @Test
    public void test08304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08304");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.util.Map<java.lang.String, java.lang.String> strMap30 = hTMLPageResponse29.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean34 = crawlerURL33.isWrongSyntax();
        java.lang.String str35 = crawlerURL33.getReferer();
        java.lang.String str36 = crawlerURL33.getHost();
        java.lang.String str37 = crawlerURL33.getUrl();
        boolean boolean38 = hTMLPageResponse29.equals((java.lang.Object) crawlerURL33);
        java.lang.String str39 = hTMLPageResponse29.getUrl();
        java.lang.String str40 = hTMLPageResponse29.getUrl();
        org.jsoup.nodes.Document document41 = hTMLPageResponse29.getBody();
        java.lang.String str42 = hTMLPageResponse29.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL43 = hTMLPageResponse29.getPageUrl();
        java.lang.String str44 = crawlerURL43.getHost();
        java.net.URI uRI45 = crawlerURL43.getUri();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "urls.txt" + "'", str35, "urls.txt");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "com.soulgalore.crawler.auth" + "'", str37, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "com.soulgalore.crawler.auth" + "'", str39, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "com.soulgalore.crawler.auth" + "'", str40, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Malformed url" + "'", str42, "Malformed url");
        org.junit.Assert.assertNotNull(crawlerURL43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(uRI45);
    }

    @Test
    public void test08305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08305");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = null;
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray11 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, assetResponseArray11);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray14 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet15 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15, assetResponseArray14);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult17 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = assetsVerificationResult17.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray19 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet20, assetResponseArray19);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray22 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet23 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23, assetResponseArray22);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult25 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet20, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult26 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet18, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult27 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet10, assetResponseSet18);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult28 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet9, assetResponseSet18);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = assetsVerificationResult28.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray30 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet31 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet31, assetResponseArray30);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray33 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet34 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet34, assetResponseArray33);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult36 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet31, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet34);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet37 = assetsVerificationResult36.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet38 = assetsVerificationResult36.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet39 = assetsVerificationResult36.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult40 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet29, assetResponseSet39);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet41 = assetsVerificationResult40.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet42 = assetsVerificationResult40.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet43 = assetsVerificationResult40.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet44 = assetsVerificationResult40.getWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseSet9);
        org.junit.Assert.assertNotNull(assetResponseArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(assetResponseArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(assetResponseSet18);
        org.junit.Assert.assertNotNull(assetResponseArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(assetResponseArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(assetResponseSet29);
        org.junit.Assert.assertNotNull(assetResponseArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(assetResponseArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(assetResponseSet37);
        org.junit.Assert.assertNotNull(assetResponseSet38);
        org.junit.Assert.assertNotNull(assetResponseSet39);
        org.junit.Assert.assertNotNull(assetResponseSet41);
        org.junit.Assert.assertNotNull(assetResponseSet42);
        org.junit.Assert.assertNotNull(assetResponseSet43);
        org.junit.Assert.assertNotNull(assetResponseSet44);
    }

    @Test
    public void test08306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08306");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.net.URI uRI3 = crawlerURL2.getUri();
        java.lang.String str4 = crawlerURL2.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI9 = crawlerURL8.getUri();
        java.lang.String str10 = crawlerURL8.getReferer();
        java.lang.String str11 = crawlerURL8.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration16 = builder15.build();
        java.lang.String str17 = crawlerConfiguration16.getStartUrl();
        int int18 = crawlerConfiguration16.getMaxLevels();
        int int19 = crawlerConfiguration16.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = crawlerConfiguration16.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse26 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, (int) (byte) -1, strMap20, "100", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) (short) -1, "com.soulgalore.crawler.nrofhttpthreads", 0L);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse32 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 0, strMap20, "0", "", 35L, "AssetResponseCallable url:result.csv", 581L);
        java.lang.String str33 = hTMLPageResponse32.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL36 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI37 = crawlerURL36.getUri();
        java.lang.String str38 = crawlerURL36.getReferer();
        java.lang.String str39 = crawlerURL36.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder41 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder43 = builder41.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration44 = builder43.build();
        java.lang.String str45 = crawlerConfiguration44.getStartUrl();
        int int46 = crawlerConfiguration44.getMaxLevels();
        int int47 = crawlerConfiguration44.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = crawlerConfiguration44.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse54 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL36, (int) (byte) -1, strMap48, "100", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) (short) -1, "com.soulgalore.crawler.nrofhttpthreads", 0L);
        org.jsoup.nodes.Document document55 = hTMLPageResponse54.getBody();
        int int56 = hTMLPageResponse54.getResponseCode();
        java.lang.String str57 = hTMLPageResponse54.getUrl();
        java.lang.String str58 = hTMLPageResponse54.getUrl();
        long long59 = hTMLPageResponse54.getFetchTime();
        boolean boolean60 = hTMLPageResponse32.equals((java.lang.Object) long59);
        org.jsoup.nodes.Document document61 = hTMLPageResponse32.getBody();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CrawlerURL url:urls.txt" + "'", str4, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertNull(uRI9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "urls.txt" + "'", str10, "urls.txt");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "urls.txt" + "'", str11, "urls.txt");
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(crawlerConfiguration16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "urls.txt" + "'", str33, "urls.txt");
        org.junit.Assert.assertNull(uRI37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "urls.txt" + "'", str38, "urls.txt");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "urls.txt" + "'", str39, "urls.txt");
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(crawlerConfiguration44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(document55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "com.soulgalore.crawler.auth" + "'", str57, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "com.soulgalore.crawler.auth" + "'", str58, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(document61);
    }

    @Test
    public void test08307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08307");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getNotOnPath();
        int int7 = crawlerConfiguration5.getMaxLevels();
        boolean boolean8 = crawlerConfiguration5.isVerifyUrls();
        java.lang.String str9 = crawlerConfiguration5.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = crawlerConfiguration5.getRequestHeadersMap();
        boolean boolean12 = crawlerConfiguration5.equals((java.lang.Object) "AssetResponseCallable url:Wrong content type");
        java.lang.String str13 = crawlerConfiguration5.getStartUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test08308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08308");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder13.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder13.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setVerifyUrls(false);
        boolean boolean26 = hTMLPageResponse12.equals((java.lang.Object) builder25);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder25.setOnlyOnPath("HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder28.setNotOnPath("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration31 = builder28.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder28.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = builder28.setMaxLevels(581);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(crawlerConfiguration31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
    }

    @Test
    public void test08309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08309");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "1", (int) (short) 10, (long) '#');
        int int5 = assetResponse4.getResponseCode();
        long long6 = assetResponse4.getFetchTime();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 35L + "'", long6 == 35L);
    }

    @Test
    public void test08310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08310");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:0");
    }

    @Test
    public void test08311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08311");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder3 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder3.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration6 = builder5.build();
        java.lang.String str7 = crawlerConfiguration6.getStartUrl();
        int int8 = crawlerConfiguration6.getMaxLevels();
        int int9 = crawlerConfiguration6.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean13 = crawlerURL12.isWrongSyntax();
        java.lang.String str14 = crawlerURL12.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse22 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL12, (int) 'a', strMap16, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str23 = hTMLPageResponse22.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = hTMLPageResponse22.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = hTMLPageResponse22.getResponseHeaders();
        java.lang.String str26 = hTMLPageResponse22.getUrl();
        org.jsoup.nodes.Document document27 = hTMLPageResponse22.getBody();
        boolean boolean28 = crawlerConfiguration6.equals((java.lang.Object) hTMLPageResponse22);
        boolean boolean29 = crawlerURL1.equals((java.lang.Object) hTMLPageResponse22);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder31.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration34 = builder33.build();
        java.lang.String str35 = crawlerConfiguration34.getStartUrl();
        int int36 = crawlerConfiguration34.getMaxLevels();
        int int37 = crawlerConfiguration34.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = crawlerConfiguration34.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse44 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 582, strMap38, "urls.txt", "hi!", (long) (short) 0, "AssetResponseCallable url:result.csv", 10L);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL45 = hTMLPageResponse44.getPageUrl();
        java.lang.String str46 = crawlerURL45.getReferer();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(crawlerConfiguration6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "urls.txt" + "'", str14, "urls.txt");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str23, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "com.soulgalore.crawler.auth" + "'", str26, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(crawlerConfiguration34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(crawlerURL45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
    }

    @Test
    public void test08312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08312");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet12 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet18 = crawlerResult11.getUrls();
        java.lang.String str19 = crawlerResult11.getTheStartPoint();
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet12);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet17);
        org.junit.Assert.assertNotNull(crawlerURLSet18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
    }

    @Test
    public void test08313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08313");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setStartUrl("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration9 = builder6.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder6.setOnlyOnPath("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setOnlyOnPath("CrawlerURL url:10");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(crawlerConfiguration9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
    }

    @Test
    public void test08314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08314");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        int int5 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str6 = crawlerConfiguration3.getRequestHeaders();
        boolean boolean7 = crawlerConfiguration3.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str9 = crawlerConfiguration3.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = crawlerConfiguration3.getRequestHeadersMap();
        boolean boolean11 = crawlerConfiguration3.isVerifyUrls();
        java.lang.String str12 = crawlerConfiguration3.getRequestHeaders();
        java.lang.String str13 = crawlerConfiguration3.getRequestHeaders();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test08315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08315");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder2.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setNotOnPath("0");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setRequestHeaders("HTMLPageResponseurl:CrawlerURL url:hi!responseCode:0encoding:AssetResponseCallable url:com.soulgalore.crawler.auth type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder9.setOnlyOnPath("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration14 = builder9.build();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(crawlerConfiguration14);
    }

    @Test
    public void test08316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08316");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet12 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet14 = crawlerResult11.getNonWorkingUrls();
        java.lang.String str15 = crawlerResult11.getTheStartPoint();
        java.lang.String str16 = crawlerResult11.getTheStartPoint();
        java.lang.String str17 = crawlerResult11.getTheStartPoint();
        java.lang.String str18 = crawlerResult11.getTheStartPoint();
        java.lang.String str19 = crawlerResult11.getTheStartPoint();
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet12);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
    }

    @Test
    public void test08317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08317");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration3.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = crawlerConfiguration3.getRequestHeadersMap();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean12 = crawlerURL11.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration19 = builder14.build();
        java.lang.String str20 = crawlerConfiguration19.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = crawlerConfiguration19.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse27 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL11, (-1), strMap21, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int28 = hTMLPageResponse27.getResponseCode();
        int int29 = hTMLPageResponse27.getResponseCode();
        boolean boolean30 = crawlerConfiguration3.equals((java.lang.Object) hTMLPageResponse27);
        int int31 = hTMLPageResponse27.getResponseCode();
        java.lang.String str32 = hTMLPageResponse27.getEncoding();
        java.lang.String str34 = hTMLPageResponse27.getHeaderValue("");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(crawlerConfiguration19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "errorurls.txt" + "'", str32, "errorurls.txt");
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test08318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08318");
        com.soulgalore.crawler.util.HeaderUtil headerUtil0 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = headerUtil0.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap4 = headerUtil0.createHeadersFromString("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil0.createHeadersFromString("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = headerUtil0.createHeadersFromString("AssetResponseCallable url:Redirected to new domain");
        org.junit.Assert.assertNotNull(headerUtil0);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
    }

    @Test
    public void test08319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08319");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder4.setOnlyOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setMaxLevels((int) (byte) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder12.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder12.setNotOnPath("AssetResponseCallable url:Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setOnlyOnPath("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setOnlyOnPath("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
    }

    @Test
    public void test08320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08320");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        int int19 = hTMLPageResponse12.getResponseCode();
        java.lang.String str20 = hTMLPageResponse12.getEncoding();
        java.lang.String str21 = hTMLPageResponse12.getResponseType();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL23 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder24.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration27 = builder26.build();
        java.lang.String str28 = crawlerConfiguration27.getOnlyOnPath();
        boolean boolean29 = crawlerConfiguration27.isVerifyUrls();
        int int30 = crawlerConfiguration27.getMaxLevels();
        int int31 = crawlerConfiguration27.getMaxLevels();
        boolean boolean32 = crawlerConfiguration27.isVerifyUrls();
        boolean boolean33 = crawlerConfiguration27.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = crawlerConfiguration27.getRequestHeadersMap();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL36 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        boolean boolean37 = crawlerConfiguration27.equals((java.lang.Object) crawlerURL36);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray38 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet39 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet39, assetResponseArray38);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray41 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet42 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet42, assetResponseArray41);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult44 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet39, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet42);
        boolean boolean45 = crawlerConfiguration27.equals((java.lang.Object) assetsVerificationResult44);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet46 = assetsVerificationResult44.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet47 = assetsVerificationResult44.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet48 = assetsVerificationResult44.getWorkingAssets();
        boolean boolean49 = hTMLPageResponse12.equals((java.lang.Object) assetsVerificationResult44);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str20, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(crawlerURL22);
        org.junit.Assert.assertNotNull(crawlerURL23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(crawlerConfiguration27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(assetResponseArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(assetResponseArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(assetResponseSet46);
        org.junit.Assert.assertNotNull(assetResponseSet47);
        org.junit.Assert.assertNotNull(assetResponseSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test08321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08321");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean14 = assetResponse4.equals((java.lang.Object) 100L);
        java.lang.String str15 = assetResponse4.getReferer();
        java.lang.String str16 = assetResponse4.getReferer();
        java.lang.String str17 = assetResponse4.getUrl();
        java.lang.String str18 = assetResponse4.getReferer();
        int int19 = assetResponse4.getResponseCode();
        java.lang.String str20 = assetResponse4.getReferer();
        int int21 = assetResponse4.getResponseCode();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100" + "'", str15, "100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "100" + "'", str16, "100");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "100" + "'", str18, "100");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "100" + "'", str20, "100");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
    }

    @Test
    public void test08322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08322");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("Response timed out", "AssetResponseCallable url:result.csv", (int) (byte) -1, (long) (byte) -1);
        long long5 = assetResponse4.getFetchTime();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
    }

    @Test
    public void test08323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08323");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider(10, 97, (int) '#', "HTMLPageResponseurl:hi!responseCode:10encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", "CrawlerURL url:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"hi!responseCode\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08324");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider(308, (-1), 100, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"com.soulgalore.crawler.nrofhttpthreadsresponseCode\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08325");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        long long16 = hTMLPageResponse12.getFetchTime();
        java.lang.String str17 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder19.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder19.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder25.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setVerifyUrls(false);
        boolean boolean30 = crawlerURL18.equals((java.lang.Object) builder29);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration31 = builder29.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder29.setMaxLevels(10);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str17, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(crawlerConfiguration31);
        org.junit.Assert.assertNotNull(builder33);
    }

    @Test
    public void test08326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08326");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        java.lang.String str18 = crawlerURL17.getUrl();
        java.lang.String str19 = crawlerURL17.getHost();
        java.lang.String str20 = crawlerURL17.getReferer();
        java.lang.String str21 = crawlerURL17.getReferer();
        java.lang.String str22 = crawlerURL17.toString();
        java.net.URI uRI23 = crawlerURL17.getUri();
        java.net.URI uRI24 = crawlerURL17.getUri();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.auth" + "'", str18, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "urls.txt" + "'", str20, "urls.txt");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "urls.txt" + "'", str21, "urls.txt");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str22, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(uRI23);
        org.junit.Assert.assertNull(uRI24);
    }

    @Test
    public void test08327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08327");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "Response timed out");
        com.soulgalore.crawler.util.HeaderUtil headerUtil4 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil4.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) '4', strMap6, "com.soulgalore.crawler.http.socket.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 580, "com.soulgalore.crawler.auth", (long) (short) 1);
        java.lang.String str14 = hTMLPageResponse12.getHeaderValue("errorurls.txt");
        java.lang.String str15 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray20 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL19 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet21 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet21, crawlerURLArray20);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet23 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray24 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet25 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet25, hTMLPageResponseArray24);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult27 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet21, hTMLPageResponseSet23, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet25);
        java.lang.String str28 = crawlerResult27.getTheStartPoint();
        java.lang.String str29 = crawlerResult27.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet30 = crawlerResult27.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet31 = crawlerResult27.getNonWorkingUrls();
        boolean boolean32 = hTMLPageResponse12.equals((java.lang.Object) crawlerResult27);
        org.jsoup.nodes.Document document33 = hTMLPageResponse12.getBody();
        org.junit.Assert.assertNotNull(headerUtil4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "urls.txt" + "'", str15, "urls.txt");
        org.junit.Assert.assertNotNull(crawlerURLArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet30);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(document33);
    }

    @Test
    public void test08328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08328");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL15 = hTMLPageResponse12.getPageUrl();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        java.lang.String str17 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher21 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder22.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration27 = builder22.build();
        java.lang.String str28 = crawlerConfiguration27.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = crawlerConfiguration27.getRequestHeadersMap();
        java.lang.String str30 = crawlerConfiguration27.getStartUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder31.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration34 = builder33.build();
        java.lang.String str35 = crawlerConfiguration34.getStartUrl();
        boolean boolean36 = crawlerConfiguration34.isVerifyUrls();
        java.lang.String str37 = crawlerConfiguration34.getOnlyOnPath();
        boolean boolean38 = crawlerConfiguration27.equals((java.lang.Object) str37);
        java.lang.String str39 = crawlerConfiguration27.getStartUrl();
        boolean boolean40 = crawlerConfiguration27.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = crawlerConfiguration27.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable43 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", assetFetcher21, strMap41, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse49 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL18, 0, strMap41, "AssetResponseCallable url:CrawlerURL url:AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", "", 0L, "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv", 581L);
        java.lang.String str50 = hTMLPageResponse49.getResponseType();
        java.lang.String str51 = hTMLPageResponse49.getUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(crawlerURL15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str17, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(crawlerConfiguration27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(crawlerConfiguration34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv" + "'", str50, "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "com.soulgalore.crawler.auth" + "'", str51, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test08329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08329");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv", 583, (long) '#');
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray5 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet6, assetResponseArray5);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray8 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet9, assetResponseArray8);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult11 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet6, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = assetsVerificationResult11.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = assetsVerificationResult11.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray14 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet15 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15, assetResponseArray14);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray17 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, assetResponseArray17);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult20 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult21 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet13, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray22 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet23 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23, assetResponseArray22);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray25 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet26, assetResponseArray25);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult28 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet26);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = assetsVerificationResult28.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult30 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet13, assetResponseSet29);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet31 = assetsVerificationResult30.getNonWorkingAssets();
        boolean boolean32 = assetResponse4.equals((java.lang.Object) assetsVerificationResult30);
        long long33 = assetResponse4.getFetchTime();
        java.lang.String str34 = assetResponse4.getReferer();
        org.junit.Assert.assertNotNull(assetResponseArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(assetResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(assetResponseSet12);
        org.junit.Assert.assertNotNull(assetResponseSet13);
        org.junit.Assert.assertNotNull(assetResponseArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(assetResponseArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(assetResponseArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(assetResponseArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(assetResponseSet29);
        org.junit.Assert.assertNotNull(assetResponseSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 35L + "'", long33 == 35L);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv" + "'", str34, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv");
    }

    @Test
    public void test08330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08330");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("", "com.soulgalore.crawler.http.socket.timeout");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse8 = new com.soulgalore.crawler.core.assets.AssetResponse("Response timed out", "0", 580, (long) (byte) -1);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL10 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI15 = crawlerURL14.getUri();
        java.lang.String str16 = crawlerURL14.getReferer();
        java.lang.String str17 = crawlerURL14.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration22 = builder21.build();
        java.lang.String str23 = crawlerConfiguration22.getStartUrl();
        int int24 = crawlerConfiguration22.getMaxLevels();
        int int25 = crawlerConfiguration22.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = crawlerConfiguration22.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse32 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL14, (int) (byte) -1, strMap26, "100", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) (short) -1, "com.soulgalore.crawler.nrofhttpthreads", 0L);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse38 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL10, 580, strMap26, "10", "HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", 580L, "0", (long) 0);
        boolean boolean39 = assetResponse8.equals((java.lang.Object) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder40.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder44 = builder40.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration45 = builder40.build();
        java.lang.String str46 = crawlerConfiguration45.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = crawlerConfiguration45.getRequestHeadersMap();
        boolean boolean48 = crawlerConfiguration45.isVerifyUrls();
        boolean boolean49 = assetResponse8.equals((java.lang.Object) crawlerConfiguration45);
        java.lang.String str50 = crawlerConfiguration45.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap51 = crawlerConfiguration45.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse57 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (short) -1, strMap51, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:-1encoding:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads type:AssetResponseCallable url:errorassets.csv", "CrawlerURL url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", 100L, "AssetResponseCallable url:com.soulgalore.crawler.nrofhttpthreads", 10L);
        java.lang.String str58 = hTMLPageResponse57.getEncoding();
        long long59 = hTMLPageResponse57.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL60 = hTMLPageResponse57.getPageUrl();
        java.lang.String str61 = crawlerURL60.getHost();
        org.junit.Assert.assertNull(uRI15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "urls.txt" + "'", str16, "urls.txt");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "urls.txt" + "'", str17, "urls.txt");
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(crawlerConfiguration22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(crawlerConfiguration45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "CrawlerURL url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str58, "CrawlerURL url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 10L + "'", long59 == 10L);
        org.junit.Assert.assertNotNull(crawlerURL60);
        org.junit.Assert.assertNull(str61);
    }

    @Test
    public void test08331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08331");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean14 = assetResponse4.equals((java.lang.Object) 100L);
        java.lang.String str15 = assetResponse4.getReferer();
        java.lang.String str16 = assetResponse4.getReferer();
        long long17 = assetResponse4.getFetchTime();
        boolean boolean19 = assetResponse4.equals((java.lang.Object) (-1));
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder20.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration23 = builder22.build();
        java.lang.String str24 = crawlerConfiguration23.getStartUrl();
        int int25 = crawlerConfiguration23.getMaxLevels();
        int int26 = crawlerConfiguration23.getMaxLevels();
        java.lang.String str27 = crawlerConfiguration23.getNotOnPath();
        int int28 = crawlerConfiguration23.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder29.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder29.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration34 = builder29.build();
        int int35 = crawlerConfiguration34.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil36 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean37 = crawlerConfiguration34.equals((java.lang.Object) headerUtil36);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = headerUtil36.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap41 = headerUtil36.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap43 = headerUtil36.createHeadersFromString("AssetResponseCallable url:result.csv");
        boolean boolean44 = crawlerConfiguration23.equals((java.lang.Object) strMap43);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = crawlerConfiguration23.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = crawlerConfiguration23.getRequestHeadersMap();
        boolean boolean47 = assetResponse4.equals((java.lang.Object) crawlerConfiguration23);
        java.lang.String str48 = assetResponse4.getUrl();
        int int49 = assetResponse4.getResponseCode();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100" + "'", str15, "100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "100" + "'", str16, "100");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(crawlerConfiguration23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(crawlerConfiguration34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(headerUtil36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
    }

    @Test
    public void test08332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08332");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("result.csv");
        java.net.URI uRI2 = crawlerURL1.getUri();
        java.lang.String str3 = crawlerURL1.getReferer();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI7 = crawlerURL6.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL10 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean11 = crawlerURL10.isWrongSyntax();
        java.lang.String str12 = crawlerURL10.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse20 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL10, (int) 'a', strMap14, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str21 = hTMLPageResponse20.getUrl();
        boolean boolean22 = crawlerURL6.equals((java.lang.Object) str21);
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse27 = new com.soulgalore.crawler.core.assets.AssetResponse("", "errorurls.txt", 97, (-1L));
        java.lang.String str28 = assetResponse27.getReferer();
        int int29 = assetResponse27.getResponseCode();
        boolean boolean30 = crawlerURL6.equals((java.lang.Object) int29);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL34 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI35 = crawlerURL34.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = builder37.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration40 = builder39.build();
        java.lang.String str41 = crawlerConfiguration40.getStartUrl();
        int int42 = crawlerConfiguration40.getMaxLevels();
        int int43 = crawlerConfiguration40.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = crawlerConfiguration40.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse50 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL34, (int) (short) 10, strMap44, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int51 = hTMLPageResponse50.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap52 = hTMLPageResponse50.getResponseHeaders();
        java.lang.String str54 = hTMLPageResponse50.getHeaderValue("");
        java.util.Map<java.lang.String, java.lang.String> strMap55 = hTMLPageResponse50.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse61 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL6, 100, strMap55, "52", "HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", (long) (short) 0, "", (long) 582);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse67 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) 0, strMap55, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url", "com.soulgalore.crawler.http.connection.timeout", 583L, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", (long) '#');
        java.lang.String str68 = hTMLPageResponse67.getEncoding();
        java.lang.String str69 = hTMLPageResponse67.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL70 = hTMLPageResponse67.getPageUrl();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(uRI7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "urls.txt" + "'", str12, "urls.txt");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "com.soulgalore.crawler.auth" + "'", str21, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "errorurls.txt" + "'", str28, "errorurls.txt");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 97 + "'", int29 == 97);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(uRI35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(crawlerConfiguration40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 10 + "'", int51 == 10);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str68, "com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str69, "com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertNotNull(crawlerURL70);
    }

    @Test
    public void test08333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08333");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher3 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil4 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil4.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = headerUtil4.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil4.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil4.createHeadersFromString("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil4.createHeadersFromString("CrawlerURL url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable16 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("errorurls.txt", assetFetcher3, strMap14, "AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable18 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.auth", assetFetcher1, strMap14, "CrawlerURL url:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(headerUtil4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
    }

    @Test
    public void test08334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08334");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI5 = crawlerURL4.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean9 = crawlerURL8.isWrongSyntax();
        java.lang.String str10 = crawlerURL8.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, (int) 'a', strMap12, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str19 = hTMLPageResponse18.getUrl();
        boolean boolean20 = crawlerURL4.equals((java.lang.Object) str19);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher23 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil24 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = headerUtil24.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable28 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher23, strMap26, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse34 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL4, (int) (short) 100, strMap26, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse40 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) -1, strMap26, "com.soulgalore.crawler.http.socket.timeout", "errorurls.txt", (long) 100, "result.csv", (long) (short) 0);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = hTMLPageResponse40.getResponseHeaders();
        long long42 = hTMLPageResponse40.getFetchTime();
        java.lang.String str43 = hTMLPageResponse40.getResponseType();
        java.lang.String str44 = hTMLPageResponse40.getEncoding();
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "urls.txt" + "'", str10, "urls.txt");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "com.soulgalore.crawler.auth" + "'", str19, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(headerUtil24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "result.csv" + "'", str43, "result.csv");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "errorurls.txt" + "'", str44, "errorurls.txt");
    }

    @Test
    public void test08335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08335");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:", "HTMLPageResponseurl:hi!responseCode:-1encoding:errorurls.txt type:result.csv");
        java.lang.String str3 = crawlerURL2.getHost();
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test08336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08336");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:-1", "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:32encoding:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (-1), (long) ' ');
    }

    @Test
    public void test08337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08337");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("32", "CrawlerURL url:1", (-1), (long) 1);
        java.lang.String str5 = assetResponse4.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration9 = builder8.build();
        java.lang.String str10 = crawlerConfiguration9.getOnlyOnPath();
        boolean boolean11 = crawlerConfiguration9.isVerifyUrls();
        com.soulgalore.crawler.util.StatusCode statusCode12 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN;
        boolean boolean13 = crawlerConfiguration9.equals((java.lang.Object) statusCode12);
        boolean boolean14 = crawlerConfiguration9.isVerifyUrls();
        java.lang.String str15 = crawlerConfiguration9.getOnlyOnPath();
        java.lang.String str16 = crawlerConfiguration9.getOnlyOnPath();
        boolean boolean17 = assetResponse4.equals((java.lang.Object) crawlerConfiguration9);
        java.lang.Class<?> wildcardClass18 = crawlerConfiguration9.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "32" + "'", str5, "32");
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(crawlerConfiguration9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + statusCode12 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN + "'", statusCode12.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test08338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08338");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        int int6 = crawlerConfiguration3.getMaxLevels();
        int int7 = crawlerConfiguration3.getMaxLevels();
        boolean boolean8 = crawlerConfiguration3.isVerifyUrls();
        boolean boolean9 = crawlerConfiguration3.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = crawlerConfiguration3.getRequestHeadersMap();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        boolean boolean13 = crawlerConfiguration3.equals((java.lang.Object) crawlerURL12);
        java.lang.String str14 = crawlerConfiguration3.getOnlyOnPath();
        java.lang.String str15 = crawlerConfiguration3.getStartUrl();
        int int16 = crawlerConfiguration3.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder17.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder23.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder29.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder29.setOnlyOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = builder29.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = builder35.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = builder35.setStartUrl("");
        boolean boolean40 = crawlerConfiguration3.equals((java.lang.Object) builder39);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder39.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:100 type:com.soulgalore.crawler.http.socket.timeout type:Unknown error");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(builder42);
    }

    @Test
    public void test08339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08339");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setStartUrl("32");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder16.setNotOnPath("Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder20.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setVerifyUrls(false);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test08340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08340");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI7 = crawlerURL6.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean12 = crawlerURL11.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration19 = builder14.build();
        java.lang.String str20 = crawlerConfiguration19.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = crawlerConfiguration19.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse27 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL11, (-1), strMap21, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse33 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL6, 100, strMap21, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.lang.String str34 = crawlerURL6.getHost();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL38 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", "com.soulgalore.crawler.http.socket.timeout");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL42 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI43 = crawlerURL42.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL47 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean48 = crawlerURL47.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder50 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder52 = builder50.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder54 = builder50.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration55 = builder50.build();
        java.lang.String str56 = crawlerConfiguration55.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap57 = crawlerConfiguration55.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse63 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL47, (-1), strMap57, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse69 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL42, 100, strMap57, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.util.Map<java.lang.String, java.lang.String> strMap70 = hTMLPageResponse69.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse76 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL38, 583, strMap70, "Unknown error", "HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", (-1L), "AssetResponseCallable url:errorassets.csv", (long) (-1));
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse82 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL6, 1, strMap70, "errorassets.csv", "CrawlerURL url:errorassets.csv", (long) (byte) -1, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", (long) (byte) 100);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse88 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 583, strMap70, "AssetResponseCallable url:result.csv", "AssetResponseCallable url:errorassets.csv", (long) 10, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url", (long) 'a');
        java.lang.String str89 = crawlerURL2.getUrl();
        java.lang.String str90 = crawlerURL2.getUrl();
        org.junit.Assert.assertNull(uRI7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(crawlerConfiguration19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(uRI43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(crawlerConfiguration55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "urls.txt" + "'", str89, "urls.txt");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "urls.txt" + "'", str90, "urls.txt");
    }

    @Test
    public void test08341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08341");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        java.lang.String str15 = hTMLPageResponse12.getUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str13, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.auth" + "'", str15, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test08342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08342");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("35");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean7 = crawlerURL6.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL10 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean11 = crawlerURL10.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI15 = crawlerURL14.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray16 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL6, crawlerURL10, crawlerURL14 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet17, crawlerURLArray16);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray19 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet20 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet20, hTMLPageResponseArray19);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL25 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray26 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL25 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet27 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet27, crawlerURLArray26);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet29 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray30 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet31 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet31, hTMLPageResponseArray30);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult33 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet27, hTMLPageResponseSet29, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet31);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult34 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet17, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet20, hTMLPageResponseSet29);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet35 = crawlerResult34.getUrls();
        java.lang.String str36 = crawlerResult34.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet37 = crawlerResult34.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet38 = crawlerResult34.getVerifiedURLResponses();
        boolean boolean39 = crawlerURL1.equals((java.lang.Object) crawlerResult34);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet40 = crawlerResult34.getVerifiedURLResponses();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(uRI15);
        org.junit.Assert.assertNotNull(crawlerURLArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "com.soulgalore.crawler.auth" + "'", str36, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURLSet37);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet40);
    }

    @Test
    public void test08343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08343");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
    }

    @Test
    public void test08344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08344");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        java.lang.String str20 = hTMLPageResponse18.getHeaderValue("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = hTMLPageResponse18.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = hTMLPageResponse18.getPageUrl();
        java.lang.String str23 = hTMLPageResponse18.getEncoding();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder24.setNotOnPath("52");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder26.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder26.setOnlyOnPath("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder26.setNotOnPath("100");
        boolean boolean33 = hTMLPageResponse18.equals((java.lang.Object) builder32);
        long long34 = hTMLPageResponse18.getFetchTime();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(crawlerURL21);
        org.junit.Assert.assertNotNull(crawlerURL22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "errorurls.txt" + "'", str23, "errorurls.txt");
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 580L + "'", long34 == 580L);
    }

    @Test
    public void test08345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08345");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        int int5 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str6 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL10 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean11 = crawlerURL10.isWrongSyntax();
        java.lang.String str12 = crawlerURL10.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse20 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL10, (int) 'a', strMap14, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str21 = hTMLPageResponse20.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean23 = hTMLPageResponse20.equals((java.lang.Object) builder22);
        long long24 = hTMLPageResponse20.getFetchTime();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder25.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder25.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder25.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration32 = builder25.build();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = crawlerConfiguration32.getRequestHeadersMap();
        boolean boolean34 = hTMLPageResponse20.equals((java.lang.Object) crawlerConfiguration32);
        boolean boolean35 = crawlerConfiguration3.equals((java.lang.Object) boolean34);
        int int36 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str37 = crawlerConfiguration3.getStartUrl();
        java.lang.String str38 = crawlerConfiguration3.getStartUrl();
        java.lang.String str39 = crawlerConfiguration3.getRequestHeaders();
        int int40 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str41 = crawlerConfiguration3.getOnlyOnPath();
        java.lang.String str42 = crawlerConfiguration3.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "urls.txt" + "'", str12, "urls.txt");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "com.soulgalore.crawler.auth" + "'", str21, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 100L + "'", long24 == 100L);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(crawlerConfiguration32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
    }

    @Test
    public void test08346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08346");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:", "AssetResponseCallable url:AssetResponseCallable url:Redirected to new domain");
        java.lang.String str3 = crawlerURL2.getHost();
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test08347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08347");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:result.csvresponseCode:-1encoding:AssetResponseCallable url:Wrong content type type:CrawlerURL url:errorassets.csv");
    }

    @Test
    public void test08348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08348");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration5.getRequestHeadersMap();
        boolean boolean8 = crawlerConfiguration5.isVerifyUrls();
        java.lang.String str9 = crawlerConfiguration5.getStartUrl();
        boolean boolean10 = crawlerConfiguration5.isVerifyUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL13 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean14 = crawlerURL13.isWrongSyntax();
        java.lang.String str15 = crawlerURL13.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL13, (int) 'a', strMap17, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int24 = hTMLPageResponse23.getResponseCode();
        java.lang.String str25 = hTMLPageResponse23.getResponseType();
        java.lang.String str26 = hTMLPageResponse23.toString();
        java.lang.String str27 = hTMLPageResponse23.getEncoding();
        boolean boolean28 = crawlerConfiguration5.equals((java.lang.Object) hTMLPageResponse23);
        long long29 = hTMLPageResponse23.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL32 = new com.soulgalore.crawler.core.CrawlerURL("errorurls.txt", "Unknown error");
        java.lang.String str33 = crawlerURL32.getHost();
        boolean boolean34 = hTMLPageResponse23.equals((java.lang.Object) crawlerURL32);
        java.lang.String str35 = crawlerURL32.getHost();
        java.lang.String str36 = crawlerURL32.getUrl();
        java.lang.String str37 = crawlerURL32.toString();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "urls.txt" + "'", str15, "urls.txt");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 97 + "'", int24 == 97);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str26, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str27, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 100L + "'", long29 == 100L);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "errorurls.txt" + "'", str36, "errorurls.txt");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "CrawlerURL url:errorurls.txt" + "'", str37, "CrawlerURL url:errorurls.txt");
    }

    @Test
    public void test08349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08349");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        int int7 = assetResponse4.getResponseCode();
        java.lang.String str8 = assetResponse4.getUrl();
        int int9 = assetResponse4.getResponseCode();
        int int10 = assetResponse4.getResponseCode();
        java.lang.String str11 = assetResponse4.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder12.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration19 = builder18.build();
        boolean boolean20 = crawlerConfiguration19.isVerifyUrls();
        int int21 = crawlerConfiguration19.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = crawlerConfiguration19.getRequestHeadersMap();
        boolean boolean23 = assetResponse4.equals((java.lang.Object) strMap22);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "100" + "'", str11, "100");
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(crawlerConfiguration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test08350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08350");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder6.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration8 = builder6.build();
        boolean boolean9 = crawlerConfiguration8.isVerifyUrls();
        int int10 = crawlerConfiguration8.getMaxLevels();
        java.lang.Object obj11 = null;
        boolean boolean12 = crawlerConfiguration8.equals(obj11);
        java.lang.String str13 = crawlerConfiguration8.getRequestHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration21 = builder20.build();
        java.lang.String str22 = crawlerConfiguration21.getStartUrl();
        boolean boolean23 = crawlerConfiguration21.isVerifyUrls();
        java.lang.String str24 = crawlerConfiguration21.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = crawlerConfiguration21.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse31 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL16, 0, strMap25, "CrawlerURL url:errorassets.csv", "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", (long) 583, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:-1encoding:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads type:AssetResponseCallable url:errorassets.csv", 1L);
        java.lang.String str32 = hTMLPageResponse31.getEncoding();
        boolean boolean33 = crawlerConfiguration8.equals((java.lang.Object) hTMLPageResponse31);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(crawlerConfiguration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(crawlerConfiguration21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url" + "'", str32, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test08351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08351");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = hTMLPageResponse12.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI21 = crawlerURL20.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration26 = builder25.build();
        java.lang.String str27 = crawlerConfiguration26.getStartUrl();
        int int28 = crawlerConfiguration26.getMaxLevels();
        int int29 = crawlerConfiguration26.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = crawlerConfiguration26.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse36 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, (int) (short) 10, strMap30, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse42 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL16, 581, strMap30, "CrawlerURL url:com.soulgalore.crawler.auth", "errorassets.csv", 100L, "Wrong content type", (long) (byte) 100);
        java.lang.String str43 = hTMLPageResponse42.getResponseType();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL44 = hTMLPageResponse42.getPageUrl();
        java.lang.String str45 = crawlerURL44.getHost();
        java.net.URI uRI46 = crawlerURL44.getUri();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertNull(uRI21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(crawlerConfiguration26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Wrong content type" + "'", str43, "Wrong content type");
        org.junit.Assert.assertNotNull(crawlerURL44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(uRI46);
    }

    @Test
    public void test08352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08352");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder0.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder0.setRequestHeaders("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration12 = builder9.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder9.setStartUrl("AssetResponseCallable url:0");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(crawlerConfiguration12);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test08353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08353");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        java.net.URI uRI4 = crawlerURL2.getUri();
        boolean boolean6 = crawlerURL2.equals((java.lang.Object) "10");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI9 = crawlerURL8.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean13 = crawlerURL12.isWrongSyntax();
        java.lang.String str14 = crawlerURL12.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse22 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL12, (int) 'a', strMap16, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str23 = hTMLPageResponse22.getUrl();
        boolean boolean24 = crawlerURL8.equals((java.lang.Object) str23);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher27 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil28 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = headerUtil28.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable32 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher27, strMap30, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse38 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, (int) (short) 100, strMap30, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        boolean boolean39 = crawlerURL2.equals((java.lang.Object) crawlerURL8);
        boolean boolean40 = crawlerURL8.isWrongSyntax();
        boolean boolean41 = crawlerURL8.isWrongSyntax();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertNull(uRI4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(uRI9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "urls.txt" + "'", str14, "urls.txt");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.auth" + "'", str23, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(headerUtil28);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test08354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08354");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("Malformed url", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:", 52, 10L);
        long long5 = assetResponse4.getFetchTime();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10L + "'", long5 == 10L);
    }

    @Test
    public void test08355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08355");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean14 = assetResponse4.equals((java.lang.Object) 100L);
        java.lang.String str15 = assetResponse4.getReferer();
        java.lang.String str16 = assetResponse4.getReferer();
        long long17 = assetResponse4.getFetchTime();
        boolean boolean19 = assetResponse4.equals((java.lang.Object) (-1));
        java.lang.String str20 = assetResponse4.getUrl();
        long long21 = assetResponse4.getFetchTime();
        long long22 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder23.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration28 = builder23.build();
        java.lang.String str29 = crawlerConfiguration28.getRequestHeaders();
        java.lang.String str30 = crawlerConfiguration28.getRequestHeaders();
        java.lang.String str31 = crawlerConfiguration28.getStartUrl();
        boolean boolean32 = crawlerConfiguration28.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = crawlerConfiguration28.getRequestHeadersMap();
        boolean boolean34 = crawlerConfiguration28.isVerifyUrls();
        int int35 = crawlerConfiguration28.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = crawlerConfiguration28.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = crawlerConfiguration28.getRequestHeadersMap();
        boolean boolean38 = assetResponse4.equals((java.lang.Object) crawlerConfiguration28);
        java.lang.String str39 = crawlerConfiguration28.getNotOnPath();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100" + "'", str15, "100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "100" + "'", str16, "100");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(crawlerConfiguration28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
    }

    @Test
    public void test08356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08356");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        java.lang.String str3 = crawlerURL1.getUrl();
        java.lang.String str4 = crawlerURL1.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder5.setNotOnPath("AssetResponseCallable url:errorassets.csv");
        boolean boolean12 = crawlerURL1.equals((java.lang.Object) builder11);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder11.setMaxLevels(1);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setStartUrl("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setNotOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder18.setNotOnPath("Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setNotOnPath("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str3, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str4, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test08357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08357");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str7 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str8 = crawlerConfiguration5.getNotOnPath();
        int int9 = crawlerConfiguration5.getMaxLevels();
        java.lang.String str10 = crawlerConfiguration5.getNotOnPath();
        boolean boolean11 = crawlerConfiguration5.isVerifyUrls();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test08358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08358");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        int int19 = hTMLPageResponse12.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = hTMLPageResponse12.getPageUrl();
        java.lang.String str21 = crawlerURL20.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder23.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration28 = builder23.build();
        java.lang.String str29 = crawlerConfiguration28.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = crawlerConfiguration28.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = crawlerConfiguration28.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse37 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, (int) (short) -1, strMap31, "AssetResponseCallable url:Malformed url", "0", (long) (byte) 10, "", (long) 581);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder38.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder38.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration43 = builder38.build();
        java.lang.String str44 = crawlerConfiguration43.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder45 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder47 = builder45.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration48 = builder47.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder50 = builder47.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder52 = builder50.setMaxLevels((int) '4');
        boolean boolean53 = crawlerConfiguration43.equals((java.lang.Object) builder52);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder55 = builder52.setOnlyOnPath("com.soulgalore.crawler.proxy");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder57 = builder55.setRequestHeaders("AssetResponseCallable url:errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder59 = builder55.setRequestHeaders("CrawlerURL url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder61 = builder55.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder63 = builder61.setNotOnPath("35");
        boolean boolean64 = crawlerURL20.equals((java.lang.Object) builder61);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
        org.junit.Assert.assertNotNull(crawlerURL20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "urls.txt" + "'", str21, "urls.txt");
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(crawlerConfiguration28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(crawlerConfiguration43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(crawlerConfiguration48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test08359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08359");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("CrawlerURL url:CrawlerURL url:35", "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads type:-1", 0, 582L);
    }

    @Test
    public void test08360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08360");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = null;
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray11 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, assetResponseArray11);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray14 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet15 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15, assetResponseArray14);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult17 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = assetsVerificationResult17.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray19 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet20, assetResponseArray19);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray22 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet23 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23, assetResponseArray22);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult25 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet20, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult26 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet18, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult27 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet10, assetResponseSet18);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult28 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet9, assetResponseSet18);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = assetsVerificationResult28.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet30 = assetsVerificationResult28.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet31 = assetsVerificationResult28.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet32 = assetsVerificationResult28.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray33 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet34 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet34, assetResponseArray33);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray36 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet37 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37, assetResponseArray36);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult39 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet34, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = assetsVerificationResult39.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet41 = assetsVerificationResult39.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet42 = assetsVerificationResult39.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult43 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet32, assetResponseSet42);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet44 = assetsVerificationResult43.getWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseSet9);
        org.junit.Assert.assertNotNull(assetResponseArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(assetResponseArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(assetResponseSet18);
        org.junit.Assert.assertNotNull(assetResponseArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(assetResponseArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(assetResponseSet29);
        org.junit.Assert.assertNotNull(assetResponseSet30);
        org.junit.Assert.assertNotNull(assetResponseSet31);
        org.junit.Assert.assertNotNull(assetResponseSet32);
        org.junit.Assert.assertNotNull(assetResponseArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(assetResponseArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(assetResponseSet40);
        org.junit.Assert.assertNotNull(assetResponseSet41);
        org.junit.Assert.assertNotNull(assetResponseSet42);
        org.junit.Assert.assertNotNull(assetResponseSet44);
    }

    @Test
    public void test08361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08361");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int19 = hTMLPageResponse18.getResponseCode();
        long long20 = hTMLPageResponse18.getFetchTime();
        long long21 = hTMLPageResponse18.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI25 = crawlerURL24.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean30 = crawlerURL29.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder32.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration37 = builder32.build();
        java.lang.String str38 = crawlerConfiguration37.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = crawlerConfiguration37.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, (-1), strMap39, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse51 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL24, 100, strMap39, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        boolean boolean52 = hTMLPageResponse18.equals((java.lang.Object) 100);
        int int53 = hTMLPageResponse18.getResponseCode();
        java.lang.String str54 = hTMLPageResponse18.getUrl();
        java.lang.String str56 = hTMLPageResponse18.getHeaderValue("AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:10");
        org.jsoup.nodes.Document document57 = hTMLPageResponse18.getBody();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 580L + "'", long20 == 580L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 580L + "'", long21 == 580L);
        org.junit.Assert.assertNull(uRI25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(crawlerConfiguration37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "com.soulgalore.crawler.auth" + "'", str54, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(document57);
    }

    @Test
    public void test08362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08362");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder0.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder0.setRequestHeaders("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setRequestHeaders("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setRequestHeaders("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration16 = builder15.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder15.setOnlyOnPath("CrawlerURL url:CrawlerURL url:urls.txt");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(crawlerConfiguration16);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test08363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08363");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean14 = assetResponse4.equals((java.lang.Object) 100L);
        java.lang.String str15 = assetResponse4.getReferer();
        java.lang.String str16 = assetResponse4.getReferer();
        long long17 = assetResponse4.getFetchTime();
        boolean boolean19 = assetResponse4.equals((java.lang.Object) (-1));
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI23 = crawlerURL22.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL27 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean28 = crawlerURL27.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder30.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder30.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration35 = builder30.build();
        java.lang.String str36 = crawlerConfiguration35.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = crawlerConfiguration35.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse43 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL27, (-1), strMap37, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse49 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL22, 100, strMap37, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.lang.String str50 = crawlerURL22.getUrl();
        boolean boolean51 = assetResponse4.equals((java.lang.Object) crawlerURL22);
        java.net.URI uRI52 = crawlerURL22.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL55 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI56 = crawlerURL55.getUri();
        java.net.URI uRI57 = crawlerURL55.getUri();
        java.net.URI uRI58 = crawlerURL55.getUri();
        java.net.URI uRI59 = crawlerURL55.getUri();
        java.lang.String str60 = crawlerURL55.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL64 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean65 = crawlerURL64.isWrongSyntax();
        java.lang.String str66 = crawlerURL64.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap68 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse74 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL64, (int) 'a', strMap68, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str75 = hTMLPageResponse74.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap76 = hTMLPageResponse74.getResponseHeaders();
        java.lang.String str77 = hTMLPageResponse74.getEncoding();
        java.lang.String str78 = hTMLPageResponse74.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder79 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder81 = builder79.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder83 = builder79.setMaxLevels((int) (short) 0);
        boolean boolean84 = hTMLPageResponse74.equals((java.lang.Object) builder83);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder86 = builder83.setOnlyOnPath("10");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration87 = builder86.build();
        java.lang.String str88 = crawlerConfiguration87.getOnlyOnPath();
        java.lang.String str89 = crawlerConfiguration87.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap90 = crawlerConfiguration87.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse96 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL55, 52, strMap90, "HTMLPageResponseurl:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1responseCode:10encoding:result.csv type:97", "", (long) 583, "", (long) (byte) -1);
        boolean boolean97 = crawlerURL22.equals((java.lang.Object) 583);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100" + "'", str15, "100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "100" + "'", str16, "100");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(uRI23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(crawlerConfiguration35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "com.soulgalore.crawler.auth" + "'", str50, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(uRI52);
        org.junit.Assert.assertNull(uRI56);
        org.junit.Assert.assertNull(uRI57);
        org.junit.Assert.assertNull(uRI58);
        org.junit.Assert.assertNull(uRI59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str60, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "urls.txt" + "'", str66, "urls.txt");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str75, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str77, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str78, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(crawlerConfiguration87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "10" + "'", str88, "10");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test08364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08364");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        com.soulgalore.crawler.util.StatusCode statusCode6 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN;
        boolean boolean7 = crawlerConfiguration3.equals((java.lang.Object) statusCode6);
        int int8 = crawlerConfiguration3.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI12 = crawlerURL11.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean17 = crawlerURL16.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder19.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration24 = builder19.build();
        java.lang.String str25 = crawlerConfiguration24.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = crawlerConfiguration24.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse32 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL16, (-1), strMap26, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse38 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL11, 100, strMap26, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.lang.String str39 = hTMLPageResponse38.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL40 = hTMLPageResponse38.getPageUrl();
        java.lang.String str41 = crawlerURL40.getUrl();
        boolean boolean42 = crawlerConfiguration3.equals((java.lang.Object) str41);
        boolean boolean43 = crawlerConfiguration3.isVerifyUrls();
        java.lang.String str44 = crawlerConfiguration3.getNotOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = crawlerConfiguration3.getRequestHeadersMap();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + statusCode6 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN + "'", statusCode6.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNull(uRI12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(crawlerConfiguration24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "com.soulgalore.crawler.auth" + "'", str39, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "com.soulgalore.crawler.auth" + "'", str41, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(strMap45);
    }

    @Test
    public void test08365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08365");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:CrawlerURL url:urls.txt", "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.net.URI uRI3 = crawlerURL2.getUri();
        java.lang.String str4 = crawlerURL2.getUrl();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CrawlerURL url:CrawlerURL url:urls.txt" + "'", str4, "CrawlerURL url:CrawlerURL url:urls.txt");
    }

    @Test
    public void test08366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08366");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("Response timed out", "CrawlerURL url:hi!", (int) 'a', (long) 10);
        java.lang.String str5 = assetResponse4.getUrl();
        java.lang.String str6 = assetResponse4.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder7.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setStartUrl("-1");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration14 = builder13.build();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = crawlerConfiguration14.getRequestHeadersMap();
        java.lang.String str16 = crawlerConfiguration14.getStartUrl();
        boolean boolean17 = assetResponse4.equals((java.lang.Object) crawlerConfiguration14);
        long long18 = assetResponse4.getFetchTime();
        int int19 = assetResponse4.getResponseCode();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Response timed out" + "'", str5, "Response timed out");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "CrawlerURL url:hi!" + "'", str6, "CrawlerURL url:hi!");
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(crawlerConfiguration14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "-1" + "'", str16, "-1");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 10L + "'", long18 == 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
    }

    @Test
    public void test08367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08367");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:Redirected to new domain", "AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.lang.String str3 = crawlerURL2.toString();
        java.lang.String str4 = crawlerURL2.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "CrawlerURL url:AssetResponseCallable url:Redirected to new domain" + "'", str3, "CrawlerURL url:AssetResponseCallable url:Redirected to new domain");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CrawlerURL url:AssetResponseCallable url:Redirected to new domain" + "'", str4, "CrawlerURL url:AssetResponseCallable url:Redirected to new domain");
    }

    @Test
    public void test08368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08368");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url type:AssetResponseCallable url:CrawlerURL url:10", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
    }

    @Test
    public void test08369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08369");
        com.soulgalore.crawler.util.StatusCode statusCode0 = com.soulgalore.crawler.util.StatusCode.SC_WRONG_CONTENT_TYPE;
        java.lang.String str1 = statusCode0.getFriendlyName();
        java.lang.String str2 = statusCode0.getFriendlyName();
        int int3 = statusCode0.getCode();
        int int4 = statusCode0.getCode();
        int int5 = statusCode0.getCode();
        java.lang.String str6 = statusCode0.getFriendlyName();
        int int7 = statusCode0.getCode();
        int int8 = statusCode0.getCode();
        java.lang.String str9 = statusCode0.getFriendlyName();
        org.junit.Assert.assertTrue("'" + statusCode0 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_WRONG_CONTENT_TYPE + "'", statusCode0.equals(com.soulgalore.crawler.util.StatusCode.SC_WRONG_CONTENT_TYPE));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Wrong content type" + "'", str1, "Wrong content type");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Wrong content type" + "'", str2, "Wrong content type");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 583 + "'", int3 == 583);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 583 + "'", int4 == 583);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 583 + "'", int5 == 583);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Wrong content type" + "'", str6, "Wrong content type");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 583 + "'", int7 == 583);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 583 + "'", int8 == 583);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Wrong content type" + "'", str9, "Wrong content type");
    }

    @Test
    public void test08370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08370");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setStartUrl("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder0.setNotOnPath("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setStartUrl("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration13 = builder8.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder8.setRequestHeaders("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:52 type:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder15.setMaxLevels((-1));
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(crawlerConfiguration13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
    }

    @Test
    public void test08371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08371");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setMaxLevels((int) '4');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setMaxLevels(583);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setMaxLevels((int) (short) 10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("Redirected to new domain");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setOnlyOnPath("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test08372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08372");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet11 = assetsVerificationResult6.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray12 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13, assetResponseArray12);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray15 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet16 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet16, assetResponseArray15);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult18 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet16);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet19 = assetsVerificationResult18.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = assetsVerificationResult18.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet21 = assetsVerificationResult18.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = assetsVerificationResult18.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult23 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet11, assetResponseSet22);
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseSet9);
        org.junit.Assert.assertNotNull(assetResponseSet10);
        org.junit.Assert.assertNotNull(assetResponseSet11);
        org.junit.Assert.assertNotNull(assetResponseArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(assetResponseArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(assetResponseSet19);
        org.junit.Assert.assertNotNull(assetResponseSet20);
        org.junit.Assert.assertNotNull(assetResponseSet21);
        org.junit.Assert.assertNotNull(assetResponseSet22);
    }

    @Test
    public void test08373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08373");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        long long6 = assetResponse4.getFetchTime();
        java.lang.String str7 = assetResponse4.getUrl();
        java.lang.String str8 = assetResponse4.getReferer();
        int int9 = assetResponse4.getResponseCode();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration13 = builder10.build();
        boolean boolean14 = assetResponse4.equals((java.lang.Object) crawlerConfiguration13);
        java.lang.String str15 = crawlerConfiguration13.getOnlyOnPath();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "100" + "'", str8, "100");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(crawlerConfiguration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test08374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08374");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setNotOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setMaxLevels((int) (byte) -1);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setOnlyOnPath("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setRequestHeaders("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder10.setStartUrl("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder10.setMaxLevels(308);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder10.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test08375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08375");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.lang.String str30 = hTMLPageResponse29.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL31 = hTMLPageResponse29.getPageUrl();
        java.lang.String str32 = crawlerURL31.getHost();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "com.soulgalore.crawler.auth" + "'", str30, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL31);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test08376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08376");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads", "");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder14.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration16 = builder14.build();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration16.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 52, strMap17, "CrawlerURL url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", (long) 52, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:97encoding:52 type:CrawlerURL url:com.soulgalore.crawler.auth", (long) 32);
        java.lang.String str24 = crawlerURL2.getUrl();
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertNotNull(crawlerConfiguration16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str24, "com.soulgalore.crawler.nrofhttpthreads");
    }

    @Test
    public void test08377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08377");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration5.getRequestHeadersMap();
        java.lang.String str8 = crawlerConfiguration5.getNotOnPath();
        int int9 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration13 = builder12.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder12.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder15.setMaxLevels((int) '4');
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration18 = builder17.build();
        boolean boolean19 = crawlerConfiguration5.equals((java.lang.Object) builder17);
        java.lang.String str20 = crawlerConfiguration5.getOnlyOnPath();
        java.lang.String str21 = crawlerConfiguration5.getOnlyOnPath();
        java.lang.String str22 = crawlerConfiguration5.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(crawlerConfiguration13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(crawlerConfiguration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
    }

    @Test
    public void test08378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08378");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setMaxLevels((int) '4');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setNotOnPath("com.soulgalore.crawler.proxy");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:-1encoding:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads type:AssetResponseCallable url:errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setOnlyOnPath("AssetResponseCallable url:AssetResponseCallable url:32");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("");
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test08379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08379");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int13 = hTMLPageResponse12.getResponseCode();
        java.lang.String str14 = hTMLPageResponse12.getResponseType();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        org.jsoup.nodes.Document document16 = hTMLPageResponse12.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        java.lang.String str18 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = hTMLPageResponse12.getPageUrl();
        java.lang.String str20 = hTMLPageResponse12.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(document16);
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str18, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str20, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
    }

    @Test
    public void test08380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08380");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth", "", (int) '4', (long) 32);
        int int5 = assetResponse4.getResponseCode();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
    }

    @Test
    public void test08381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08381");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.http.socket.timeout", "CrawlerURL url:AssetResponseCallable url:com.soulgalore.crawler.nrofhttpthreads", (int) (short) 100, 583L);
    }

    @Test
    public void test08382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08382");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder0.build();
        int int4 = crawlerConfiguration3.getMaxLevels();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    }

    @Test
    public void test08383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08383");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("0");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("100", "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.lang.String str5 = crawlerURL4.toString();
        boolean boolean6 = crawlerURL1.equals((java.lang.Object) str5);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CrawlerURL url:100" + "'", str5, "CrawlerURL url:100");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test08384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08384");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.lang.String str5 = crawlerURL2.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder9.build();
        java.lang.String str11 = crawlerConfiguration10.getStartUrl();
        int int12 = crawlerConfiguration10.getMaxLevels();
        int int13 = crawlerConfiguration10.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse20 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) -1, strMap14, "100", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) (short) -1, "com.soulgalore.crawler.nrofhttpthreads", 0L);
        java.lang.String str22 = hTMLPageResponse20.getHeaderValue("-1");
        int int23 = hTMLPageResponse20.getResponseCode();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "urls.txt" + "'", str5, "urls.txt");
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test08385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08385");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:32encoding:hi! type:97", "AssetResponseCallable url:result.csv");
    }

    @Test
    public void test08386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08386");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.lang.String str30 = hTMLPageResponse29.getEncoding();
        java.lang.String str31 = hTMLPageResponse29.toString();
        int int32 = hTMLPageResponse29.getResponseCode();
        long long33 = hTMLPageResponse29.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse38 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int39 = assetResponse38.getResponseCode();
        long long40 = assetResponse38.getFetchTime();
        java.lang.String str41 = assetResponse38.getUrl();
        java.lang.String str42 = assetResponse38.getReferer();
        int int43 = assetResponse38.getResponseCode();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder44 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder46 = builder44.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration47 = builder44.build();
        boolean boolean48 = assetResponse38.equals((java.lang.Object) crawlerConfiguration47);
        java.lang.String str49 = assetResponse38.getUrl();
        boolean boolean50 = hTMLPageResponse29.equals((java.lang.Object) assetResponse38);
        java.lang.String str51 = hTMLPageResponse29.toString();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Malformed url" + "'", str30, "Malformed url");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str31, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "100" + "'", str42, "100");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(crawlerConfiguration47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str51, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
    }

    @Test
    public void test08387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08387");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet16 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray23 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL22 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, crawlerURLArray23);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray27 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28, hTMLPageResponseArray27);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult30 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, hTMLPageResponseSet26, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet31 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet32 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet33 = crawlerResult30.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL37 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray38 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL37 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet39 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet39, crawlerURLArray38);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet41 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray42 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet43, hTMLPageResponseArray42);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult45 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet39, hTMLPageResponseSet41, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet43);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet46 = crawlerResult45.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet47 = crawlerResult45.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet48 = crawlerResult45.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet49 = crawlerResult45.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL53 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray54 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL53 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet55 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet55, crawlerURLArray54);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet57 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray58 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet59 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet59, hTMLPageResponseArray58);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult61 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet55, hTMLPageResponseSet57, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet59);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet62 = crawlerResult61.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet63 = crawlerResult61.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet64 = crawlerResult61.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet65 = crawlerResult61.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet66 = crawlerResult61.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet67 = crawlerResult61.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult68 = new com.soulgalore.crawler.core.CrawlerResult("Malformed url", crawlerURLSet33, hTMLPageResponseSet49, hTMLPageResponseSet67);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL72 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray73 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL72 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet74 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet74, crawlerURLArray73);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet76 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray77 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet78 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet78, hTMLPageResponseArray77);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult80 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet74, hTMLPageResponseSet76, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet78);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet81 = crawlerResult80.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult82 = new com.soulgalore.crawler.core.CrawlerResult("35", crawlerURLSet17, hTMLPageResponseSet49, hTMLPageResponseSet81);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet83 = crawlerResult82.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet84 = crawlerResult82.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet85 = crawlerResult82.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet86 = crawlerResult82.getNonWorkingUrls();
        java.lang.String str87 = crawlerResult82.getTheStartPoint();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet16);
        org.junit.Assert.assertNotNull(crawlerURLSet17);
        org.junit.Assert.assertNotNull(crawlerURLArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet31);
        org.junit.Assert.assertNotNull(crawlerURLSet32);
        org.junit.Assert.assertNotNull(crawlerURLSet33);
        org.junit.Assert.assertNotNull(crawlerURLArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet46);
        org.junit.Assert.assertNotNull(crawlerURLSet47);
        org.junit.Assert.assertNotNull(crawlerURLSet48);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet49);
        org.junit.Assert.assertNotNull(crawlerURLArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet62);
        org.junit.Assert.assertNotNull(crawlerURLSet63);
        org.junit.Assert.assertNotNull(crawlerURLSet64);
        org.junit.Assert.assertNotNull(crawlerURLSet65);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet66);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet67);
        org.junit.Assert.assertNotNull(crawlerURLArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet81);
        org.junit.Assert.assertNotNull(crawlerURLSet83);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet84);
        org.junit.Assert.assertNotNull(crawlerURLSet85);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "35" + "'", str87, "35");
    }

    @Test
    public void test08388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08388");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider((int) '#', 582, 10, "CrawlerURL url:CrawlerURL url:com.soulgalore.crawler.auth", "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:CrawlerURL url:CrawlerURL url:com.soulgalore.crawler.auth");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test08389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08389");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        java.lang.String str14 = hTMLPageResponse12.toString();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = hTMLPageResponse12.getResponseHeaders();
        org.jsoup.nodes.Document document16 = hTMLPageResponse12.getBody();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str14, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(document16);
    }

    @Test
    public void test08390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08390");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder0.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder0.setRequestHeaders("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder9.setNotOnPath("Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder9.setNotOnPath("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder15.setNotOnPath("AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration18 = builder15.build();
        java.lang.String str19 = crawlerConfiguration18.getOnlyOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(crawlerConfiguration18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test08391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08391");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration5.getRequestHeadersMap();
        java.lang.String str8 = crawlerConfiguration5.getStartUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration12 = builder11.build();
        java.lang.String str13 = crawlerConfiguration12.getStartUrl();
        boolean boolean14 = crawlerConfiguration12.isVerifyUrls();
        java.lang.String str15 = crawlerConfiguration12.getOnlyOnPath();
        boolean boolean16 = crawlerConfiguration5.equals((java.lang.Object) str15);
        java.lang.String str17 = crawlerConfiguration5.getStartUrl();
        boolean boolean18 = crawlerConfiguration5.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = crawlerConfiguration5.getRequestHeadersMap();
        java.lang.String str20 = crawlerConfiguration5.getOnlyOnPath();
        int int21 = crawlerConfiguration5.getMaxLevels();
        java.lang.String str22 = crawlerConfiguration5.getNotOnPath();
        java.lang.String str23 = crawlerConfiguration5.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL26 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean27 = crawlerURL26.isWrongSyntax();
        java.lang.String str28 = crawlerURL26.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse36 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL26, (int) 'a', strMap30, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str37 = hTMLPageResponse36.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = hTMLPageResponse36.getResponseHeaders();
        java.lang.String str39 = hTMLPageResponse36.getEncoding();
        java.lang.String str40 = hTMLPageResponse36.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL41 = hTMLPageResponse36.getPageUrl();
        java.lang.String str42 = crawlerURL41.getUrl();
        java.lang.String str43 = crawlerURL41.getUrl();
        java.lang.String str44 = crawlerURL41.getUrl();
        java.lang.String str45 = crawlerURL41.getHost();
        java.lang.String str46 = crawlerURL41.getHost();
        boolean boolean47 = crawlerConfiguration5.equals((java.lang.Object) str46);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(crawlerConfiguration12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "urls.txt" + "'", str28, "urls.txt");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str37, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str39, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str40, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "com.soulgalore.crawler.auth" + "'", str42, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "com.soulgalore.crawler.auth" + "'", str43, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "com.soulgalore.crawler.auth" + "'", str44, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test08392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08392");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str7 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str8 = crawlerConfiguration5.getNotOnPath();
        int int9 = crawlerConfiguration5.getMaxLevels();
        java.lang.String str10 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str11 = crawlerConfiguration5.getRequestHeaders();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test08393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08393");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.nrofhttpthreads", "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", 0, (long) (byte) 10);
    }

    @Test
    public void test08394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08394");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        java.lang.String str3 = crawlerURL1.getUrl();
        java.lang.String str4 = crawlerURL1.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder5.setNotOnPath("AssetResponseCallable url:errorassets.csv");
        boolean boolean12 = crawlerURL1.equals((java.lang.Object) builder11);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder11.setMaxLevels(1);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setOnlyOnPath("com.soulgalore.crawler.proxy");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder20.setOnlyOnPath("");
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str3, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str4, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test08395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08395");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet11 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet14 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet15 = assetsVerificationResult6.getNonWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseSet9);
        org.junit.Assert.assertNotNull(assetResponseSet10);
        org.junit.Assert.assertNotNull(assetResponseSet11);
        org.junit.Assert.assertNotNull(assetResponseSet12);
        org.junit.Assert.assertNotNull(assetResponseSet13);
        org.junit.Assert.assertNotNull(assetResponseSet14);
        org.junit.Assert.assertNotNull(assetResponseSet15);
    }

    @Test
    public void test08396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08396");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:urls.txt");
        java.lang.String str2 = crawlerURL1.getReferer();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray7 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL6 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet8 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet8, crawlerURLArray7);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray11 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet12 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet12, hTMLPageResponseArray11);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult14 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet8, hTMLPageResponseSet10, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet12);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult14.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult14.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = crawlerResult14.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet18 = crawlerResult14.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet19 = crawlerResult14.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet20 = crawlerResult14.getNonWorkingUrls();
        java.lang.String str21 = crawlerResult14.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet22 = crawlerResult14.getUrls();
        boolean boolean23 = crawlerURL1.equals((java.lang.Object) crawlerResult14);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet24 = crawlerResult14.getUrls();
        java.lang.String str25 = crawlerResult14.getTheStartPoint();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(crawlerURLArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(crawlerURLSet17);
        org.junit.Assert.assertNotNull(crawlerURLSet18);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet19);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
    }

    @Test
    public void test08397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08397");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher3 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil4 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil4.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = headerUtil4.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable10 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("", assetFetcher3, strMap8, "AssetResponseCallable url:1");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable12 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("HTMLPageResponseurl:hi!responseCode:-1encoding:errorurls.txt type:result.csv", assetFetcher1, strMap8, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.lang.String str13 = assetResponseCallable12.toString();
        org.junit.Assert.assertNotNull(headerUtil4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AssetResponseCallable url:HTMLPageResponseurl:hi!responseCode:-1encoding:errorurls.txt type:result.csv" + "'", str13, "AssetResponseCallable url:HTMLPageResponseurl:hi!responseCode:-1encoding:errorurls.txt type:result.csv");
    }

    @Test
    public void test08398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08398");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("1", "urls.txt");
        java.lang.String str3 = crawlerURL2.toString();
        java.net.URI uRI4 = crawlerURL2.getUri();
        java.lang.String str5 = crawlerURL2.getUrl();
        java.lang.String str6 = crawlerURL2.toString();
        java.lang.String str7 = crawlerURL2.getHost();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "CrawlerURL url:1" + "'", str3, "CrawlerURL url:1");
        org.junit.Assert.assertNull(uRI4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1" + "'", str5, "1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "CrawlerURL url:1" + "'", str6, "CrawlerURL url:1");
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test08399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08399");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        long long14 = hTMLPageResponse12.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL15 = hTMLPageResponse12.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str17 = hTMLPageResponse12.getResponseType();
        java.lang.String str18 = hTMLPageResponse12.getUrl();
        org.jsoup.nodes.Document document19 = hTMLPageResponse12.getBody();
        java.lang.String str20 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = hTMLPageResponse12.getPageUrl();
        org.jsoup.nodes.Document document22 = hTMLPageResponse12.getBody();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 100L + "'", long14 == 100L);
        org.junit.Assert.assertNotNull(crawlerURL15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.auth" + "'", str18, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str20, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL21);
        org.junit.Assert.assertNull(document22);
    }

    @Test
    public void test08400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08400");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:-1");
        java.lang.String str2 = crawlerURL1.getHost();
        java.lang.String str3 = crawlerURL1.toString();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "CrawlerURL url:CrawlerURL url:-1" + "'", str3, "CrawlerURL url:CrawlerURL url:-1");
    }

    @Test
    public void test08401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08401");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet18 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray23 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL22 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, crawlerURLArray23);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray27 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28, hTMLPageResponseArray27);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult30 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, hTMLPageResponseSet26, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28);
        java.lang.String str31 = crawlerResult30.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet32 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet33 = crawlerResult30.getNonWorkingUrls();
        java.lang.String str34 = crawlerResult30.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet35 = crawlerResult30.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray40 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL39 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, crawlerURLArray40);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray44 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet45 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45, hTMLPageResponseArray44);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult47 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, hTMLPageResponseSet43, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45);
        java.lang.String str48 = crawlerResult47.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet49 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet50 = crawlerResult47.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult51 = new com.soulgalore.crawler.core.CrawlerResult("CrawlerURL url:urls.txt", crawlerURLSet18, hTMLPageResponseSet35, hTMLPageResponseSet50);
        java.lang.String str52 = crawlerResult51.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet53 = crawlerResult51.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet54 = crawlerResult51.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet55 = crawlerResult51.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet56 = crawlerResult51.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet57 = crawlerResult51.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet58 = crawlerResult51.getNonWorkingUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet17);
        org.junit.Assert.assertNotNull(crawlerURLSet18);
        org.junit.Assert.assertNotNull(crawlerURLArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet32);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet35);
        org.junit.Assert.assertNotNull(crawlerURLArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet49);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "CrawlerURL url:urls.txt" + "'", str52, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertNotNull(crawlerURLSet53);
        org.junit.Assert.assertNotNull(crawlerURLSet54);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet55);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet56);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet57);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet58);
    }

    @Test
    public void test08402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08402");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int19 = hTMLPageResponse18.getResponseCode();
        long long20 = hTMLPageResponse18.getFetchTime();
        long long21 = hTMLPageResponse18.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI25 = crawlerURL24.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean30 = crawlerURL29.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder32.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration37 = builder32.build();
        java.lang.String str38 = crawlerConfiguration37.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = crawlerConfiguration37.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, (-1), strMap39, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse51 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL24, 100, strMap39, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        boolean boolean52 = hTMLPageResponse18.equals((java.lang.Object) 100);
        org.jsoup.nodes.Document document53 = hTMLPageResponse18.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL54 = hTMLPageResponse18.getPageUrl();
        java.lang.String str55 = hTMLPageResponse18.getResponseType();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL56 = hTMLPageResponse18.getPageUrl();
        java.lang.String str57 = hTMLPageResponse18.getResponseType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 580L + "'", long20 == 580L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 580L + "'", long21 == 580L);
        org.junit.Assert.assertNull(uRI25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(crawlerConfiguration37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(document53);
        org.junit.Assert.assertNotNull(crawlerURL54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "com.soulgalore.crawler.auth" + "'", str55, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "com.soulgalore.crawler.auth" + "'", str57, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test08403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08403");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder6.build();
        java.lang.String str8 = crawlerConfiguration7.getStartUrl();
        int int9 = crawlerConfiguration7.getMaxLevels();
        java.lang.String str10 = crawlerConfiguration7.getRequestHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray15 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL14 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet16, crawlerURLArray15);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet18 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray19 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet20 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet20, hTMLPageResponseArray19);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult22 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet16, hTMLPageResponseSet18, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet20);
        java.lang.String str23 = crawlerResult22.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet24 = crawlerResult22.getNonWorkingUrls();
        java.lang.String str25 = crawlerResult22.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet26 = crawlerResult22.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet27 = crawlerResult22.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet28 = crawlerResult22.getUrls();
        boolean boolean29 = crawlerConfiguration7.equals((java.lang.Object) crawlerResult22);
        java.lang.String str30 = crawlerConfiguration7.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(crawlerURLArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet26);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet27);
        org.junit.Assert.assertNotNull(crawlerURLSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "urls.txt" + "'", str30, "urls.txt");
    }

    @Test
    public void test08404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08404");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int19 = hTMLPageResponse18.getResponseCode();
        long long20 = hTMLPageResponse18.getFetchTime();
        long long21 = hTMLPageResponse18.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI25 = crawlerURL24.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean30 = crawlerURL29.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder32.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration37 = builder32.build();
        java.lang.String str38 = crawlerConfiguration37.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = crawlerConfiguration37.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, (-1), strMap39, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse51 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL24, 100, strMap39, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        boolean boolean52 = hTMLPageResponse18.equals((java.lang.Object) 100);
        org.jsoup.nodes.Document document53 = hTMLPageResponse18.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL54 = hTMLPageResponse18.getPageUrl();
        java.lang.String str56 = hTMLPageResponse18.getHeaderValue("10");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL57 = hTMLPageResponse18.getPageUrl();
        int int58 = hTMLPageResponse18.getResponseCode();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 580L + "'", long20 == 580L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 580L + "'", long21 == 580L);
        org.junit.Assert.assertNull(uRI25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(crawlerConfiguration37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(document53);
        org.junit.Assert.assertNotNull(crawlerURL54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(crawlerURL57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
    }

    @Test
    public void test08405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08405");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        java.lang.String str2 = crawlerURL1.getUrl();
        boolean boolean3 = crawlerURL1.isWrongSyntax();
        com.soulgalore.crawler.util.HeaderUtil headerUtil5 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = headerUtil5.createHeadersFromString("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse13 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) 10, strMap7, "urls.txt", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (byte) 10, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", (-1L));
        java.lang.String str15 = hTMLPageResponse13.getHeaderValue("CrawlerURL url:1");
        long long16 = hTMLPageResponse13.getFetchTime();
        java.lang.String str17 = hTMLPageResponse13.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse13.getPageUrl();
        java.lang.String str19 = crawlerURL18.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder21.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration26 = builder21.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder27.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder31.setVerifyUrls(false);
        java.lang.Class<?> wildcardClass34 = builder33.getClass();
        boolean boolean35 = crawlerConfiguration26.equals((java.lang.Object) wildcardClass34);
        java.lang.String str36 = crawlerConfiguration26.getRequestHeaders();
        com.soulgalore.crawler.util.HeaderUtil headerUtil37 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = headerUtil37.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap41 = headerUtil37.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap43 = headerUtil37.createHeadersFromString("AssetResponseCallable url:-1");
        boolean boolean44 = crawlerConfiguration26.equals((java.lang.Object) headerUtil37);
        java.lang.String str45 = crawlerConfiguration26.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = crawlerConfiguration26.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse52 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL18, 0, strMap46, "Redirected to new domain", "hi!", 582L, "AssetResponseCallable url:100", (long) 583);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(headerUtil5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(crawlerConfiguration26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(headerUtil37);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(strMap46);
    }

    @Test
    public void test08406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08406");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean5 = crawlerURL4.isWrongSyntax();
        java.lang.String str6 = crawlerURL4.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse14 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL4, (int) 'a', strMap8, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str15 = hTMLPageResponse14.getUrl();
        boolean boolean17 = hTMLPageResponse14.equals((java.lang.Object) "CrawlerURL url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse14.getPageUrl();
        java.net.URI uRI19 = crawlerURL18.getUri();
        java.lang.String str20 = crawlerURL18.toString();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher23 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL25 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL28 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI29 = crawlerURL28.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL32 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean33 = crawlerURL32.isWrongSyntax();
        java.lang.String str34 = crawlerURL32.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse42 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL32, (int) 'a', strMap36, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str43 = hTMLPageResponse42.getUrl();
        boolean boolean44 = crawlerURL28.equals((java.lang.Object) str43);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher47 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil48 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = headerUtil48.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable52 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher47, strMap50, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse58 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL28, (int) (short) 100, strMap50, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse64 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL25, (int) (short) -1, strMap50, "com.soulgalore.crawler.http.socket.timeout", "errorurls.txt", (long) 100, "result.csv", (long) (short) 0);
        java.util.Map<java.lang.String, java.lang.String> strMap65 = hTMLPageResponse64.getResponseHeaders();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable67 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("com.soulgalore.crawler.nrofhttpthreads", assetFetcher23, strMap65, "HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse73 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL18, (int) '#', strMap65, "0", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:", (long) 581, "0", (long) (-1));
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable75 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("CrawlerURL url:AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", assetFetcher1, strMap65, "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.lang.String str76 = assetResponseCallable75.toString();
        java.lang.String str77 = assetResponseCallable75.toString();
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.assets.AssetResponse assetResponse78 = assetResponseCallable75.call();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "urls.txt" + "'", str6, "urls.txt");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.auth" + "'", str15, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertNull(uRI19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str20, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(uRI29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "urls.txt" + "'", str34, "urls.txt");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "com.soulgalore.crawler.auth" + "'", str43, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(headerUtil48);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "AssetResponseCallable url:CrawlerURL url:AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str76, "AssetResponseCallable url:CrawlerURL url:AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "AssetResponseCallable url:CrawlerURL url:AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str77, "AssetResponseCallable url:CrawlerURL url:AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
    }

    @Test
    public void test08407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08407");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setOnlyOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setOnlyOnPath("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder16.setStartUrl("52");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration21 = builder20.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder20.setStartUrl("CrawlerURL url:35");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder20.setRequestHeaders("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(crawlerConfiguration21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
    }

    @Test
    public void test08408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08408");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setOnlyOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder12.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration19 = builder18.build();
        int int20 = crawlerConfiguration19.getMaxLevels();
        java.lang.String str21 = crawlerConfiguration19.getOnlyOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(crawlerConfiguration19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "urls.txt" + "'", str21, "urls.txt");
    }

    @Test
    public void test08409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08409");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder14.setMaxLevels((int) (byte) -1);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder14.setNotOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setStartUrl("100");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder19.setNotOnPath("AssetResponseCallable url:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setMaxLevels(10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder25.setMaxLevels((int) (byte) 100);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
    }

    @Test
    public void test08410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08410");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "errorurls.txt", 97, (-1L));
        java.lang.String str5 = assetResponse4.getReferer();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        long long9 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI12 = crawlerURL11.getUri();
        java.lang.String str13 = crawlerURL11.getUrl();
        java.lang.String str14 = crawlerURL11.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder16.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration21 = builder16.build();
        java.lang.String str22 = crawlerConfiguration21.getRequestHeaders();
        java.lang.String str23 = crawlerConfiguration21.getRequestHeaders();
        boolean boolean25 = crawlerConfiguration21.equals((java.lang.Object) 0.0d);
        boolean boolean26 = crawlerConfiguration21.isVerifyUrls();
        java.lang.String str27 = crawlerConfiguration21.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = crawlerConfiguration21.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse34 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL11, 0, strMap28, "10", "Unknown error", (long) (short) -1, "AssetResponseCallable url:Malformed url", (long) 97);
        java.lang.String str35 = hTMLPageResponse34.toString();
        java.lang.String str36 = hTMLPageResponse34.getUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = hTMLPageResponse34.getResponseHeaders();
        java.lang.String str38 = hTMLPageResponse34.toString();
        java.lang.String str39 = hTMLPageResponse34.toString();
        boolean boolean40 = assetResponse4.equals((java.lang.Object) hTMLPageResponse34);
        org.jsoup.nodes.Document document41 = hTMLPageResponse34.getBody();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "errorurls.txt" + "'", str5, "errorurls.txt");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 97 + "'", int6 == 97);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNull(uRI12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str13, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str14, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(crawlerConfiguration21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url" + "'", str35, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str36, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url" + "'", str38, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url" + "'", str39, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(document41);
    }

    @Test
    public void test08411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08411");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.toString();
        long long14 = hTMLPageResponse12.getFetchTime();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse21 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int22 = assetResponse21.getResponseCode();
        int int23 = assetResponse21.getResponseCode();
        long long24 = assetResponse21.getFetchTime();
        long long25 = assetResponse21.getFetchTime();
        java.lang.String str26 = assetResponse21.getUrl();
        int int27 = assetResponse21.getResponseCode();
        java.lang.String str28 = assetResponse21.getUrl();
        boolean boolean29 = crawlerURL16.equals((java.lang.Object) assetResponse21);
        java.lang.String str30 = assetResponse21.getReferer();
        int int31 = assetResponse21.getResponseCode();
        java.lang.String str32 = assetResponse21.getUrl();
        long long33 = assetResponse21.getFetchTime();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder34.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration37 = builder34.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = builder34.setMaxLevels(52);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder41 = builder34.setStartUrl("CrawlerURL url:com.soulgalore.crawler.auth");
        boolean boolean42 = assetResponse21.equals((java.lang.Object) builder34);
        java.lang.String str43 = assetResponse21.getReferer();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str13, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 100L + "'", long14 == 100L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "100" + "'", str30, "100");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(crawlerConfiguration37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "100" + "'", str43, "100");
    }

    @Test
    public void test08412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08412");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.http.socket.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:32encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url type:com.soulgalore.crawler.http.connection.timeout", (int) (short) 1, 100L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        java.lang.String str7 = assetResponse4.getReferer();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:32encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url type:com.soulgalore.crawler.http.connection.timeout" + "'", str7, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:32encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url type:com.soulgalore.crawler.http.connection.timeout");
    }

    @Test
    public void test08413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08413");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("result.csv");
        java.lang.String str2 = crawlerURL1.getUrl();
        java.lang.String str3 = crawlerURL1.getHost();
        java.lang.String str4 = crawlerURL1.getHost();
        java.lang.String str5 = crawlerURL1.getReferer();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "result.csv" + "'", str2, "result.csv");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test08414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08414");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder10.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration12 = builder10.build();
        boolean boolean13 = crawlerConfiguration12.isVerifyUrls();
        boolean boolean14 = crawlerConfiguration12.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = crawlerConfiguration12.getRequestHeadersMap();
        java.lang.String str16 = crawlerConfiguration12.getOnlyOnPath();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse21 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int22 = assetResponse21.getResponseCode();
        int int23 = assetResponse21.getResponseCode();
        long long24 = assetResponse21.getFetchTime();
        long long25 = assetResponse21.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse30 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean31 = assetResponse21.equals((java.lang.Object) 100L);
        java.lang.String str32 = assetResponse21.getReferer();
        java.lang.String str33 = assetResponse21.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder34.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder34.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder34.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder40.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder44 = builder40.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder46 = builder44.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder48 = builder46.setVerifyUrls(false);
        boolean boolean49 = assetResponse21.equals((java.lang.Object) false);
        java.lang.String str50 = assetResponse21.getReferer();
        java.lang.String str51 = assetResponse21.getReferer();
        java.lang.String str52 = assetResponse21.getReferer();
        long long53 = assetResponse21.getFetchTime();
        java.lang.String str54 = assetResponse21.getUrl();
        boolean boolean55 = crawlerConfiguration12.equals((java.lang.Object) assetResponse21);
        int int56 = assetResponse21.getResponseCode();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertNotNull(crawlerConfiguration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "100" + "'", str32, "100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "100" + "'", str33, "100");
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "100" + "'", str50, "100");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "100" + "'", str51, "100");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "100" + "'", str52, "100");
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
    }

    @Test
    public void test08415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08415");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:-1");
    }

    @Test
    public void test08416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08416");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = hTMLPageResponse12.getResponseHeaders();
        org.jsoup.nodes.Document document16 = hTMLPageResponse12.getBody();
        java.lang.String str17 = hTMLPageResponse12.getUrl();
        long long18 = hTMLPageResponse12.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = hTMLPageResponse12.getPageUrl();
        java.net.URI uRI20 = crawlerURL19.getUri();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(document16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "com.soulgalore.crawler.auth" + "'", str17, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 100L + "'", long18 == 100L);
        org.junit.Assert.assertNotNull(crawlerURL19);
        org.junit.Assert.assertNull(uRI20);
    }

    @Test
    public void test08417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08417");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        long long6 = assetResponse4.getFetchTime();
        java.lang.Object obj7 = null;
        boolean boolean8 = assetResponse4.equals(obj7);
        int int9 = assetResponse4.getResponseCode();
        java.lang.String str10 = assetResponse4.getUrl();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test08418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08418");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setStartUrl("-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setRequestHeaders("AssetResponseCallable url:CrawlerURL url:10");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder4.setStartUrl("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration13 = builder12.build();
        java.lang.String str14 = crawlerConfiguration13.getRequestHeaders();
        int int15 = crawlerConfiguration13.getMaxLevels();
        java.lang.String str16 = crawlerConfiguration13.getStartUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(crawlerConfiguration13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AssetResponseCallable url:CrawlerURL url:10" + "'", str14, "AssetResponseCallable url:CrawlerURL url:10");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test08419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08419");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean6 = crawlerURL5.isWrongSyntax();
        java.lang.String str7 = crawlerURL5.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse15 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) 'a', strMap9, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str16 = hTMLPageResponse15.getUrl();
        boolean boolean17 = crawlerURL1.equals((java.lang.Object) str16);
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse22 = new com.soulgalore.crawler.core.assets.AssetResponse("", "errorurls.txt", 97, (-1L));
        java.lang.String str23 = assetResponse22.getReferer();
        int int24 = assetResponse22.getResponseCode();
        boolean boolean25 = crawlerURL1.equals((java.lang.Object) int24);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI30 = crawlerURL29.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration35 = builder34.build();
        java.lang.String str36 = crawlerConfiguration35.getStartUrl();
        int int37 = crawlerConfiguration35.getMaxLevels();
        int int38 = crawlerConfiguration35.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = crawlerConfiguration35.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, (int) (short) 10, strMap39, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int46 = hTMLPageResponse45.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = hTMLPageResponse45.getResponseHeaders();
        java.lang.String str49 = hTMLPageResponse45.getHeaderValue("");
        java.util.Map<java.lang.String, java.lang.String> strMap50 = hTMLPageResponse45.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse56 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 100, strMap50, "52", "HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", (long) (short) 0, "", (long) 582);
        java.lang.String str57 = hTMLPageResponse56.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL60 = new com.soulgalore.crawler.core.CrawlerURL("-1", "com.soulgalore.crawler.auth");
        java.lang.String str61 = crawlerURL60.getUrl();
        boolean boolean62 = hTMLPageResponse56.equals((java.lang.Object) crawlerURL60);
        java.lang.String str63 = crawlerURL60.getReferer();
        boolean boolean64 = crawlerURL60.isWrongSyntax();
        boolean boolean65 = crawlerURL60.isWrongSyntax();
        java.lang.String str66 = crawlerURL60.getUrl();
        java.net.URI uRI67 = crawlerURL60.getUri();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "urls.txt" + "'", str7, "urls.txt");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "errorurls.txt" + "'", str23, "errorurls.txt");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 97 + "'", int24 == 97);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(uRI30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(crawlerConfiguration35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:" + "'", str57, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "-1" + "'", str61, "-1");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "com.soulgalore.crawler.auth" + "'", str63, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "-1" + "'", str66, "-1");
        org.junit.Assert.assertNull(uRI67);
    }

    @Test
    public void test08420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08420");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL15 = hTMLPageResponse12.getPageUrl();
        boolean boolean16 = crawlerURL15.isWrongSyntax();
        java.net.URI uRI17 = crawlerURL15.getUri();
        java.lang.String str18 = crawlerURL15.getHost();
        java.lang.String str19 = crawlerURL15.getReferer();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL23 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray24 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL23 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet25 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet25, crawlerURLArray24);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet27 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray28 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet29 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet29, hTMLPageResponseArray28);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult31 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet25, hTMLPageResponseSet27, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet29);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet32 = crawlerResult31.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet33 = crawlerResult31.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet34 = crawlerResult31.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet35 = crawlerResult31.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet36 = crawlerResult31.getUrls();
        java.lang.String str37 = crawlerResult31.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet38 = crawlerResult31.getUrls();
        boolean boolean39 = crawlerURL15.equals((java.lang.Object) crawlerResult31);
        java.net.URI uRI40 = crawlerURL15.getUri();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher43 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL46 = new com.soulgalore.crawler.core.CrawlerURL("hi!", "CrawlerURL url:result.csv");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher49 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder50 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder52 = builder50.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder54 = builder50.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration55 = builder50.build();
        java.lang.String str56 = crawlerConfiguration55.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap57 = crawlerConfiguration55.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable59 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", assetFetcher49, strMap57, "CrawlerURL url:hi!");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse65 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL46, 52, strMap57, "AssetResponseCallable url:AssetResponseCallable url:Malformed url", "urls.txt", (long) 583, "CrawlerURL url:com.soulgalore.crawler.auth", (long) 100);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable67 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("", assetFetcher43, strMap57, "HTMLPageResponseurl:CrawlerURL url:com.soulgalore.crawler.authresponseCode:0encoding:CrawlerURL url:result.csv type:-1");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse73 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL15, 580, strMap57, "AssetResponseCallable url:com.soulgalore.crawler.nrofhttpthreads", "CrawlerURL url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 580, "AssetResponseCallable url:10", 100L);
        java.lang.String str74 = hTMLPageResponse73.getEncoding();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(crawlerURL15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(uRI17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "urls.txt" + "'", str19, "urls.txt");
        org.junit.Assert.assertNotNull(crawlerURLArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet32);
        org.junit.Assert.assertNotNull(crawlerURLSet33);
        org.junit.Assert.assertNotNull(crawlerURLSet34);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet35);
        org.junit.Assert.assertNotNull(crawlerURLSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(uRI40);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(crawlerConfiguration55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "CrawlerURL url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str74, "CrawlerURL url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
    }

    @Test
    public void test08421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08421");
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet0 = null;
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray1 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet2 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet2, assetResponseArray1);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray4 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet5, assetResponseArray4);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult7 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet2, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet5);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult7.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray9 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, assetResponseArray9);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray12 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13, assetResponseArray12);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult15 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult16 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet8, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult17 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet0, assetResponseSet8);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = assetsVerificationResult17.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet19 = assetsVerificationResult17.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = assetsVerificationResult17.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet21 = assetsVerificationResult17.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = assetsVerificationResult17.getNonWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(assetResponseArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(assetResponseArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(assetResponseSet18);
        org.junit.Assert.assertNotNull(assetResponseSet19);
        org.junit.Assert.assertNull(assetResponseSet20);
        org.junit.Assert.assertNull(assetResponseSet21);
        org.junit.Assert.assertNotNull(assetResponseSet22);
    }

    @Test
    public void test08422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08422");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = null;
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray11 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, assetResponseArray11);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray14 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet15 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15, assetResponseArray14);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult17 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = assetsVerificationResult17.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray19 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet20, assetResponseArray19);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray22 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet23 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23, assetResponseArray22);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult25 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet20, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult26 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet18, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult27 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet10, assetResponseSet18);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult28 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet9, assetResponseSet18);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = null;
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult30 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet18, assetResponseSet29);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray31 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet32 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32, assetResponseArray31);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray34 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet35 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet35, assetResponseArray34);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult37 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet35);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet38 = assetsVerificationResult37.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet39 = assetsVerificationResult37.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = assetsVerificationResult37.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult41 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet29, assetResponseSet40);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet42 = assetsVerificationResult41.getNonWorkingAssets();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder43 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder45 = builder43.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration46 = builder45.build();
        java.lang.String str47 = crawlerConfiguration46.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = crawlerConfiguration46.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray49 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet50 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet50, assetResponseArray49);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray52 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet53 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet53, assetResponseArray52);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult55 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet50, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet53);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet56 = assetsVerificationResult55.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray57 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet58 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet58, assetResponseArray57);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray60 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet61 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet61, assetResponseArray60);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult63 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet58, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet61);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult64 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet56, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet61);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet65 = assetsVerificationResult64.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray66 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet67 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet67, assetResponseArray66);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray69 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet70 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet70, assetResponseArray69);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult72 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet67, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet70);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet73 = assetsVerificationResult72.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet74 = assetsVerificationResult72.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray75 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet76 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet76, assetResponseArray75);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray78 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet79 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet79, assetResponseArray78);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult81 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet76, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet79);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult82 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet74, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet76);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult83 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet65, assetResponseSet74);
        boolean boolean84 = crawlerConfiguration46.equals((java.lang.Object) assetsVerificationResult83);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet85 = assetsVerificationResult83.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult86 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet42, assetResponseSet85);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet87 = assetsVerificationResult86.getNonWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseSet9);
        org.junit.Assert.assertNotNull(assetResponseArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(assetResponseArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(assetResponseSet18);
        org.junit.Assert.assertNotNull(assetResponseArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(assetResponseArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(assetResponseArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(assetResponseArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(assetResponseSet38);
        org.junit.Assert.assertNotNull(assetResponseSet39);
        org.junit.Assert.assertNotNull(assetResponseSet40);
        org.junit.Assert.assertNotNull(assetResponseSet42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(crawlerConfiguration46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(assetResponseArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(assetResponseArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(assetResponseSet56);
        org.junit.Assert.assertNotNull(assetResponseArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(assetResponseArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(assetResponseSet65);
        org.junit.Assert.assertNotNull(assetResponseArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(assetResponseArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(assetResponseSet73);
        org.junit.Assert.assertNotNull(assetResponseSet74);
        org.junit.Assert.assertNotNull(assetResponseArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(assetResponseArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(assetResponseSet85);
        org.junit.Assert.assertNotNull(assetResponseSet87);
    }

    @Test
    public void test08423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08423");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.proxy", "", (int) (short) -1, (long) 583);
        java.lang.String str5 = assetResponse4.getUrl();
        java.lang.String str6 = assetResponse4.getReferer();
        long long7 = assetResponse4.getFetchTime();
        java.lang.String str8 = assetResponse4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "com.soulgalore.crawler.proxy" + "'", str5, "com.soulgalore.crawler.proxy");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 583L + "'", long7 == 583L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "com.soulgalore.crawler.proxy" + "'", str8, "com.soulgalore.crawler.proxy");
    }

    @Test
    public void test08424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08424");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration8 = builder7.build();
        java.lang.String str9 = crawlerConfiguration8.getStartUrl();
        int int10 = crawlerConfiguration8.getMaxLevels();
        int int11 = crawlerConfiguration8.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration8.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (short) 10, strMap12, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int19 = hTMLPageResponse18.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = hTMLPageResponse18.getResponseHeaders();
        java.lang.String str22 = hTMLPageResponse18.getHeaderValue("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        java.lang.String str23 = hTMLPageResponse18.getResponseType();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(crawlerConfiguration8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str23, "com.soulgalore.crawler.http.connection.timeout");
    }

    @Test
    public void test08425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08425");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:1encoding:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout type:CrawlerURL url:Wrong content type", "AssetResponseCallable url:-1", (int) (short) 0, (long) (short) -1);
    }

    @Test
    public void test08426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08426");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:10");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher4 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil5 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = headerUtil5.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap9 = headerUtil5.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap11 = headerUtil5.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt");
        java.util.Map<java.lang.String, java.lang.String> strMap13 = headerUtil5.createHeadersFromString("CrawlerURL url:CrawlerURL url:errorassets.csv");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable15 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:Redirected to new domain", assetFetcher4, strMap13, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse21 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 32, strMap13, "AssetResponseCallable url:AssetResponseCallable url:errorassets.csv", "97", 583L, "AssetResponseCallable url:urls.txt", (long) (-1));
        java.lang.String str23 = hTMLPageResponse21.getHeaderValue("10");
        org.junit.Assert.assertNotNull(headerUtil5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test08427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08427");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.lang.String str5 = crawlerURL2.getHost();
        java.lang.String str6 = crawlerURL2.getHost();
        java.net.URI uRI7 = crawlerURL2.getUri();
        java.lang.String str8 = crawlerURL2.getUrl();
        java.lang.String str9 = crawlerURL2.getReferer();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(uRI7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "com.soulgalore.crawler.auth" + "'", str8, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "urls.txt" + "'", str9, "urls.txt");
    }

    @Test
    public void test08428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08428");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.lang.String str14 = hTMLPageResponse12.getResponseType();
        java.lang.String str15 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        java.net.URI uRI17 = crawlerURL16.getUri();
        java.lang.String str18 = crawlerURL16.getReferer();
        java.lang.String str19 = crawlerURL16.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse27 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL16, (int) (short) 100, strMap21, "CrawlerURL url:CrawlerURL url:CrawlerURL url:com.soulgalore.crawler.auth", "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:32encoding:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", 52L, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:AssetResponseCallable url:Unknown error type:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout", 0L);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.auth" + "'", str15, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertNull(uRI17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "urls.txt" + "'", str18, "urls.txt");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "urls.txt" + "'", str19, "urls.txt");
    }

    @Test
    public void test08429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08429");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        java.net.URI uRI4 = crawlerURL2.getUri();
        java.net.URI uRI5 = crawlerURL2.getUri();
        boolean boolean6 = crawlerURL2.isWrongSyntax();
        java.net.URI uRI7 = crawlerURL2.getUri();
        java.lang.String str8 = crawlerURL2.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL13 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray14 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL13 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet15, crawlerURLArray14);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray18 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet19 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet19, hTMLPageResponseArray18);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult21 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet15, hTMLPageResponseSet17, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet19);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet22 = crawlerResult21.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet23 = crawlerResult21.getNonWorkingUrls();
        java.lang.String str24 = crawlerResult21.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet25 = crawlerResult21.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean30 = crawlerURL29.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean34 = crawlerURL33.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL37 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI38 = crawlerURL37.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray39 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL29, crawlerURL33, crawlerURL37 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet40 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet40, crawlerURLArray39);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray42 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet43, hTMLPageResponseArray42);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL48 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray49 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL48 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet50 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet50, crawlerURLArray49);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet52 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray53 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet54 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet54, hTMLPageResponseArray53);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult56 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet50, hTMLPageResponseSet52, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet54);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult57 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet40, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet43, hTMLPageResponseSet52);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet58 = crawlerResult57.getVerifiedURLResponses();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL62 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray63 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL62 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet64 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet64, crawlerURLArray63);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet66 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray67 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet68 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet68, hTMLPageResponseArray67);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult70 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet64, hTMLPageResponseSet66, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet68);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet71 = crawlerResult70.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult72 = new com.soulgalore.crawler.core.CrawlerResult("hi!", crawlerURLSet25, hTMLPageResponseSet58, hTMLPageResponseSet71);
        java.lang.String str73 = crawlerResult72.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet74 = crawlerResult72.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet75 = crawlerResult72.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet76 = crawlerResult72.getUrls();
        java.lang.String str77 = crawlerResult72.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet78 = crawlerResult72.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet79 = crawlerResult72.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet80 = crawlerResult72.getNonWorkingUrls();
        boolean boolean81 = crawlerURL2.equals((java.lang.Object) hTMLPageResponseSet80);
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertNull(uRI4);
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(uRI7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "com.soulgalore.crawler.auth" + "'", str8, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURLArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet22);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(uRI38);
        org.junit.Assert.assertNotNull(crawlerURLArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet58);
        org.junit.Assert.assertNotNull(crawlerURLArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet71);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet74);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet75);
        org.junit.Assert.assertNotNull(crawlerURLSet76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet78);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet79);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test08430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08430");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("CrawlerURL url:100");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setRequestHeaders("100");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request headers wrongly configured, missing separator :100");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
    }

    @Test
    public void test08431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08431");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = hTMLPageResponse12.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        org.jsoup.nodes.Document document17 = hTMLPageResponse12.getBody();
        java.lang.String str18 = hTMLPageResponse12.getResponseType();
        org.jsoup.nodes.Document document19 = hTMLPageResponse12.getBody();
        java.lang.String str20 = hTMLPageResponse12.getResponseType();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str22 = hTMLPageResponse12.getResponseType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertNull(document17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(document19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
    }

    @Test
    public void test08432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08432");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int13 = hTMLPageResponse12.getResponseCode();
        int int14 = hTMLPageResponse12.getResponseCode();
        java.lang.String str15 = hTMLPageResponse12.getUrl();
        java.lang.String str16 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str18 = hTMLPageResponse12.getResponseType();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", "10");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL25 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean26 = crawlerURL25.isWrongSyntax();
        java.lang.String str27 = crawlerURL25.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse35 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL25, (int) 'a', strMap29, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str36 = hTMLPageResponse35.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = hTMLPageResponse35.getResponseHeaders();
        java.lang.String str38 = hTMLPageResponse35.getEncoding();
        java.lang.String str39 = hTMLPageResponse35.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL40 = hTMLPageResponse35.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL41 = hTMLPageResponse35.getPageUrl();
        int int42 = hTMLPageResponse35.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL43 = hTMLPageResponse35.getPageUrl();
        java.lang.String str44 = crawlerURL43.getReferer();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL48 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "Response timed out");
        com.soulgalore.crawler.util.HeaderUtil headerUtil50 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap52 = headerUtil50.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse58 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL48, (int) '4', strMap52, "com.soulgalore.crawler.http.socket.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 580, "com.soulgalore.crawler.auth", (long) (short) 1);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse64 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL43, (int) (byte) 1, strMap52, "AssetResponseCallable url:Malformed url", "urls.txt", (long) (byte) 10, "com.soulgalore.crawler.http.connection.timeout", (long) 97);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse70 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL21, 32, strMap52, "AssetResponseCallable url:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv", 35L, "com.soulgalore.crawler.nrofhttpthreads", (long) 97);
        boolean boolean71 = hTMLPageResponse12.equals((java.lang.Object) crawlerURL21);
        java.lang.String str72 = hTMLPageResponse12.getEncoding();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 97 + "'", int14 == 97);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.auth" + "'", str15, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str16, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "urls.txt" + "'", str27, "urls.txt");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str36, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str38, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str39, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL40);
        org.junit.Assert.assertNotNull(crawlerURL41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 97 + "'", int42 == 97);
        org.junit.Assert.assertNotNull(crawlerURL43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "urls.txt" + "'", str44, "urls.txt");
        org.junit.Assert.assertNotNull(headerUtil50);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str72, "com.soulgalore.crawler.http.socket.timeout");
    }

    @Test
    public void test08433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08433");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.lang.String str30 = hTMLPageResponse29.getEncoding();
        java.lang.String str31 = hTMLPageResponse29.toString();
        int int32 = hTMLPageResponse29.getResponseCode();
        long long33 = hTMLPageResponse29.getFetchTime();
        java.lang.String str34 = hTMLPageResponse29.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL35 = hTMLPageResponse29.getPageUrl();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Malformed url" + "'", str30, "Malformed url");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str31, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Malformed url" + "'", str34, "Malformed url");
        org.junit.Assert.assertNotNull(crawlerURL35);
    }

    @Test
    public void test08434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08434");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher4 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable14 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Redirected to new domain", assetFetcher4, strMap12, "com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse20 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (byte) 10, strMap12, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", "CrawlerURL url:com.soulgalore.crawler.auth", (long) 0, "100", (-1L));
        java.net.URI uRI21 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse27 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int28 = assetResponse27.getResponseCode();
        int int29 = assetResponse27.getResponseCode();
        long long30 = assetResponse27.getFetchTime();
        long long31 = assetResponse27.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse36 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean37 = assetResponse27.equals((java.lang.Object) 100L);
        java.lang.String str38 = assetResponse27.getReferer();
        java.lang.String str39 = assetResponse27.getReferer();
        long long40 = assetResponse27.getFetchTime();
        boolean boolean42 = assetResponse27.equals((java.lang.Object) (-1));
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher44 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL47 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI48 = crawlerURL47.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder50 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder52 = builder50.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration53 = builder52.build();
        java.lang.String str54 = crawlerConfiguration53.getStartUrl();
        int int55 = crawlerConfiguration53.getMaxLevels();
        int int56 = crawlerConfiguration53.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap57 = crawlerConfiguration53.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse63 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL47, (int) (short) 10, strMap57, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable65 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Malformed url", assetFetcher44, strMap57, "errorurls.txt");
        boolean boolean66 = assetResponse27.equals((java.lang.Object) strMap57);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse72 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 581, strMap57, "CrawlerURL url:100", "Unknown error", (long) (-1), "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads", (long) 100);
        java.lang.String str73 = hTMLPageResponse72.getResponseType();
        java.lang.String str75 = hTMLPageResponse72.getHeaderValue("Unknown error");
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(uRI21);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "100" + "'", str38, "100");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "100" + "'", str39, "100");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(uRI48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(crawlerConfiguration53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads" + "'", str73, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNull(str75);
    }

    @Test
    public void test08435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08435");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        long long16 = hTMLPageResponse12.getFetchTime();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder17.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration24 = builder17.build();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = crawlerConfiguration24.getRequestHeadersMap();
        boolean boolean26 = hTMLPageResponse12.equals((java.lang.Object) crawlerConfiguration24);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL27 = hTMLPageResponse12.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str29 = hTMLPageResponse12.getUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = hTMLPageResponse12.getResponseHeaders();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(crawlerConfiguration24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(crawlerURL27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "com.soulgalore.crawler.auth" + "'", str29, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(strMap30);
    }

    @Test
    public void test08436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08436");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        boolean boolean6 = crawlerConfiguration3.equals((java.lang.Object) true);
        java.lang.String str7 = crawlerConfiguration3.getRequestHeaders();
        java.lang.String str8 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = crawlerConfiguration3.getRequestHeadersMap();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean13 = crawlerURL12.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder15.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder15.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration20 = builder15.build();
        java.lang.String str21 = crawlerConfiguration20.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = crawlerConfiguration20.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse28 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL12, (-1), strMap22, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        java.lang.String str30 = hTMLPageResponse28.getHeaderValue("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL31 = hTMLPageResponse28.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL32 = hTMLPageResponse28.getPageUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = builder33.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = builder33.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = builder33.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder41 = builder39.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder43 = builder39.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration44 = builder43.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration45 = builder43.build();
        boolean boolean46 = hTMLPageResponse28.equals((java.lang.Object) builder43);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder48 = builder43.setOnlyOnPath("result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder50 = builder43.setRequestHeaders("AssetResponseCallable url:errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration51 = builder43.build();
        boolean boolean52 = crawlerConfiguration3.equals((java.lang.Object) crawlerConfiguration51);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(crawlerConfiguration20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(crawlerURL31);
        org.junit.Assert.assertNotNull(crawlerURL32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(crawlerConfiguration44);
        org.junit.Assert.assertNotNull(crawlerConfiguration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(crawlerConfiguration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test08437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08437");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder0.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder0.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder0.setRequestHeaders("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder0.setRequestHeaders("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder0.setNotOnPath("CrawlerURL url:errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setOnlyOnPath("CrawlerURL url:Wrong content type");
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
    }

    @Test
    public void test08438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08438");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder3 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder3.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration6 = builder5.build();
        java.lang.String str7 = crawlerConfiguration6.getStartUrl();
        int int8 = crawlerConfiguration6.getMaxLevels();
        int int9 = crawlerConfiguration6.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean13 = crawlerURL12.isWrongSyntax();
        java.lang.String str14 = crawlerURL12.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse22 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL12, (int) 'a', strMap16, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str23 = hTMLPageResponse22.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = hTMLPageResponse22.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = hTMLPageResponse22.getResponseHeaders();
        java.lang.String str26 = hTMLPageResponse22.getUrl();
        org.jsoup.nodes.Document document27 = hTMLPageResponse22.getBody();
        boolean boolean28 = crawlerConfiguration6.equals((java.lang.Object) hTMLPageResponse22);
        boolean boolean29 = crawlerURL1.equals((java.lang.Object) hTMLPageResponse22);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder31.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration34 = builder33.build();
        java.lang.String str35 = crawlerConfiguration34.getStartUrl();
        int int36 = crawlerConfiguration34.getMaxLevels();
        int int37 = crawlerConfiguration34.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = crawlerConfiguration34.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse44 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 582, strMap38, "urls.txt", "hi!", (long) (short) 0, "AssetResponseCallable url:result.csv", 10L);
        java.lang.String str45 = crawlerURL1.getUrl();
        java.lang.String str46 = crawlerURL1.getUrl();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(crawlerConfiguration6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "urls.txt" + "'", str14, "urls.txt");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str23, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "com.soulgalore.crawler.auth" + "'", str26, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(crawlerConfiguration34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str45, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str46, "com.soulgalore.crawler.nrofhttpthreads");
    }

    @Test
    public void test08439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08439");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int13 = hTMLPageResponse12.getResponseCode();
        int int14 = hTMLPageResponse12.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL15 = hTMLPageResponse12.getPageUrl();
        long long16 = hTMLPageResponse12.getFetchTime();
        java.lang.String str17 = hTMLPageResponse12.toString();
        int int18 = hTMLPageResponse12.getResponseCode();
        java.lang.Object obj19 = null;
        boolean boolean20 = hTMLPageResponse12.equals(obj19);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 97 + "'", int14 == 97);
        org.junit.Assert.assertNotNull(crawlerURL15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str17, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 97 + "'", int18 == 97);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test08440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08440");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration5.getRequestHeadersMap();
        boolean boolean8 = crawlerConfiguration5.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = crawlerConfiguration5.getRequestHeadersMap();
        boolean boolean10 = crawlerConfiguration5.isVerifyUrls();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder11.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder11.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration24 = builder23.build();
        boolean boolean25 = crawlerConfiguration5.equals((java.lang.Object) builder23);
        int int26 = crawlerConfiguration5.getMaxLevels();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(crawlerConfiguration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test08441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08441");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("CrawlerURL url:hi!", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth", (int) (byte) 1, (long) 581);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI7 = crawlerURL6.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder10.build();
        java.lang.String str12 = crawlerConfiguration11.getStartUrl();
        int int13 = crawlerConfiguration11.getMaxLevels();
        int int14 = crawlerConfiguration11.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean18 = crawlerURL17.isWrongSyntax();
        java.lang.String str19 = crawlerURL17.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse27 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL17, (int) 'a', strMap21, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str28 = hTMLPageResponse27.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = hTMLPageResponse27.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = hTMLPageResponse27.getResponseHeaders();
        java.lang.String str31 = hTMLPageResponse27.getUrl();
        org.jsoup.nodes.Document document32 = hTMLPageResponse27.getBody();
        boolean boolean33 = crawlerConfiguration11.equals((java.lang.Object) hTMLPageResponse27);
        boolean boolean34 = crawlerURL6.equals((java.lang.Object) hTMLPageResponse27);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder36.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration39 = builder38.build();
        java.lang.String str40 = crawlerConfiguration39.getStartUrl();
        int int41 = crawlerConfiguration39.getMaxLevels();
        int int42 = crawlerConfiguration39.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = crawlerConfiguration39.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse49 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL6, 582, strMap43, "urls.txt", "hi!", (long) (short) 0, "AssetResponseCallable url:result.csv", 10L);
        java.util.Map<java.lang.String, java.lang.String> strMap50 = hTMLPageResponse49.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL52 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI53 = crawlerURL52.getUri();
        boolean boolean54 = crawlerURL52.isWrongSyntax();
        java.lang.String str55 = crawlerURL52.getHost();
        java.net.URI uRI56 = crawlerURL52.getUri();
        java.net.URI uRI57 = crawlerURL52.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL61 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI62 = crawlerURL61.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder64 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder66 = builder64.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration67 = builder66.build();
        java.lang.String str68 = crawlerConfiguration67.getStartUrl();
        int int69 = crawlerConfiguration67.getMaxLevels();
        int int70 = crawlerConfiguration67.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap71 = crawlerConfiguration67.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse77 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL61, (int) (short) 10, strMap71, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int78 = hTMLPageResponse77.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap79 = hTMLPageResponse77.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse85 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL52, 0, strMap79, "CrawlerURL url:result.csv", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) 583, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (byte) 1);
        java.lang.String str86 = hTMLPageResponse85.getUrl();
        boolean boolean87 = hTMLPageResponse49.equals((java.lang.Object) str86);
        java.lang.String str88 = hTMLPageResponse49.getUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap89 = hTMLPageResponse49.getResponseHeaders();
        java.lang.String str90 = hTMLPageResponse49.getResponseType();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL91 = hTMLPageResponse49.getPageUrl();
        boolean boolean92 = assetResponse4.equals((java.lang.Object) hTMLPageResponse49);
        int int93 = hTMLPageResponse49.getResponseCode();
        org.junit.Assert.assertNull(uRI7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "urls.txt" + "'", str19, "urls.txt");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str28, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "com.soulgalore.crawler.auth" + "'", str31, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(crawlerConfiguration39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(uRI53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(uRI56);
        org.junit.Assert.assertNull(uRI57);
        org.junit.Assert.assertNull(uRI62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(crawlerConfiguration67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 10 + "'", int78 == 10);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str86, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str88, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "AssetResponseCallable url:result.csv" + "'", str90, "AssetResponseCallable url:result.csv");
        org.junit.Assert.assertNotNull(crawlerURL91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 582 + "'", int93 == 582);
    }

    @Test
    public void test08442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08442");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder4.setOnlyOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setOnlyOnPath("Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setOnlyOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setMaxLevels(580);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setStartUrl("CrawlerURL url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder20.setNotOnPath("CrawlerURL url:errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setStartUrl("CrawlerURL url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder22.setOnlyOnPath("HTMLPageResponseurl:hi!responseCode:-1encoding:errorurls.txt type:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder22.setOnlyOnPath("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder22.setNotOnPath("Malformed url");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
    }

    @Test
    public void test08443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08443");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        java.lang.String str20 = hTMLPageResponse18.getHeaderValue("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = hTMLPageResponse18.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = hTMLPageResponse18.getPageUrl();
        java.lang.String str23 = hTMLPageResponse18.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL26 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean27 = crawlerURL26.isWrongSyntax();
        java.lang.String str28 = crawlerURL26.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse36 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL26, (int) 'a', strMap30, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str37 = hTMLPageResponse36.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean39 = hTMLPageResponse36.equals((java.lang.Object) builder38);
        long long40 = hTMLPageResponse36.getFetchTime();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder41 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder43 = builder41.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder45 = builder41.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder47 = builder41.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration48 = builder41.build();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = crawlerConfiguration48.getRequestHeadersMap();
        boolean boolean50 = hTMLPageResponse36.equals((java.lang.Object) crawlerConfiguration48);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = crawlerConfiguration48.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap52 = crawlerConfiguration48.getRequestHeadersMap();
        boolean boolean53 = hTMLPageResponse18.equals((java.lang.Object) crawlerConfiguration48);
        org.jsoup.nodes.Document document54 = hTMLPageResponse18.getBody();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(crawlerURL21);
        org.junit.Assert.assertNotNull(crawlerURL22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "errorurls.txt" + "'", str23, "errorurls.txt");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "urls.txt" + "'", str28, "urls.txt");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "com.soulgalore.crawler.auth" + "'", str37, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 100L + "'", long40 == 100L);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(crawlerConfiguration48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(document54);
    }

    @Test
    public void test08444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08444");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder0.setStartUrl("result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setMaxLevels(1);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration13 = builder12.build();
        java.lang.String str14 = crawlerConfiguration13.getStartUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(crawlerConfiguration13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str14, "com.soulgalore.crawler.http.connection.timeout");
    }

    @Test
    public void test08445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08445");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.util.Map<java.lang.String, java.lang.String> strMap30 = hTMLPageResponse29.getResponseHeaders();
        org.jsoup.nodes.Document document31 = hTMLPageResponse29.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL32 = hTMLPageResponse29.getPageUrl();
        java.lang.String str33 = crawlerURL32.getUrl();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray34 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet35 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet35, assetResponseArray34);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray37 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet38 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet38, assetResponseArray37);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult40 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet35, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet38);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet41 = assetsVerificationResult40.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet42 = assetsVerificationResult40.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray43 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet44 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet44, assetResponseArray43);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray46 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet47 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet47, assetResponseArray46);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult49 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet44, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet47);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult50 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet42, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet44);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray51 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet52 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet52, assetResponseArray51);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray54 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet55 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet55, assetResponseArray54);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult57 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet52, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet55);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet58 = assetsVerificationResult57.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult59 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet42, assetResponseSet58);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet60 = assetsVerificationResult59.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet61 = assetsVerificationResult59.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet62 = assetsVerificationResult59.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray63 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet64 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet64, assetResponseArray63);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray66 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet67 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet67, assetResponseArray66);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult69 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet64, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet67);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet70 = assetsVerificationResult69.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet71 = assetsVerificationResult69.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet72 = assetsVerificationResult69.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet73 = assetsVerificationResult69.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult74 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet62, assetResponseSet73);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray75 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet76 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet76, assetResponseArray75);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray78 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet79 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet79, assetResponseArray78);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult81 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet76, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet79);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet82 = assetsVerificationResult81.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet83 = assetsVerificationResult81.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult84 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet62, assetResponseSet83);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet85 = assetsVerificationResult84.getWorkingAssets();
        boolean boolean86 = crawlerURL32.equals((java.lang.Object) assetsVerificationResult84);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet87 = assetsVerificationResult84.getNonWorkingAssets();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(document31);
        org.junit.Assert.assertNotNull(crawlerURL32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "com.soulgalore.crawler.auth" + "'", str33, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(assetResponseArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(assetResponseArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(assetResponseSet41);
        org.junit.Assert.assertNotNull(assetResponseSet42);
        org.junit.Assert.assertNotNull(assetResponseArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(assetResponseArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(assetResponseArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(assetResponseArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(assetResponseSet58);
        org.junit.Assert.assertNotNull(assetResponseSet60);
        org.junit.Assert.assertNotNull(assetResponseSet61);
        org.junit.Assert.assertNotNull(assetResponseSet62);
        org.junit.Assert.assertNotNull(assetResponseArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(assetResponseArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(assetResponseSet70);
        org.junit.Assert.assertNotNull(assetResponseSet71);
        org.junit.Assert.assertNotNull(assetResponseSet72);
        org.junit.Assert.assertNotNull(assetResponseSet73);
        org.junit.Assert.assertNotNull(assetResponseArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(assetResponseArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(assetResponseSet82);
        org.junit.Assert.assertNotNull(assetResponseSet83);
        org.junit.Assert.assertNotNull(assetResponseSet85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(assetResponseSet87);
    }

    @Test
    public void test08446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08446");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI23 = crawlerURL22.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL27 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean28 = crawlerURL27.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder30.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder30.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration35 = builder30.build();
        java.lang.String str36 = crawlerConfiguration35.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = crawlerConfiguration35.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse43 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL27, (-1), strMap37, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse49 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL22, 100, strMap37, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse55 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) 10, strMap37, "100", "errorassets.csv", (long) (byte) 100, "", (long) (short) 100);
        java.util.Map<java.lang.String, java.lang.String> strMap56 = hTMLPageResponse55.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL57 = hTMLPageResponse55.getPageUrl();
        java.lang.String str58 = hTMLPageResponse55.toString();
        int int59 = hTMLPageResponse55.getResponseCode();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(uRI23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(crawlerConfiguration35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(crawlerURL57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:" + "'", str58, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 10 + "'", int59 == 10);
    }

    @Test
    public void test08447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08447");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder3 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder3.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration6 = builder5.build();
        java.lang.String str7 = crawlerConfiguration6.getStartUrl();
        int int8 = crawlerConfiguration6.getMaxLevels();
        int int9 = crawlerConfiguration6.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean13 = crawlerURL12.isWrongSyntax();
        java.lang.String str14 = crawlerURL12.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse22 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL12, (int) 'a', strMap16, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str23 = hTMLPageResponse22.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = hTMLPageResponse22.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = hTMLPageResponse22.getResponseHeaders();
        java.lang.String str26 = hTMLPageResponse22.getUrl();
        org.jsoup.nodes.Document document27 = hTMLPageResponse22.getBody();
        boolean boolean28 = crawlerConfiguration6.equals((java.lang.Object) hTMLPageResponse22);
        boolean boolean29 = crawlerURL1.equals((java.lang.Object) hTMLPageResponse22);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder31.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration34 = builder33.build();
        java.lang.String str35 = crawlerConfiguration34.getStartUrl();
        int int36 = crawlerConfiguration34.getMaxLevels();
        int int37 = crawlerConfiguration34.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = crawlerConfiguration34.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse44 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 582, strMap38, "urls.txt", "hi!", (long) (short) 0, "AssetResponseCallable url:result.csv", 10L);
        java.lang.String str45 = hTMLPageResponse44.getResponseType();
        java.lang.String str46 = hTMLPageResponse44.getEncoding();
        org.jsoup.nodes.Document document47 = hTMLPageResponse44.getBody();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = hTMLPageResponse44.getResponseHeaders();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(crawlerConfiguration6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "urls.txt" + "'", str14, "urls.txt");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str23, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "com.soulgalore.crawler.auth" + "'", str26, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(crawlerConfiguration34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AssetResponseCallable url:result.csv" + "'", str45, "AssetResponseCallable url:result.csv");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNull(document47);
        org.junit.Assert.assertNotNull(strMap48);
    }

    @Test
    public void test08448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08448");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder0.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder0.setRequestHeaders("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setNotOnPath("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setNotOnPath("AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
    }

    @Test
    public void test08449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08449");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        int int6 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil7 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean8 = crawlerConfiguration5.equals((java.lang.Object) headerUtil7);
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil7.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil7.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil7.createHeadersFromString("AssetResponseCallable url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap16 = headerUtil7.createHeadersFromString("AssetResponseCallable url:Unknown error");
        java.util.Map<java.lang.String, java.lang.String> strMap18 = headerUtil7.createHeadersFromString("AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
        java.util.Map<java.lang.String, java.lang.String> strMap20 = headerUtil7.createHeadersFromString("CrawlerURL url:Wrong content type");
        java.util.Map<java.lang.String, java.lang.String> strMap22 = headerUtil7.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        java.util.Map<java.lang.String, java.lang.String> strMap24 = headerUtil7.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:errorassets.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap26 = headerUtil7.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:AssetResponseCallable url:Unknown error type:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(headerUtil7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap26);
    }

    @Test
    public void test08450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08450");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int13 = hTMLPageResponse12.getResponseCode();
        int int14 = hTMLPageResponse12.getResponseCode();
        java.lang.String str15 = hTMLPageResponse12.getUrl();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        java.lang.String str18 = crawlerURL17.getReferer();
        boolean boolean19 = crawlerURL17.isWrongSyntax();
        java.lang.String str20 = crawlerURL17.getUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 97 + "'", int14 == 97);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.auth" + "'", str15, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "urls.txt" + "'", str18, "urls.txt");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "com.soulgalore.crawler.auth" + "'", str20, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test08451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08451");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setOnlyOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setOnlyOnPath("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder16.setStartUrl("52");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder16.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:-1encoding:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads type:AssetResponseCallable url:errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder16.setMaxLevels(32);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration25 = builder24.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder24.setMaxLevels(308);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(crawlerConfiguration25);
        org.junit.Assert.assertNotNull(builder27);
    }

    @Test
    public void test08452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08452");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        boolean boolean22 = hTMLPageResponse12.equals((java.lang.Object) builder21);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder21.setOnlyOnPath("10");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration25 = builder24.build();
        java.lang.String str26 = crawlerConfiguration25.getOnlyOnPath();
        java.lang.String str27 = crawlerConfiguration25.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = crawlerConfiguration25.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = crawlerConfiguration25.getRequestHeadersMap();
        java.lang.String str30 = crawlerConfiguration25.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder31.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = builder31.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = builder31.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = builder37.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder41 = builder37.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration42 = builder41.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration43 = builder41.build();
        boolean boolean44 = crawlerConfiguration43.isVerifyUrls();
        boolean boolean45 = crawlerConfiguration43.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = crawlerConfiguration43.getRequestHeadersMap();
        boolean boolean47 = crawlerConfiguration25.equals((java.lang.Object) crawlerConfiguration43);
        boolean boolean48 = crawlerConfiguration43.isVerifyUrls();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(crawlerConfiguration25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "10" + "'", str26, "10");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "errorassets.csv" + "'", str30, "errorassets.csv");
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(crawlerConfiguration42);
        org.junit.Assert.assertNotNull(crawlerConfiguration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test08453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08453");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = hTMLPageResponse12.getResponseHeaders();
        int int17 = hTMLPageResponse12.getResponseCode();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = hTMLPageResponse12.getHeaderValue("com.soulgalore.crawler.auth");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 97 + "'", int17 == 97);
    }

    @Test
    public void test08454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08454");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:com.soulgalore.crawler.auth", "com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher5 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI9 = crawlerURL8.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration14 = builder13.build();
        java.lang.String str15 = crawlerConfiguration14.getStartUrl();
        int int16 = crawlerConfiguration14.getMaxLevels();
        int int17 = crawlerConfiguration14.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = crawlerConfiguration14.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse24 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, (int) (short) 10, strMap18, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable26 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("100", assetFetcher5, strMap18, "errorassets.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse32 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) 0, strMap18, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout", "CrawlerURL url:result.csv", (long) (short) 10, "-1", (long) 97);
        java.lang.String str33 = hTMLPageResponse32.getEncoding();
        long long34 = hTMLPageResponse32.getFetchTime();
        long long35 = hTMLPageResponse32.getFetchTime();
        java.lang.String str36 = hTMLPageResponse32.getUrl();
        org.junit.Assert.assertNull(uRI9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(crawlerConfiguration14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "CrawlerURL url:result.csv" + "'", str33, "CrawlerURL url:result.csv");
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 97L + "'", long34 == 97L);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 97L + "'", long35 == 97L);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str36, "CrawlerURL url:com.soulgalore.crawler.auth");
    }

    @Test
    public void test08455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08455");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder6.build();
        java.lang.String str8 = crawlerConfiguration7.getStartUrl();
        boolean boolean9 = crawlerConfiguration7.isVerifyUrls();
        java.lang.String str10 = crawlerConfiguration7.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = crawlerConfiguration7.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse17 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 0, strMap11, "CrawlerURL url:errorassets.csv", "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", (long) 583, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:-1encoding:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads type:AssetResponseCallable url:errorassets.csv", 1L);
        java.lang.String str18 = hTMLPageResponse17.getEncoding();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder19.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder23.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder23.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder23.setOnlyOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration32 = builder31.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = builder33.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = builder33.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = builder33.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration40 = builder39.build();
        boolean boolean41 = crawlerConfiguration32.equals((java.lang.Object) crawlerConfiguration40);
        java.lang.String str42 = crawlerConfiguration40.getRequestHeaders();
        java.lang.Class<?> wildcardClass43 = crawlerConfiguration40.getClass();
        boolean boolean44 = hTMLPageResponse17.equals((java.lang.Object) crawlerConfiguration40);
        java.lang.String str45 = hTMLPageResponse17.getEncoding();
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url" + "'", str18, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(crawlerConfiguration32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(crawlerConfiguration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url" + "'", str45, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
    }

    @Test
    public void test08456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08456");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "com.soulgalore.crawler.auth");
        java.lang.String str3 = crawlerURL2.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration8 = builder7.build();
        java.lang.String str9 = crawlerConfiguration8.getOnlyOnPath();
        boolean boolean10 = crawlerConfiguration8.isVerifyUrls();
        int int11 = crawlerConfiguration8.getMaxLevels();
        int int12 = crawlerConfiguration8.getMaxLevels();
        boolean boolean13 = crawlerConfiguration8.isVerifyUrls();
        boolean boolean14 = crawlerConfiguration8.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = crawlerConfiguration8.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse21 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap15, "Unknown error", "com.soulgalore.crawler.http.socket.timeout", (long) 10, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", 0L);
        java.lang.String str22 = hTMLPageResponse21.getResponseType();
        java.lang.String str24 = hTMLPageResponse21.getHeaderValue("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain");
        long long25 = hTMLPageResponse21.getFetchTime();
        java.lang.String str26 = hTMLPageResponse21.toString();
        java.lang.String str27 = hTMLPageResponse21.getUrl();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "CrawlerURL url:urls.txt" + "'", str3, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(crawlerConfiguration8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str22, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "HTMLPageResponseurl:urls.txtresponseCode:100encoding:com.soulgalore.crawler.http.socket.timeout type:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str26, "HTMLPageResponseurl:urls.txtresponseCode:100encoding:com.soulgalore.crawler.http.socket.timeout type:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "urls.txt" + "'", str27, "urls.txt");
    }

    @Test
    public void test08457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08457");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder4.setOnlyOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder4.setStartUrl("AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration17 = builder4.build();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = crawlerConfiguration17.getRequestHeadersMap();
        java.lang.String str19 = crawlerConfiguration17.getRequestHeaders();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(crawlerConfiguration17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test08458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08458");
        com.soulgalore.crawler.util.StatusCode statusCode0 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT;
        int int1 = statusCode0.getCode();
        int int2 = statusCode0.getCode();
        java.lang.String str3 = statusCode0.getFriendlyName();
        java.lang.String str4 = statusCode0.getFriendlyName();
        int int5 = statusCode0.getCode();
        java.lang.String str6 = statusCode0.getFriendlyName();
        int int7 = statusCode0.getCode();
        int int8 = statusCode0.getCode();
        int int9 = statusCode0.getCode();
        java.lang.String str10 = statusCode0.getFriendlyName();
        int int11 = statusCode0.getCode();
        java.lang.String str12 = statusCode0.getFriendlyName();
        org.junit.Assert.assertTrue("'" + statusCode0 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT + "'", statusCode0.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 580 + "'", int1 == 580);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 580 + "'", int2 == 580);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Response timed out" + "'", str3, "Response timed out");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Response timed out" + "'", str4, "Response timed out");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 580 + "'", int5 == 580);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Response timed out" + "'", str6, "Response timed out");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 580 + "'", int7 == 580);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 580 + "'", int8 == 580);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 580 + "'", int9 == 580);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Response timed out" + "'", str10, "Response timed out");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 580 + "'", int11 == 580);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Response timed out" + "'", str12, "Response timed out");
    }

    @Test
    public void test08459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08459");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", (int) ' ', 10L);
        java.lang.String str5 = assetResponse4.getUrl();
        java.lang.String str6 = assetResponse4.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder7.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder7.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder15.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setRequestHeaders("CrawlerURL url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setMaxLevels((int) 'a');
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration24 = builder23.build();
        boolean boolean25 = assetResponse4.equals((java.lang.Object) builder23);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(crawlerConfiguration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test08460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08460");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:AssetResponseCallable url:1", "com.soulgalore.crawler.http.connection.timeout", (int) (short) 100, 97L);
    }

    @Test
    public void test08461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08461");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.lang.String str2 = crawlerURL1.getUrl();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse8 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int9 = assetResponse8.getResponseCode();
        long long10 = assetResponse8.getFetchTime();
        java.lang.String str11 = assetResponse8.getUrl();
        java.lang.String str12 = assetResponse8.getReferer();
        int int13 = assetResponse8.getResponseCode();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration17 = builder14.build();
        boolean boolean18 = assetResponse8.equals((java.lang.Object) crawlerConfiguration17);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = crawlerConfiguration17.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse25 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 100, strMap19, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:", "AssetResponseCallable url:com.soulgalore.crawler.nrofhttpthreads", (long) 52, "", (long) '4');
        java.lang.String str26 = hTMLPageResponse25.getResponseType();
        org.jsoup.nodes.Document document27 = hTMLPageResponse25.getBody();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str2, "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "100" + "'", str12, "100");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(crawlerConfiguration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(document27);
    }

    @Test
    public void test08462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08462");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        int int6 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil7 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean8 = crawlerConfiguration5.equals((java.lang.Object) headerUtil7);
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil7.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil7.createHeadersFromString("CrawlerURL url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil7.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap16 = headerUtil7.createHeadersFromString("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        java.util.Map<java.lang.String, java.lang.String> strMap18 = headerUtil7.createHeadersFromString("CrawlerURL url:35");
        java.util.Map<java.lang.String, java.lang.String> strMap20 = headerUtil7.createHeadersFromString("AssetResponseCallable url:Unknown error");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(headerUtil7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test08463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08463");
        com.soulgalore.crawler.util.StatusCode statusCode0 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT;
        java.lang.String str1 = statusCode0.getFriendlyName();
        int int2 = statusCode0.getCode();
        int int3 = statusCode0.getCode();
        java.lang.String str4 = statusCode0.getFriendlyName();
        java.lang.String str5 = statusCode0.getFriendlyName();
        java.lang.String str6 = statusCode0.getFriendlyName();
        java.lang.String str7 = statusCode0.getFriendlyName();
        java.lang.String str8 = statusCode0.getFriendlyName();
        org.junit.Assert.assertTrue("'" + statusCode0 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT + "'", statusCode0.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Response timed out" + "'", str1, "Response timed out");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 580 + "'", int2 == 580);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 580 + "'", int3 == 580);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Response timed out" + "'", str4, "Response timed out");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Response timed out" + "'", str5, "Response timed out");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Response timed out" + "'", str6, "Response timed out");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Response timed out" + "'", str7, "Response timed out");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Response timed out" + "'", str8, "Response timed out");
    }

    @Test
    public void test08464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08464");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        java.lang.String str9 = assetResponse4.getUrl();
        long long10 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setVerifyUrls(false);
        boolean boolean16 = assetResponse4.equals((java.lang.Object) builder13);
        long long17 = assetResponse4.getFetchTime();
        int int18 = assetResponse4.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean22 = crawlerURL21.isWrongSyntax();
        java.lang.String str23 = crawlerURL21.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse31 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL21, (int) 'a', strMap25, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str32 = hTMLPageResponse31.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = hTMLPageResponse31.getResponseHeaders();
        java.lang.String str34 = hTMLPageResponse31.getEncoding();
        java.lang.String str35 = hTMLPageResponse31.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL36 = hTMLPageResponse31.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL37 = hTMLPageResponse31.getPageUrl();
        int int38 = hTMLPageResponse31.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = hTMLPageResponse31.getPageUrl();
        java.lang.String str40 = crawlerURL39.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder44 = builder42.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder46 = builder42.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration47 = builder42.build();
        java.lang.String str48 = crawlerConfiguration47.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = crawlerConfiguration47.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = crawlerConfiguration47.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse56 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL39, (int) (short) -1, strMap50, "AssetResponseCallable url:Malformed url", "0", (long) (byte) 10, "", (long) 581);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder57 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder59 = builder57.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder61 = builder57.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder63 = builder57.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder65 = builder63.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder67 = builder65.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder69 = builder65.setMaxLevels(10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder71 = builder65.setOnlyOnPath("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder73 = builder71.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder75 = builder71.setNotOnPath("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder77 = builder75.setMaxLevels((int) '4');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder79 = builder77.setStartUrl("CrawlerURL url:urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration80 = builder77.build();
        boolean boolean81 = hTMLPageResponse56.equals((java.lang.Object) builder77);
        boolean boolean82 = assetResponse4.equals((java.lang.Object) builder77);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "urls.txt" + "'", str23, "urls.txt");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str32, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str34, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str35, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL36);
        org.junit.Assert.assertNotNull(crawlerURL37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 97 + "'", int38 == 97);
        org.junit.Assert.assertNotNull(crawlerURL39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "urls.txt" + "'", str40, "urls.txt");
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(crawlerConfiguration47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(crawlerConfiguration80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test08465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08465");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder3 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder3.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration6 = builder5.build();
        java.lang.String str7 = crawlerConfiguration6.getStartUrl();
        int int8 = crawlerConfiguration6.getMaxLevels();
        int int9 = crawlerConfiguration6.getMaxLevels();
        java.lang.String str10 = crawlerConfiguration6.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = crawlerConfiguration6.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse17 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 97, strMap11, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", "CrawlerURL url:com.soulgalore.crawler.proxy", (long) 0, "", (long) 583);
        java.lang.String str18 = hTMLPageResponse17.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration22 = builder21.build();
        java.lang.String str23 = crawlerConfiguration22.getStartUrl();
        boolean boolean24 = crawlerConfiguration22.isVerifyUrls();
        java.lang.String str25 = crawlerConfiguration22.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = crawlerConfiguration22.getRequestHeadersMap();
        java.lang.String str27 = crawlerConfiguration22.getNotOnPath();
        boolean boolean28 = hTMLPageResponse17.equals((java.lang.Object) crawlerConfiguration22);
        java.lang.String str29 = crawlerConfiguration22.getOnlyOnPath();
        int int30 = crawlerConfiguration22.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder31.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = builder31.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = builder35.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = builder35.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder41 = builder35.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder43 = builder35.setOnlyOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder45 = builder43.setOnlyOnPath("Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder47 = builder43.setOnlyOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration48 = builder43.build();
        boolean boolean50 = crawlerConfiguration48.equals((java.lang.Object) (short) 1);
        int int51 = crawlerConfiguration48.getMaxLevels();
        boolean boolean52 = crawlerConfiguration22.equals((java.lang.Object) int51);
        java.lang.String str53 = crawlerConfiguration22.getStartUrl();
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(crawlerConfiguration6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "CrawlerURL url:urls.txt" + "'", str18, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(crawlerConfiguration22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(crawlerConfiguration48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(str53);
    }

    @Test
    public void test08466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08466");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:CrawlerURL url:1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain", "CrawlerURL url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads", 100, (long) (short) 100);
    }

    @Test
    public void test08467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08467");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout", "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:");
    }

    @Test
    public void test08468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08468");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder3 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder3.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration6 = builder5.build();
        java.lang.String str7 = crawlerConfiguration6.getStartUrl();
        int int8 = crawlerConfiguration6.getMaxLevels();
        int int9 = crawlerConfiguration6.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean13 = crawlerURL12.isWrongSyntax();
        java.lang.String str14 = crawlerURL12.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse22 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL12, (int) 'a', strMap16, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str23 = hTMLPageResponse22.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = hTMLPageResponse22.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = hTMLPageResponse22.getResponseHeaders();
        java.lang.String str26 = hTMLPageResponse22.getUrl();
        org.jsoup.nodes.Document document27 = hTMLPageResponse22.getBody();
        boolean boolean28 = crawlerConfiguration6.equals((java.lang.Object) hTMLPageResponse22);
        boolean boolean29 = crawlerURL1.equals((java.lang.Object) hTMLPageResponse22);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder31.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration34 = builder33.build();
        java.lang.String str35 = crawlerConfiguration34.getStartUrl();
        int int36 = crawlerConfiguration34.getMaxLevels();
        int int37 = crawlerConfiguration34.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = crawlerConfiguration34.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse44 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 582, strMap38, "urls.txt", "hi!", (long) (short) 0, "AssetResponseCallable url:result.csv", 10L);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = hTMLPageResponse44.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL47 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI48 = crawlerURL47.getUri();
        boolean boolean49 = crawlerURL47.isWrongSyntax();
        java.lang.String str50 = crawlerURL47.getHost();
        java.net.URI uRI51 = crawlerURL47.getUri();
        java.net.URI uRI52 = crawlerURL47.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL56 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI57 = crawlerURL56.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder59 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder61 = builder59.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration62 = builder61.build();
        java.lang.String str63 = crawlerConfiguration62.getStartUrl();
        int int64 = crawlerConfiguration62.getMaxLevels();
        int int65 = crawlerConfiguration62.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap66 = crawlerConfiguration62.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse72 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL56, (int) (short) 10, strMap66, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int73 = hTMLPageResponse72.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap74 = hTMLPageResponse72.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse80 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL47, 0, strMap74, "CrawlerURL url:result.csv", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) 583, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (byte) 1);
        java.lang.String str81 = hTMLPageResponse80.getUrl();
        boolean boolean82 = hTMLPageResponse44.equals((java.lang.Object) str81);
        java.lang.String str83 = hTMLPageResponse44.getResponseType();
        java.lang.String str85 = hTMLPageResponse44.getHeaderValue("CrawlerURL url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.lang.String str86 = hTMLPageResponse44.getUrl();
        int int87 = hTMLPageResponse44.getResponseCode();
        long long88 = hTMLPageResponse44.getFetchTime();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(crawlerConfiguration6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "urls.txt" + "'", str14, "urls.txt");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str23, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "com.soulgalore.crawler.auth" + "'", str26, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(crawlerConfiguration34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(uRI48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(uRI51);
        org.junit.Assert.assertNull(uRI52);
        org.junit.Assert.assertNull(uRI57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(crawlerConfiguration62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 10 + "'", int73 == 10);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str81, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "AssetResponseCallable url:result.csv" + "'", str83, "AssetResponseCallable url:result.csv");
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str86, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 582 + "'", int87 == 582);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 10L + "'", long88 == 10L);
    }

    @Test
    public void test08469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08469");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setOnlyOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder12.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder18.setMaxLevels(52);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration23 = builder22.build();
        java.lang.String str24 = crawlerConfiguration23.getStartUrl();
        int int25 = crawlerConfiguration23.getMaxLevels();
        java.lang.String str26 = crawlerConfiguration23.getOnlyOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(crawlerConfiguration23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "urls.txt" + "'", str26, "urls.txt");
    }

    @Test
    public void test08470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08470");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "com.soulgalore.crawler.auth");
        java.lang.String str3 = crawlerURL2.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean7 = crawlerURL6.isWrongSyntax();
        java.lang.String str8 = crawlerURL6.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse16 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL6, (int) 'a', strMap10, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str17 = hTMLPageResponse16.getEncoding();
        java.lang.String str18 = hTMLPageResponse16.getResponseType();
        java.lang.String str19 = hTMLPageResponse16.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = hTMLPageResponse16.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "com.soulgalore.crawler.auth");
        java.lang.String str25 = crawlerURL24.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration30 = builder29.build();
        java.lang.String str31 = crawlerConfiguration30.getOnlyOnPath();
        boolean boolean32 = crawlerConfiguration30.isVerifyUrls();
        int int33 = crawlerConfiguration30.getMaxLevels();
        int int34 = crawlerConfiguration30.getMaxLevels();
        boolean boolean35 = crawlerConfiguration30.isVerifyUrls();
        boolean boolean36 = crawlerConfiguration30.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = crawlerConfiguration30.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse43 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL24, 100, strMap37, "Unknown error", "com.soulgalore.crawler.http.socket.timeout", (long) 10, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", 0L);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse49 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, (int) '4', strMap37, "97", "100", (long) (byte) 1, "com.soulgalore.crawler.http.socket.timeout", (long) (byte) -1);
        java.lang.String str50 = hTMLPageResponse49.toString();
        java.lang.Object obj51 = null;
        boolean boolean52 = hTMLPageResponse49.equals(obj51);
        boolean boolean53 = crawlerURL2.equals((java.lang.Object) hTMLPageResponse49);
        java.lang.Class<?> wildcardClass54 = hTMLPageResponse49.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "urls.txt" + "'", str3, "urls.txt");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "urls.txt" + "'", str8, "urls.txt");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str17, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "com.soulgalore.crawler.auth" + "'", str19, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "CrawlerURL url:urls.txt" + "'", str25, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(crawlerConfiguration30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:100 type:com.soulgalore.crawler.http.socket.timeout" + "'", str50, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:100 type:com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test08471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08471");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder10.build();
        boolean boolean12 = crawlerConfiguration11.isVerifyUrls();
        java.lang.String str13 = crawlerConfiguration11.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test08472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08472");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration8 = builder7.build();
        java.lang.String str9 = crawlerConfiguration8.getStartUrl();
        int int10 = crawlerConfiguration8.getMaxLevels();
        int int11 = crawlerConfiguration8.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration8.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (short) 10, strMap12, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        java.lang.String str19 = hTMLPageResponse18.toString();
        java.lang.String str20 = hTMLPageResponse18.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = hTMLPageResponse18.getPageUrl();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(crawlerConfiguration8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout" + "'", str19, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout" + "'", str20, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertNotNull(crawlerURL21);
    }

    @Test
    public void test08473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08473");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean6 = crawlerURL5.isWrongSyntax();
        java.lang.String str7 = crawlerURL5.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse15 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) 'a', strMap9, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str16 = hTMLPageResponse15.getUrl();
        boolean boolean17 = crawlerURL1.equals((java.lang.Object) str16);
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse22 = new com.soulgalore.crawler.core.assets.AssetResponse("", "errorurls.txt", 97, (-1L));
        java.lang.String str23 = assetResponse22.getReferer();
        int int24 = assetResponse22.getResponseCode();
        boolean boolean25 = crawlerURL1.equals((java.lang.Object) int24);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI30 = crawlerURL29.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration35 = builder34.build();
        java.lang.String str36 = crawlerConfiguration35.getStartUrl();
        int int37 = crawlerConfiguration35.getMaxLevels();
        int int38 = crawlerConfiguration35.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = crawlerConfiguration35.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, (int) (short) 10, strMap39, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int46 = hTMLPageResponse45.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = hTMLPageResponse45.getResponseHeaders();
        java.lang.String str49 = hTMLPageResponse45.getHeaderValue("");
        java.util.Map<java.lang.String, java.lang.String> strMap50 = hTMLPageResponse45.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse56 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 100, strMap50, "52", "HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", (long) (short) 0, "", (long) 582);
        java.lang.String str57 = hTMLPageResponse56.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL60 = new com.soulgalore.crawler.core.CrawlerURL("-1", "com.soulgalore.crawler.auth");
        java.lang.String str61 = crawlerURL60.getUrl();
        boolean boolean62 = hTMLPageResponse56.equals((java.lang.Object) crawlerURL60);
        java.lang.String str63 = crawlerURL60.getReferer();
        boolean boolean64 = crawlerURL60.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder66 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder68 = builder66.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder70 = builder66.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration71 = builder66.build();
        int int72 = crawlerConfiguration71.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil73 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean74 = crawlerConfiguration71.equals((java.lang.Object) headerUtil73);
        java.util.Map<java.lang.String, java.lang.String> strMap76 = headerUtil73.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap78 = headerUtil73.createHeadersFromString("CrawlerURL url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap80 = headerUtil73.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap82 = headerUtil73.createHeadersFromString("CrawlerURL url:errorassets.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap84 = headerUtil73.createHeadersFromString("CrawlerURL url:CrawlerURL url:errorassets.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse90 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL60, 10, strMap84, "HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", "", 35L, "AssetResponseCallable url:result.csv", 0L);
        java.lang.String str91 = crawlerURL60.getHost();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "urls.txt" + "'", str7, "urls.txt");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "errorurls.txt" + "'", str23, "errorurls.txt");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 97 + "'", int24 == 97);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(uRI30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(crawlerConfiguration35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:" + "'", str57, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "-1" + "'", str61, "-1");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "com.soulgalore.crawler.auth" + "'", str63, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(crawlerConfiguration71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(headerUtil73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNull(str91);
    }

    @Test
    public void test08474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08474");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setStartUrl("32");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder16.setNotOnPath("Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder16.setRequestHeaders("HTMLPageResponseurl:hi!responseCode:-1encoding:errorurls.txt type:result.csv");
        java.lang.Class<?> wildcardClass23 = builder16.getClass();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test08475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08475");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder10.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration12 = builder10.build();
        boolean boolean13 = crawlerConfiguration12.isVerifyUrls();
        java.lang.String str14 = crawlerConfiguration12.getNotOnPath();
        boolean boolean15 = crawlerConfiguration12.isVerifyUrls();
        java.lang.String str16 = crawlerConfiguration12.getStartUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration20 = builder19.build();
        java.lang.String str21 = crawlerConfiguration20.getOnlyOnPath();
        boolean boolean22 = crawlerConfiguration20.isVerifyUrls();
        int int23 = crawlerConfiguration20.getMaxLevels();
        int int24 = crawlerConfiguration20.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL27 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean28 = crawlerURL27.isWrongSyntax();
        java.lang.String str29 = crawlerURL27.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse37 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL27, (int) 'a', strMap31, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str38 = hTMLPageResponse37.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean40 = hTMLPageResponse37.equals((java.lang.Object) builder39);
        boolean boolean41 = crawlerConfiguration20.equals((java.lang.Object) builder39);
        java.lang.String str42 = crawlerConfiguration20.getStartUrl();
        java.lang.Class<?> wildcardClass43 = crawlerConfiguration20.getClass();
        boolean boolean44 = crawlerConfiguration12.equals((java.lang.Object) crawlerConfiguration20);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertNotNull(crawlerConfiguration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "urls.txt" + "'", str14, "urls.txt");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str16, "com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(crawlerConfiguration20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "urls.txt" + "'", str29, "urls.txt");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "com.soulgalore.crawler.auth" + "'", str38, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test08476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08476");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int13 = hTMLPageResponse12.getResponseCode();
        int int14 = hTMLPageResponse12.getResponseCode();
        java.lang.String str15 = hTMLPageResponse12.toString();
        long long16 = hTMLPageResponse12.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        int int19 = hTMLPageResponse12.getResponseCode();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 97 + "'", int14 == 97);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str15, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
    }

    @Test
    public void test08477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08477");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setMaxLevels(1);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder8.build();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration11.getRequestHeadersMap();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray17 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL16 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet18 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet18, crawlerURLArray17);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet20 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray21 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet22, hTMLPageResponseArray21);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult24 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet18, hTMLPageResponseSet20, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet22);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet25 = crawlerResult24.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet26 = crawlerResult24.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet27 = crawlerResult24.getNonWorkingUrls();
        java.lang.String str28 = crawlerResult24.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet29 = crawlerResult24.getNonWorkingUrls();
        boolean boolean30 = crawlerConfiguration11.equals((java.lang.Object) crawlerResult24);
        java.lang.String str31 = crawlerResult24.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet32 = crawlerResult24.getNonWorkingUrls();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(crawlerURLArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet25);
        org.junit.Assert.assertNotNull(crawlerURLSet26);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet32);
    }

    @Test
    public void test08478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08478");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder10.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder10.setMaxLevels((-1));
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder10.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder10.setNotOnPath("CrawlerURL url:CrawlerURL url:35");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setMaxLevels(100);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
    }

    @Test
    public void test08479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08479");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        java.lang.String str3 = crawlerURL1.getUrl();
        java.lang.String str4 = crawlerURL1.getHost();
        boolean boolean5 = crawlerURL1.isWrongSyntax();
        java.lang.String str6 = crawlerURL1.getHost();
        java.net.URI uRI7 = crawlerURL1.getUri();
        java.net.URI uRI8 = crawlerURL1.getUri();
        java.lang.String str9 = crawlerURL1.getUrl();
        java.net.URI uRI10 = crawlerURL1.getUri();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str3, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(uRI7);
        org.junit.Assert.assertNull(uRI8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str9, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNull(uRI10);
    }

    @Test
    public void test08480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08480");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder8.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration19 = builder18.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration20 = builder18.build();
        boolean boolean21 = crawlerConfiguration3.equals((java.lang.Object) crawlerConfiguration20);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder22.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration27 = builder22.build();
        int int28 = crawlerConfiguration27.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil29 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean30 = crawlerConfiguration27.equals((java.lang.Object) headerUtil29);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = headerUtil29.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap34 = headerUtil29.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap36 = headerUtil29.createHeadersFromString("AssetResponseCallable url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap38 = headerUtil29.createHeadersFromString("CrawlerURL url:urls.txt");
        java.util.Map<java.lang.String, java.lang.String> strMap40 = headerUtil29.createHeadersFromString("AssetResponseCallable url:100");
        boolean boolean41 = crawlerConfiguration20.equals((java.lang.Object) headerUtil29);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = headerUtil29.createHeadersFromString("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap45 = headerUtil29.createHeadersFromString("");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(crawlerConfiguration19);
        org.junit.Assert.assertNotNull(crawlerConfiguration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(crawlerConfiguration27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(headerUtil29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap45);
    }

    @Test
    public void test08481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08481");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setStartUrl("-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setRequestHeaders("AssetResponseCallable url:CrawlerURL url:10");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder4.setStartUrl("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setRequestHeaders("AssetResponseCallable url:0");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test08482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08482");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url", "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", 1, (long) (byte) -1);
        java.lang.String str5 = assetResponse4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url" + "'", str5, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
    }

    @Test
    public void test08483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08483");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder0.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder0.setRequestHeaders("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder9.setNotOnPath("Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder9.setNotOnPath("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder15.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder15.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setNotOnPath("CrawlerURL url:HTMLPageResponseurl:CrawlerURL url:com.soulgalore.crawler.authresponseCode:0encoding:CrawlerURL url:result.csv type:-1");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
    }

    @Test
    public void test08484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08484");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil2 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = headerUtil2.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable6 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("100", assetFetcher1, strMap4, "CrawlerURL url:com.soulgalore.crawler.auth");
        java.lang.String str7 = assetResponseCallable6.toString();
        java.lang.String str8 = assetResponseCallable6.toString();
        java.lang.String str9 = assetResponseCallable6.toString();
        java.lang.String str10 = assetResponseCallable6.toString();
        java.lang.String str11 = assetResponseCallable6.toString();
        org.junit.Assert.assertNotNull(headerUtil2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AssetResponseCallable url:100" + "'", str7, "AssetResponseCallable url:100");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AssetResponseCallable url:100" + "'", str8, "AssetResponseCallable url:100");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AssetResponseCallable url:100" + "'", str9, "AssetResponseCallable url:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AssetResponseCallable url:100" + "'", str10, "AssetResponseCallable url:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AssetResponseCallable url:100" + "'", str11, "AssetResponseCallable url:100");
    }

    @Test
    public void test08485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08485");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setMaxLevels(308);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setNotOnPath("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder18.setOnlyOnPath("AssetResponseCallable url:CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:10");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test08486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08486");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean7 = crawlerURL6.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder9.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration14 = builder9.build();
        java.lang.String str15 = crawlerConfiguration14.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = crawlerConfiguration14.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse22 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL6, (-1), strMap16, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int23 = hTMLPageResponse22.getResponseCode();
        java.lang.String str24 = hTMLPageResponse22.getResponseType();
        java.lang.String str26 = hTMLPageResponse22.getHeaderValue("urls.txt");
        boolean boolean27 = crawlerURL2.equals((java.lang.Object) "urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder29.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder29.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration34 = builder29.build();
        int int35 = crawlerConfiguration34.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil36 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean37 = crawlerConfiguration34.equals((java.lang.Object) headerUtil36);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = headerUtil36.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap41 = headerUtil36.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap43 = headerUtil36.createHeadersFromString("AssetResponseCallable url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap45 = headerUtil36.createHeadersFromString("CrawlerURL url:urls.txt");
        java.util.Map<java.lang.String, java.lang.String> strMap47 = headerUtil36.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse53 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 580, strMap47, "hi!", "AssetResponseCallable url:com.soulgalore.crawler.nrofhttpthreads", (long) '#', "AssetResponseCallable url:CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) (short) -1);
        java.lang.Class<?> wildcardClass54 = hTMLPageResponse53.getClass();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(crawlerConfiguration14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "com.soulgalore.crawler.auth" + "'", str24, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(crawlerConfiguration34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(headerUtil36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test08487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08487");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("CrawlerURL url:result.csv", "errorurls.txt", (int) '#', (long) 580);
        long long5 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse10 = new com.soulgalore.crawler.core.assets.AssetResponse("100", "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", (int) '4', (long) 1);
        int int11 = assetResponse10.getResponseCode();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray12 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13, assetResponseArray12);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray15 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet16 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet16, assetResponseArray15);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult18 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet16);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet19 = assetsVerificationResult18.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = assetsVerificationResult18.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray21 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, assetResponseArray21);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray24 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25, assetResponseArray24);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult27 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult28 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet20, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray29 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet30 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30, assetResponseArray29);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray32 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet33 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33, assetResponseArray32);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult35 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet36 = assetsVerificationResult35.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult37 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet20, assetResponseSet36);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet38 = assetsVerificationResult37.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray39 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40, assetResponseArray39);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray42 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet43 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet43, assetResponseArray42);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult45 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet43);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet46 = assetsVerificationResult45.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet47 = assetsVerificationResult45.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray48 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet49 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet49, assetResponseArray48);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray51 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet52 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet52, assetResponseArray51);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult54 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet49, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet52);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet55 = assetsVerificationResult54.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet56 = assetsVerificationResult54.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray57 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet58 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet58, assetResponseArray57);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray60 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet61 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet61, assetResponseArray60);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult63 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet58, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet61);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult64 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet56, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet58);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray65 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet66 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet66, assetResponseArray65);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray68 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet69 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet69, assetResponseArray68);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult71 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet66, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet69);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet72 = assetsVerificationResult71.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult73 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet56, assetResponseSet72);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult74 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet47, assetResponseSet56);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet75 = assetsVerificationResult74.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult76 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet38, assetResponseSet75);
        boolean boolean77 = assetResponse10.equals((java.lang.Object) assetResponseSet38);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet78 = null;
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult79 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet38, assetResponseSet78);
        boolean boolean80 = assetResponse4.equals((java.lang.Object) assetResponseSet38);
        java.lang.String str81 = assetResponse4.getUrl();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 580L + "'", long5 == 580L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNotNull(assetResponseArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(assetResponseArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(assetResponseSet19);
        org.junit.Assert.assertNotNull(assetResponseSet20);
        org.junit.Assert.assertNotNull(assetResponseArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(assetResponseArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(assetResponseArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(assetResponseArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(assetResponseSet36);
        org.junit.Assert.assertNotNull(assetResponseSet38);
        org.junit.Assert.assertNotNull(assetResponseArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(assetResponseArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(assetResponseSet46);
        org.junit.Assert.assertNotNull(assetResponseSet47);
        org.junit.Assert.assertNotNull(assetResponseArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(assetResponseArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(assetResponseSet55);
        org.junit.Assert.assertNotNull(assetResponseSet56);
        org.junit.Assert.assertNotNull(assetResponseArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(assetResponseArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(assetResponseArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(assetResponseArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(assetResponseSet72);
        org.junit.Assert.assertNotNull(assetResponseSet75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "CrawlerURL url:result.csv" + "'", str81, "CrawlerURL url:result.csv");
    }

    @Test
    public void test08488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08488");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.http.connection.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", 0, 10L);
        java.lang.String str5 = assetResponse4.getUrl();
        int int6 = assetResponse4.getResponseCode();
        java.lang.String str7 = assetResponse4.getUrl();
        long long8 = assetResponse4.getFetchTime();
        java.lang.String str9 = assetResponse4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str5, "com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str7, "com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10L + "'", long8 == 10L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str9, "com.soulgalore.crawler.http.connection.timeout");
    }

    @Test
    public void test08489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08489");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        boolean boolean2 = crawlerURL1.isWrongSyntax();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test08490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08490");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder2.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder2.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration9 = builder8.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder8.build();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable13 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:CrawlerURL url:10", assetFetcher1, strMap11, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url");
        java.lang.String str14 = assetResponseCallable13.toString();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(crawlerConfiguration9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:10" + "'", str14, "AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:10");
    }

    @Test
    public void test08491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08491");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet4 = authUtil0.createAuthsFromString("CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"AssetResponseCallable url\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
        org.junit.Assert.assertNotNull(authSet2);
    }

    @Test
    public void test08492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08492");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = assetsVerificationResult6.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray11 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, assetResponseArray11);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray14 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet15 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15, assetResponseArray14);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult17 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = assetsVerificationResult17.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult19 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet10, assetResponseSet18);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = assetsVerificationResult19.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet21 = assetsVerificationResult19.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = assetsVerificationResult19.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet23 = assetsVerificationResult19.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet24 = assetsVerificationResult19.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = assetsVerificationResult19.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray26 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet27 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet27, assetResponseArray26);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray29 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet30 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30, assetResponseArray29);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult32 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet27, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet33 = assetsVerificationResult32.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet34 = assetsVerificationResult32.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet35 = assetsVerificationResult32.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet36 = assetsVerificationResult32.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet37 = assetsVerificationResult32.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet38 = assetsVerificationResult32.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet39 = assetsVerificationResult32.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = assetsVerificationResult32.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult41 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet25, assetResponseSet40);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet42 = assetsVerificationResult41.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet43 = assetsVerificationResult41.getNonWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseSet9);
        org.junit.Assert.assertNotNull(assetResponseSet10);
        org.junit.Assert.assertNotNull(assetResponseArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(assetResponseArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(assetResponseSet18);
        org.junit.Assert.assertNotNull(assetResponseSet20);
        org.junit.Assert.assertNotNull(assetResponseSet21);
        org.junit.Assert.assertNotNull(assetResponseSet22);
        org.junit.Assert.assertNotNull(assetResponseSet23);
        org.junit.Assert.assertNotNull(assetResponseSet24);
        org.junit.Assert.assertNotNull(assetResponseSet25);
        org.junit.Assert.assertNotNull(assetResponseArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(assetResponseArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(assetResponseSet33);
        org.junit.Assert.assertNotNull(assetResponseSet34);
        org.junit.Assert.assertNotNull(assetResponseSet35);
        org.junit.Assert.assertNotNull(assetResponseSet36);
        org.junit.Assert.assertNotNull(assetResponseSet37);
        org.junit.Assert.assertNotNull(assetResponseSet38);
        org.junit.Assert.assertNotNull(assetResponseSet39);
        org.junit.Assert.assertNotNull(assetResponseSet40);
        org.junit.Assert.assertNotNull(assetResponseSet42);
        org.junit.Assert.assertNotNull(assetResponseSet43);
    }

    @Test
    public void test08493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08493");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("CrawlerURL url:result.csv", "errorurls.txt", (int) '#', (long) 580);
        java.lang.String str5 = assetResponse4.getUrl();
        com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider11 = new com.soulgalore.crawler.guice.HttpClientProvider((int) (short) 100, (int) (byte) 1, (int) (byte) 100, "", "0");
        org.apache.http.client.HttpClient httpClient12 = httpClientProvider11.get();
        org.apache.http.client.HttpClient httpClient13 = httpClientProvider11.get();
        org.apache.http.client.HttpClient httpClient14 = httpClientProvider11.get();
        org.apache.http.client.HttpClient httpClient15 = httpClientProvider11.get();
        org.apache.http.client.HttpClient httpClient16 = httpClientProvider11.get();
        org.apache.http.client.HttpClient httpClient17 = httpClientProvider11.get();
        boolean boolean18 = assetResponse4.equals((java.lang.Object) httpClientProvider11);
        java.lang.String str19 = assetResponse4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CrawlerURL url:result.csv" + "'", str5, "CrawlerURL url:result.csv");
        org.junit.Assert.assertNotNull(httpClient12);
        org.junit.Assert.assertNotNull(httpClient13);
        org.junit.Assert.assertNotNull(httpClient14);
        org.junit.Assert.assertNotNull(httpClient15);
        org.junit.Assert.assertNotNull(httpClient16);
        org.junit.Assert.assertNotNull(httpClient17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "CrawlerURL url:result.csv" + "'", str19, "CrawlerURL url:result.csv");
    }

    @Test
    public void test08494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08494");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("Response timed out", "HTMLPageResponseurl:hi!responseCode:-1encoding:errorurls.txt type:result.csv", 0, (long) 582);
    }

    @Test
    public void test08495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08495");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "Redirected to new domain", 100, 581L);
        long long5 = assetResponse4.getFetchTime();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 581L + "'", long5 == 581L);
    }

    @Test
    public void test08496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08496");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.lang.String str2 = crawlerURL1.toString();
        java.lang.String str3 = crawlerURL1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str2, "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str3, "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
    }

    @Test
    public void test08497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08497");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        java.lang.String str18 = crawlerURL17.getUrl();
        java.lang.String str19 = crawlerURL17.getUrl();
        java.lang.String str20 = crawlerURL17.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder22.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration27 = builder22.build();
        java.lang.String str28 = crawlerConfiguration27.getRequestHeaders();
        java.lang.String str29 = crawlerConfiguration27.getRequestHeaders();
        boolean boolean31 = crawlerConfiguration27.equals((java.lang.Object) 0.0d);
        boolean boolean32 = crawlerConfiguration27.isVerifyUrls();
        java.lang.String str33 = crawlerConfiguration27.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = crawlerConfiguration27.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse40 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL17, 0, strMap34, "AssetResponseCallable url:CrawlerURL url:hi!", "Response timed out", (long) (byte) -1, "10", (long) 100);
        java.lang.String str41 = crawlerURL17.getUrl();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse47 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int48 = assetResponse47.getResponseCode();
        long long49 = assetResponse47.getFetchTime();
        java.lang.String str50 = assetResponse47.getUrl();
        java.lang.String str51 = assetResponse47.getReferer();
        int int52 = assetResponse47.getResponseCode();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder53 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder55 = builder53.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration56 = builder53.build();
        boolean boolean57 = assetResponse47.equals((java.lang.Object) crawlerConfiguration56);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher59 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder60 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder62 = builder60.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder64 = builder60.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder66 = builder60.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration67 = builder60.build();
        java.util.Map<java.lang.String, java.lang.String> strMap68 = crawlerConfiguration67.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable70 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("10", assetFetcher59, strMap68, "CrawlerURL url:urls.txt");
        boolean boolean71 = assetResponse47.equals((java.lang.Object) strMap68);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse77 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL17, 1, strMap68, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain", (long) 'a', "32", (long) (short) 1);
        java.lang.String str78 = hTMLPageResponse77.getResponseType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.auth" + "'", str18, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "com.soulgalore.crawler.auth" + "'", str19, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "com.soulgalore.crawler.auth" + "'", str20, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(crawlerConfiguration27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "com.soulgalore.crawler.auth" + "'", str41, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "100" + "'", str51, "100");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(crawlerConfiguration56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(crawlerConfiguration67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "32" + "'", str78, "32");
    }

    @Test
    public void test08498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08498");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet18 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray23 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL22 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, crawlerURLArray23);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray27 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28, hTMLPageResponseArray27);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult30 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, hTMLPageResponseSet26, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet31 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet32 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet33 = crawlerResult30.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet34 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet35 = crawlerResult30.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet36 = crawlerResult30.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet37 = crawlerResult30.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL41 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray42 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL41 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet43 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet43, crawlerURLArray42);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet45 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray46 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet47 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet47, hTMLPageResponseArray46);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult49 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet43, hTMLPageResponseSet45, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet47);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet50 = crawlerResult49.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet51 = crawlerResult49.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet52 = crawlerResult49.getUrls();
        java.lang.String str53 = crawlerResult49.getTheStartPoint();
        java.lang.String str54 = crawlerResult49.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet55 = crawlerResult49.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet56 = crawlerResult49.getNonWorkingUrls();
        java.lang.String str57 = crawlerResult49.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet58 = crawlerResult49.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult59 = new com.soulgalore.crawler.core.CrawlerResult("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout", crawlerURLSet18, hTMLPageResponseSet37, hTMLPageResponseSet58);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet60 = crawlerResult59.getVerifiedURLResponses();
        java.lang.String str61 = crawlerResult59.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet62 = crawlerResult59.getUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet17);
        org.junit.Assert.assertNotNull(crawlerURLSet18);
        org.junit.Assert.assertNotNull(crawlerURLArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet31);
        org.junit.Assert.assertNotNull(crawlerURLSet32);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet33);
        org.junit.Assert.assertNotNull(crawlerURLSet34);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet35);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet36);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet37);
        org.junit.Assert.assertNotNull(crawlerURLArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet50);
        org.junit.Assert.assertNotNull(crawlerURLSet51);
        org.junit.Assert.assertNotNull(crawlerURLSet52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet55);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet58);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout" + "'", str61, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertNotNull(crawlerURLSet62);
    }

    @Test
    public void test08499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08499");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        java.net.URI uRI4 = crawlerURL2.getUri();
        java.net.URI uRI5 = crawlerURL2.getUri();
        java.net.URI uRI6 = crawlerURL2.getUri();
        boolean boolean7 = crawlerURL2.isWrongSyntax();
        java.lang.String str8 = crawlerURL2.getUrl();
        java.net.URI uRI9 = crawlerURL2.getUri();
        java.lang.String str10 = crawlerURL2.getHost();
        com.soulgalore.crawler.util.StatusCode statusCode11 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT;
        java.lang.String str12 = statusCode11.getFriendlyName();
        int int13 = statusCode11.getCode();
        java.lang.String str14 = statusCode11.getFriendlyName();
        int int15 = statusCode11.getCode();
        java.lang.String str16 = statusCode11.getFriendlyName();
        int int17 = statusCode11.getCode();
        int int18 = statusCode11.getCode();
        int int19 = statusCode11.getCode();
        int int20 = statusCode11.getCode();
        java.lang.String str21 = statusCode11.getFriendlyName();
        java.lang.String str22 = statusCode11.getFriendlyName();
        int int23 = statusCode11.getCode();
        int int24 = statusCode11.getCode();
        int int25 = statusCode11.getCode();
        boolean boolean26 = crawlerURL2.equals((java.lang.Object) int25);
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertNull(uRI4);
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertNull(uRI6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "com.soulgalore.crawler.auth" + "'", str8, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(uRI9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + statusCode11 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT + "'", statusCode11.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Response timed out" + "'", str12, "Response timed out");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 580 + "'", int13 == 580);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Response timed out" + "'", str14, "Response timed out");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 580 + "'", int15 == 580);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Response timed out" + "'", str16, "Response timed out");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 580 + "'", int17 == 580);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 580 + "'", int18 == 580);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 580 + "'", int19 == 580);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 580 + "'", int20 == 580);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Response timed out" + "'", str21, "Response timed out");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Response timed out" + "'", str22, "Response timed out");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 580 + "'", int23 == 580);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 580 + "'", int24 == 580);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 580 + "'", int25 == 580);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test08500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08500");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        int int5 = crawlerConfiguration3.getMaxLevels();
        int int6 = crawlerConfiguration3.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str8 = crawlerConfiguration3.getStartUrl();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int14 = assetResponse13.getResponseCode();
        int int15 = assetResponse13.getResponseCode();
        long long16 = assetResponse13.getFetchTime();
        long long17 = assetResponse13.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse22 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean23 = assetResponse13.equals((java.lang.Object) 100L);
        java.lang.String str24 = assetResponse13.getReferer();
        java.lang.String str25 = assetResponse13.getReferer();
        long long26 = assetResponse13.getFetchTime();
        boolean boolean27 = crawlerConfiguration3.equals((java.lang.Object) assetResponse13);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL30 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean31 = crawlerURL30.isWrongSyntax();
        java.lang.String str32 = crawlerURL30.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse40 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL30, (int) 'a', strMap34, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str41 = hTMLPageResponse40.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL42 = hTMLPageResponse40.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = hTMLPageResponse40.getResponseHeaders();
        org.jsoup.nodes.Document document44 = hTMLPageResponse40.getBody();
        boolean boolean45 = assetResponse13.equals((java.lang.Object) document44);
        int int46 = assetResponse13.getResponseCode();
        int int47 = assetResponse13.getResponseCode();
        int int48 = assetResponse13.getResponseCode();
        java.lang.String str49 = assetResponse13.getReferer();
        java.lang.String str50 = assetResponse13.getReferer();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "100" + "'", str24, "100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "100" + "'", str25, "100");
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "urls.txt" + "'", str32, "urls.txt");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str41, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(document44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "100" + "'", str49, "100");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "100" + "'", str50, "100");
    }
}

